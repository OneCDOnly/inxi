================================================================================
Version: 3.3.20
Patch: 00
Date: 2022-07-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

A good bug fix, and several very good indentation fixes that had always been 
around, and some of them known. More fine tuning of CPU process/built data. Bit
by bit it's getting filled out.

Thanks again mrmazda for all the suggestions and watchful eyes.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. CPU built, process are not perfect and complete and always right. Like life,
it's not perfect, but it is ok. Help complete the feature if it bothers you.

2. Intel Raptor Lake and related APUs are trickling out, but I have not found 
cpuid data for the cpu, or generation data for the apu. Was hoping to squeeze
that into 3.3.20, but looks like it will have to go into 3.3.21 or later.

--------------------------------------------------------------------------------
BUGS:

1. MrMazda pointed this out, the printer was not correctly indenting long values
in specific cases, not adding indentation level 1 when the key: value pair was
not the last item on the logical line. Subtle, but could hit Device, OpenGL, and
a few other cases.

2. When SMT is disabled, cpu speed from /sys can return <unknown>, which is a 
string, not the numeric value inxi expected. This trips multipe errors when 
speed cleaner is used. Thanks issue #273 reporter iamc for this one. My guess is
all during all cpu testing, none of us thought to disable smt to see what would
happen.

--------------------------------------------------------------------------------
FIXES:

1. On disk vendors, Initio isn't a vendor, it's either a misconfigured ide hdd, 
slave/master wrong, or bad usb controller. Initio is a default controller, not a 
vendor. Added pre-filter in disk_vendor() to remove that string if it appears.

2. Going along with bug 1, finally fixed long standing weakness with long value
wrapping, now continues to build line until it's done, and does not force a new
line after the last long value item.

3. Another glitch where last key: value pair was less than working width, but
total width was greater, was not wrapping correctly.

4. Saw a corner case Intel Core name: Core i7-1165G7 which did not use the 
expected intel (core number)(3 digits), modified to look for 3 digits after core
numer OR 2 digits + letter + digit.

5. Added 'tar' installed test for debugger, found cases in actual distros that
shipped without it in their minimal installs. Times sure have changed!

6. Another Centos type change, amazingly, this was shipped without lspci as 
well! No idea what went into the install ISO if this stuff didn't include the 
most elementary Linux tools. Added lspci missing error if linux and not risc and 
no pci_tool detected. I have to admit this is really surprising to me, I mean, I 
thought the entire purpose of the rhel family was to provide enterprise 
solutions, but to leave out such elementary tools required by every sys admin is 
very difficult to understand. This was centos 7.5. I believe Alma and Rocky 9 
minimal have those basic tools, so that's an improvement, though they didn't 
have tar.

7. Added a '-' between gen and gen number for Intel GPU generation output. Even 
though it's documented as for example gen9.5, it looks odd to see it that way, 
it's easier to read it as gen-9.5 I think.

8. Did same for AMD arch/codes, for numbered arch/codes like Rage 9, easier to 
read as Rage-9. 

9. Extreme corner case spotted by mrmazda, if KDE is started by TDE, inxi showed
Trinity, not KDE-Plasma as the desktop. Further, it failed to show Trinity 
version, maybe because Trinity was not installed?

10. Finally found cause of Tdie vanishing in favor of Tctl, a bad decision to
hide Tdie if Tdie == Tctl, why they did that, I don't know, but at least nwo, 
there will be AMD Zen cpu temp again.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1a. More or less completed verification of AMD cpu microarch/built/process, and
added more accurate fallback cases for stray model IDs.
* family 5h: K5, K6
* family 6h: K7
* family 7h: K8 - mostly done, needs some checks.
* family 10h: K10
* family 11h: K11 Turion X2. Note there is some uncertainy about this family 
name. Built years n/a yet. Mix of K8/K10
* family 12h: K12 Fusion, K10 based, first APU type?

1b. Extended Intel cpu data a bit more as well. Thanks linuxdaddy from slackware
for the research help there.
* family 4: mostly new, fine tuned, granular
* family 5: more granular, better date/process info.
* family 6: built dates added
* family F: corrected some overly specific stuff

2. Tentative support for finit init system (fast init). Runs in /proc/1/comm,
uses initctl, which may have been revived from its upstart days, not sure. Added
potential support for nosh, linux only, don't know how to detect other bsd init
system.

3. Added amd/intel gpu product IDs.

4. Added shortcut --filter-all/--za, activates all filters: -z, --zl, --zu, 
--zv. Why not?

5. Added support for dm types kdmctl and xdmctl, opensuse and maybe redhat use
the latter to start the actual dm running the desktop/wm. You want to see that 
because you need to do systemctl restart xdm to restart the actual dm. Thanks
mrmazda for pointing out this one.

6. Added AlmaLinux, RockyLinux, CentosStream to system base (RHEL derived).

7. Basic Raptor Lake gpu/apu support added, with patterns to detect since few 
product ids yet. Same applies to Arctic and Alchemist, which still have no 
product IDs.

8. More disk vendors and disk vendor ids, never stops - the waters flow on, the
rain falls, then the sun comes out. Until one day it doesn't.

--------------------------------------------------------------------------------
CHANGES:

1. Deprecated --gpu, now it works the same as -Ga, that was too granular and 
nobody would use it I think. Now that the new gpu features are solid, no need
for this special feature.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated docs/inxi-values.txt, it didn't have all the --debug-xxx options 
listed.

2. Split out some BSD data into docs/inxi-bsd.txt.

3. Big update on docs/inxi-init.txt, moved data to it from other files, updated
the init/service tool data.

4. Renamed init-data.txt to inxi-init.txt, renamed cpu-flags to 
inxi-cpu-flags.txt to be more consistent.

5. Updated help, man for new --filter-all option.

6. Updated help and man for --gpu deprecation.

--------------------------------------------------------------------------------
CODE:

1. Moved required perl modules and system programs checks to 
check_required_items() in debugger, why not? Also added an error handler for 
missing required programs, this is really the only one, and only for 
--debug >= 20
This is the only required program test inxi has in it I believe, really amazing
that such a core tool would be left out of an OS today.

2. Removed this redundant block of code from Network device_output() end 
section, that repeated in the main get() so didn't seem to serve any purpose. 
The test in get() is if n!@rows and if !%risc, same as here, so can't see any 
use for it. I'm leaving this here in case that did have some use, but I don't 
see it.

# we want to handle ARM errors in main get
if (!@$rows && !%risc){
	my $key = 'Message';
	my $type = 'pci-card-data';
	if ($pci_tool && $alerts{$pci_tool}->{'action'} eq 'permissions'){
		$type = 'pci-card-data-root';
	}
	@$rows = ({
	main::key($num++,0,1,$key) => main::message($type,'')
	});
}

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 27 Jul 2022 11:58:32 -0700

================================================================================
Version: 3.3.19
Patch: 00
Date: 2022-06-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This is a quick bug fix release, and one other fix, the bug only impact Debian/
Ubuntu distros.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Nothing new.

--------------------------------------------------------------------------------
BUGS:

1. Two repo_builders could create an undefined array ref situation, one in Antix
I have no idea was triggered since it requires an apt file be not readable but 
existing, which just isn't a normal debian/ubuntu situation. Void linux was the
other. Since those were the only two with a -r file test, there must be some 
case where the file was not readable, though I have no idea what that case might
be.

Further examination showed this can hit all apt based systems, the cause is no
/etc/apt/sources.list file, which is a possible scenario across all apt systems.

--------------------------------------------------------------------------------
FIXES:

1. Blacklisted all apcitz sensors that are not acpitz-virtual, which is the cpu
temp. This may help resolve issues for some users where for example using 
acpitz-acpi, which is not the cpu sensor.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. A few more AMD family F empirical IDs made.

--------------------------------------------------------------------------------
CHANGES:

1. None.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Started to split/merge inxi-data.txt and inxi-resources.txt into topic 
specific files, like inxi-sensors.txt, inxi-graphics.txt, etc. inxi-values and
inxi-resources have just gotten too big over the years.

--------------------------------------------------------------------------------
CODE:

1. Corrected in RepoItem possible use of undefined array references.

2. Finally, a full release tool!! inxi-perl/tools/release.pl. Validates man,
verifies pinxi commands to avoid errors, then updates man/options/changelog 
html pages for smxi.org/docs, and then syncs pinxi* files to inxi*.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 16 Jun 2022 15:43:00 -0700

================================================================================
Version: 3.3.18
Patch: 00
Date: 2022-06-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug release, replace 3.3.17 asap, most users will not experience the bug, but if 
they do, inxi stops right before the -D line. Failed to do an if defined test on 
an array ref that could be undefined or an array ref. That makes Perl very 
unhappy!

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. AMD family F, K8 series, will need more granular treatments to get the data 
to be more accurate and less generic. We got 2 IDs nailed from raw visual data 
confirmations and cpuid values, which leaves many, but good start. We will chip 
away (pardon the pun) at these more ambiguous IDs over time, but don't need to 
get them all done instantly, just eventually. Thanks slackware person linuxdaddy 
for doing really good research and actually looking at the cpu to find dates 
etc.

--------------------------------------------------------------------------------
BUGS:

1. Bug, fatal, caused by internal hash/array ref refactor of 3.3.17. Thanks 
alaymari github issue #271 for reporting this one.

--------------------------------------------------------------------------------
FIXES:

1. None except for code fixes to try to avoid the cause of the bug in Bugs 1.

2. Fixed nvidia eol try --gpu, it was showing backwards, with --gpu, not 
without, sigh.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added slimski dm data. That's a new fork of SLiM. Also guessing that brzdm
has same version -v output: brzdm version x.xx

--------------------------------------------------------------------------------
CHANGES:

1. None

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Refactors of core docs, ongoing, but will list those next release.

--------------------------------------------------------------------------------
CODE:

1. Cleaned up some array ref handling in subs, returned as: ($var1,$var2) = 
@{block_data(...)}, skipped initializing and creating scalar to hold the ref, 
just use it directly for DiskItem::block_data(). 

2. Also switched to local ref scalar array in DiskItem::scsi_data(), 
DiskItem::block_data(). Not set local array, set local array ref, to keep it 
clear. Also made DriveItem::drive_speed() return straight ref, not array then
ref. Same for many other subs, switched to ref assignment so it's the same ref
all through all the sub and return.

3. Fixed a redundant return \@$data to simply assigning to @$data ref, no return 
needed, in DiskItem::smartctl_data().

4. Tightened some returns of ref so that tests if good test @$ref, not $ref.
Trying to avoid more cases like issue #271.

5. Going along with array ref local/return, switched all hash refs to local hash
ref returning ref, and working local with ref. More efficient, avoids creating 
new refs over and over, dugh. This made a particularly large difference in CPU 
because in certain parts, new references were being created over and over, and 
subs were returning like \@arr or \%hash instead of declaring to start:
my $arr = []; my $hash = {};

Then working with the data from there on as an array or hash reference, to the 
same original reference, rather than creating new ones over and over, which Perl
then has to track til they expire.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 13 Jun 2022 11:22:20 -0700

================================================================================
Version: 3.3.17
Patch: 01
Date: 2022-06-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Rollout of advanced microarchitecture info continues, added AMD/Intel gfx 
devices, CPU built dates, process nodes, generation (in some cases, where it 
makes sense), etc.

Please note: the 3.3.16 > 17 releases require manual matching table updates. If 
you think disk or ram vendor, CPU or GPU process, release date, generation, etc, 
information is not correct: 

* FIRST: do the research, confirm it's wrong, using wikichips, techpowerup, 
wikipedia links, but also be aware, sometimes these slightly contradict each-
other, so research. Don't make me do all your work for you.

* Show the relevant data, like cpu model/stepping, to correct the issue, or 
model name string.

* There are 4 main manually updated matching tables, which use either raw regex 
to generate the match based on the model name (ram, disk vendors), or vendor id 
matching (ram vendors), product id matching (gpu data), or cpu family / model / 
stepping id matching. Each of these has its own matching tool at: 
  inxi-perl/tools/[tool-name].pl 
which is used to generate either raw data used by the functions (ids for gpu 
data), or which contains the master copy of the function used to generate the 
regex matches (cp_cpu_arch/set_ram_vendors/set_disk_vendors).

* Please use pinxi and inxi-perl branch for this data, inxi is only released 
when next stable is done, all development is done in inxi-perl branch. All 
development for the data or functions these tools are made for occurs in the 
tools, not in pinxi, and those results are moved into pinxi from the tools.

* Saying something "doesn't work" is not helpful, provide the required data for 
the feature that needs updating, or ideally, find the correct answer yourself 
and do the research and then provide the updated data for matching.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. GPU/CPU process node sizes are marketing, not engineering, terms, but 
work-around is to list the fab too so you at least know which set of marketing 
terms you're dealing with. As of around 7nm, most of the fabs are not using nm 
in their names anymore, TSMC is using n7, Intel 7, for example. While these 
marketing terms do reflect changes from the previous process node, more 
efficient, faster, faster per watt, and so on, and these changes are often quite 
significant, 10-30%, or more, they do not reflect the size of the transistor 
gate like they used to up until about 350nm. Intel will move to A20 for the node 
after 4 or 5, 2nm, meaning 20 angstroms.

Intel suggested million transistors per mm^2 as an objective measure (currently 
around 300+ million!! as of ~7nm), but TSMC didn't take them up on it.

GlobalFoundries (GF) stepped away from these ultra small processes at around 
14nm, so you won't see GF very often in the data. AMD spun off its chip fabs to 
GF aound 2009, so you don't see AMD as foundry after GF was formed. ATI always 
used TSMC so GPU data for AMD/ATI is I think all TSMC. Intel has always been its 
own foundry.

2. Wayland drops all its data and can't be detected if sudo or su is used to run 
inxi. That's unfortunate, but goes along with their dropping support for > 1 
user, which was one of the points of wayland, same reason you can do desktop 
sharing or ssh desktop forwarding etc. This means inxi doesn't show wayland as 
Display protocol, it is just blank, if you use su, or sudo start. This makes 
some internal inxi wayland triggers then fail. Still looking to see if there is 
a fix or workaround for this.

3. In sensors, a new syntax for k10-pci temp, Tctl, which unfortunately is the
only temp type present for AMD family 17h (zen) and newer cpus, but that is not
an actual cpu temp, it's:
https://www.kernel.org/doc/html/v5.12/hwmon/k10temp.html

"Tctl is the processor temperature control value, used by the platform to 
control cooling systems. Tctl is a non-physical temperature on an arbitrary 
scale measured in degrees. It does _not_ represent an actual physical 
temperature like die or case temperature."

Even worse, it replaced Tdie, which was, correctly, temp1_input, and, somewhat
insanely, the non real cpu temp is now temp1_input, and if present, the real
Tdie cpu temp is temp2_input. I don't know how to work around this problem.

--------------------------------------------------------------------------------
BUGS:

1. Fallback test for Intel cpu arch was not doing anything, used wrong variable
name.

2. A very old bug, thanks mrmazda for spotting this one, runlevel in case of 
init 3 > init 5 showed 35, not 5. Doesn't show on systemd stuff often since it
doesn't use runlevels in this way, but this bug has been around a really long
time. 

3. SensorItem::gpu_data was always logging its data, missing the if $b_log.

--------------------------------------------------------------------------------
FIXES:

1. Fixed some disk vendor detection rules.

2. Failing to return default target for systemd/systemctl when no:
 /etc/systemd/system/default.target
file exists. Corrected to use systemctl get-default as fallback if file doesn't
exist.

3. Fixed indentation for default: runlevel, should be child of runlevel: / 
target:

4. Fixed corner case where systemd has no /proc/1/comm file but is still the
init system. Added fallback check for /run/systemd/units, if that exists, safe
to assume systemd is running init.

5. Fixed subtle case, -h/--recommends/--version/--version-short should not print 
to -y1 width, but rather to the original or modified widths >= 80 cols. 
Corrected this in print_basic() by using max-cols-basic.

6. Forgot to add --pkg, --edid, and --gpu to debugger run_self() tool.

7. Fixed broken sandisk vendor id.

8. Finally found docs that explain, for some terrible reason, if Tctl and Tdie
are the same, sensors or kernel does not show Tdie, sigh...

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added AMD and Intel GPU microarchitecture detections for -Gx. These are not 
as easy as Nvidia because there is no one reliable data source for product ids.

2. Going with the -Ga process: .. built: item, -Ca will show process: [node] and 
built: years and sometimes gen: if available. Geeky, sure, not always perfect, 
or correct, but will generally be close. Due to difficultly in finding reliable 
release > build end years for example, not all cpus have all this data.

Using CPU generation,where that data is available and makes sense. Like AMD 
Zen+ is zen gen: 2, for example,. Because Intel microarch names are often 
marketing driven, not engineering, it's too difficult to assign gen consistently 
based only on model names. Shows for Core intels like: gen: core 3

That will cover most consumer Intel CPU users currently. 

3. Added initial Zen 3+ and Zen 4 ids for cp_cpu_arch(). There is very little 
info on these yet, so I'm going on what may prove to be incomplete or wrong 
data.

4. Added GPU process, build years for -Ga.

5. Added fallback test for gpus that we don't have product IDs for yet because
dbs have not been updated. Only used for cases where it's the newest gpu series
and no prodoct IDs have been found.

6. Added AMD am386 support to cp_cpu_arch... ok ok, inxi takes 9 minutes to 
execute on that, but there you have it.

7. Added unverified Hyprland wayland compositor detection.

8. By request, added --version-short/--vs, which outputs version info in one 
line if used together with other options and if not short form. With any normal
line option, will output version (date) info first line, without any other 
option, will output 1 line version info and exit.

9. More disk vendors, ids! Much easier with new tool disk_vendors.pl.

--------------------------------------------------------------------------------
CHANGES:

1. Deprecated --nvidia/--nv in favor of more consistent --gpu, that's easier to
work with multiple vendors for advanced gpu architecture. Note for non nvidia,
--gpu only adds codename, if available and different from arch name. For nvidia,
it adds a lot more data.

2. Changed inxi-perl/tools tool names to more clearly reflect what function they
serve.

3. Going with runlevel fixes, changed 'runlevel:' to be 'target:' if systemd.
Also changed incorrect 'target:' for 'default:'.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated man, help, docs/inxi-data.txt for new gpu data and tools, and to 
indicate switch to more generic --gpu trigger for advanced gpu data, instead of
the now deprecated --nvidia/--nv, which probably will go down as the shortest 
lasting option documented, though of course inxi always keeps legacy syntax 
working, behind the scenes, it's just removed from the -h and man page in favor
of --gpu. Also updated to show AMD/Intel/Nvidia now, since the data now roughly
works for all three main gpus.

2. Updated pinxi README.txt to reflect the tools and how to use them and what
they are for.

3. --help, man, updated for target/runlevel, default: changes for init data.

4. Updated configuration html and man for --fake-data-dir.

--------------------------------------------------------------------------------
CODE:

1. Upgraded tools/gpu_ids.pl to handle nvidia, intel, or amd data, added data 
files in tools/lists/ for amd. First changed name from ids.pl to gpu_ids.pl

2. New data files added for amd/intel pci ids, and a new tool to merge them and 
prep them for gpu_ids.pl -j amd|intel handling. All work. Took a while to get 
these things sorted, but don't want to get stuck in future with manual updates, 
it needs to be automated as much as possible, same as with disk_vendors.pl etc, 
if I'm going to try to maintain this over time.

3. Made all gpu data file names use consistent formats, and made disk data files 
also follow this format. 

4. Changed raw_ids.pl to gpu_raw.pl, trying to keep things easy to remember and
consistent here.

5. Refactored core gpu data logic, now all types use the same sub, and just
assign various data depending on the type.

6. Changed vendors.pl name to disk_vendors.pl

7. Big redo of array/hash handling in OutputHandler, was partially by reference, 
now is completely by reference. All Items now use and return $rows array ref as 
well, from start to finish, unlike previously, where @rows was copied 
repeatedly.

8. Going along with 7, made most internal passing of hash/arrays use hash/array
references instead, where it makes sense, and doesn't make the code harder to
work with.

9. Refactored WeatherItem, split apart the parts from output to be more like
normal Items in terms of error handling etc.

10. Added 'ref' return option for reader() and grabber(). Only useful for very
large data sets, added also default 'arr' if no value is provided for that
argument.

11. Switched some features to use grabber/reader by ref on the off chance that
will dump some execution time.

12. A few places added qr/.../ precompiled regex, in simple form, for loops,
maybe it helps a little. I don't know.

13. Added global $fake_data_dir, this can be changed via configuration item:
FAKE_DATA_DIR or one time by --fake-data-dir.

14. Created data directory, and initial data items. cpu is the fake data used to 
test CPU info. More will be added as data is checked and sanitized.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 10 June 2022 13:05:17 -0700

================================================================================
Version: 3.3.16
Patch: 00
Date: 2022-05-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

A nice release, some good corner case bug and glitch fixes, along with some much
needed documentation fixes to bring inxi-values.txt up to date for changes that
have been evolving steadily. And a useful option for nvidia legacy card info.

I'm hoping that will help support people and users as nvidia open source driver
gets more usable in the future, since that will never support legacy cards, only
the current series supported by 510/515 drivers.

Also, in inxi-perl/tools, new tools and data so you can reproduce certain arcane
data assembly features like disk vendors and nvidia product ids.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Not known yet if you can get Wayland display drivers along with kernel gpu
drivers. In other words, is a similar use of kernel/display driver as in Xorg
found with Wayland? Hard to dig up actual answers to questions like this.

2. Similarly, unknown if it's possible to get current active xorg display 
driver, not just the list from Xorg.0.log file. No idea how to discover that,
there are cases where past use of Xorg leaves log file present, but drivers are
not used with Wayland, leading to confusing driver reports. Issues 1 and 2 are 
similar but probably have similar solutions.

--------------------------------------------------------------------------------
BUGS:

1. Very subtle failure caused by odd mount point in partitions: a too loose 
regex rule designed to capture spaces in device names was running loose to the 
end of the string, where it was triggered by a number in the mount point. 

Fix was to make rule much more strict, now needs to match 3 number space in a 
row after the initial part, and then a number%

2. Bug in corner case, with Monitors, if > 2 connected monitors, and 1 disabled,
inxi was trying to test numeric position values for the disabled monitor, which
with xrandr, has no position values, thus tripping undefined pos-x and pos-y 
errors. Thanks to fourtysixandtwo for spotting this corner case.

3. Bug in wan IP, if dig failed, set_dowloader() is not set unless other 
parameters were used, which results in failing to set parameters for downloader,
which leads to screen errors spraying out. Thanks to Manjaro user exaveal for 
posting this issue, with error outputs, which helped pinpoint the cause.

--------------------------------------------------------------------------------
FIXES:

1. More absurd xorg port ID variations: DP-1 kernel, DP1-1 X driver. Wny? 
Trying to add in XX-?\d+-\d+ variation, which I think will be safe, made the 
first - optional, though it's just idiotic for this amount of randomness to be
allowed to exist in the 21st century. If this reflects other discipline failures
in Xorg, it starts to get somewhat more obvious why Wayland was considered as
the only forward path, though that's just as chaotic and disorganized... but in
different ways.

2. Removed darwin distro version detection, which of course broke, and using
standard fallback for BSD made out of uname array bits. If it works, it works,
if not, who cares. This should handle issue #267 hopefully.

3. Trying for more monitor matches, now in cases where 1 monitor display ID
remained unmatched, and 1 sys kms id remains unused, assume the remaining 
nonitor ID is a match and overwrite the unmatched message for that ID. This
will cover basically all single monitor match failure cases, and many multi
monitor failures with only 1 out of x monitor ids unmatched. While guessing a 
bit, it's not a bad guess, and will slightly expand the number of matched
monitor ids. This extends the previous guess where if single monitor and 
unmatched, use it to cover > 1 monitors, with 1 unmatched.

4. LINES_MAX configuration item did not assign to right variable when -1 value.
Used non-existing $size{'output-block'} instead of correct $use{'output-block'}

5. Forgot to add pkg to --force, goes with --pkg.

6. Finally! Added in busybox shell detection, it's not of course reliable if 
they change internal light shells, but all the docs say they use ash, so now
it will show shell: ash (busybox) to make it clear. Hurray!! This means that
tinycore users will get this long awaited feature! Ok, ok, long awaited by 
probably only me, but since I package inxi for TinyCore, it was on my todo list.

7. Cleaned up and re-organized many disk vendor matching rules, made them easier
to read and debug, going along with Code 3, vendors.pl development and release.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New feature: in -Ga, if Nvidia card, shows last supported nvidia legacy 
series driver (like 304.xx), status, microarch. If --nvidia and EOL, shows 
last-supported: kernel: xorg: info. This should be useful for support people, 
we'll see.

-Gx shows nvidia microarchitecture, if it was found. This is based on matching
tables so will go out of date if you have non current inxi's, but that's life.

If --nvidia or --nv shortcut is used instead, triggers -Ga and shows much more 
nvidia driver data for legacy, and for EOL drivers, last supported kernel, xorg, 
and last release version. --nvidia also adds process node if available.

More important perhaps is the fact that as of May 2022, nvidia is starting the 
process of open sourcing its current latest driver (515, but Turing, Ampere 
architectures only so far), which will only support non legacy nvidia cards, 
making detection of legacy cards even more important to support people and end 
users, since that will be a common question support people will have: does my 
card support the open source driver?"

Read about the new open sourcing of the 515 nvidia module:
https://developer.nvidia.com/blog/nvidia-releases-open-source-gpu-kernel-modules/
https://github.com/NVIDIA/open-gpu-kernel-modules
https://www.phoronix.com/scan.php?page=article&item=nvidia-open-kernel&num=1

2. Going along with new and upgraded tools in Code 3, massive, huge, upgrade to
disk vendors, 100s of new matches, biggest upgrade ever for disk vendors. This
feature should work much better now with the new backend tools.

3. Added shortcuts: --mm for --memory-modules, --ms for --memory-short.

--------------------------------------------------------------------------------
CHANGES:

1. None.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Big update to docs/inxi-values.txt. This had gotten really out of date, with
incorrect hash and other internal data assignments, all updated to be current,
along with sample greps to make it easier to locate changes in the future as 
well. This makes this document fairly up to date and useful again for dev 
reference purposes, should such a dev ever appear, lol. Many values had not
been updated after global refactors, like switching to the %risc data for all
arm/mips/ppc platform types, and making %load, %use, %force, %fake uses more
consistent. Doing this helped expose some subtle bugs and failure cases in
inxi as well.

2. Added to -h and man -Ga Nvidia option info. Fixed some typos and glitches. 
Includes new --nvidia / --nv options for full data.

--------------------------------------------------------------------------------
CODE:

1. Changed $dl{'no-ssl-opt'} to $use{'no-ssl'} and $dl{'no-ssl'}, that was a 
confusing inconsistency.

2. Added comma separated list of --dbg numbers, since often > 1 is used. Saves
some debugging time, otherwise nothing changes.

3. Huge new public release of some back end tools in new section: 
inxi-perl/tools
* vendors.pl - disk vendors tool, with data in lists/disks*.txt
* ids.pl - nvidia product id generator tool, with data in lists/nv_*

4. While doing vendors.pl, I noticed that the use of array ref for $vendors was
not done correctly, that's fixed now, simplifies it slightly.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 19 May 2022 13:02:00 -0700

================================================================================
Version: 3.3.15
Patch: 00
Date: 2022-04-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix, it's a bad edid data bug, rare, but when it trips, kills inxi execution 
dead right before -G/Graphics shows. Also some nice fixes and enhancements.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Possible case of Gnome Wayland failing to set any gnome environmental 
variables, making wayland detection not possible. This was in anonymous dataset 
inxi-proBook4540s dataset. Person never appeared in real life so can't follow up 
on it. This cascaded down to other failures in display detection, and desktop 
detection, though in theory much of the data needed was present. I expect 
similar issues may appear with kde wayland. This is/was probably a configuration 
or build error I believe, though not enough data yet.

It appears that sudo start disabled the display environmental variable 
detections, which is unfortunate, and the fallback loginctl tests do not appear
to work for unknown reasons. I've confirmed this on Fedora stock Gnome as well.

--------------------------------------------------------------------------------
BUGS:

1. Forgot to test that return from get_display_manager is array ref, this 
impacts only a tiny handful of distros probably, TinyCore was one, but it is a 
fatal failure, so fixed it. Never trips in console, only on tiny linux where no 
dm is used at all. Tripped with Xvesa, seen other bug reports, but not enough
data to know for sure.

[2022-04-09 update] It turns out that basically when $DISPLAY is set, but no DM
detected, for example starting wayland sway from tty, the issue also appeared.
See Debian issue:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1009089
inxi currently has no way to detect a tty start of a wayland compositor, or of
xvesa, so this was an entire class of bug, corrected, but not actually handled.
Ideally inxi could detect a tty compositor start, though technically showing
dm: N/A is correct since there is none running, but dm: tty-start would be nicer
since it would be more informative. But do not know how to do that yet.

2. EDID errors and warnings had several bugs, errors a fatal critical bug which
made execution stop. Had forgotten to pass the $edid hash reference to the error
constructor. Also had used wrong hash key in output so would never have shown.

--------------------------------------------------------------------------------
FIXES:

1. Corrected ram device indentation levels.

2. Made memory width more clear with: width: data: total: which more
accurately reflects the source data. Also in cases where no data or total 
values, only show width: N/A, not the data: total: sub items.

3. Made edid errors/warnings output to numbered list of warnings/errors instead
of using join() to made one long list. Much more consistent that way. This fixes
issue #266 - thanks SheridanOAI for finding this bug.

4. In --slots, -x wasn't loading the bus ID so it showed N/A, unnecessary data 
collection granularity, removed.

5. For Display, if no X or gpu driver, show: driver: N/A. Showed driver: gpu: 
N/A before.

6. For Display, remove filters for Xwayland tests, we always want to see 
xwayland data if it's installed. This was actually an error to not show it since 
display_server_data already had the correct tests to not redo Xorg data if found 
previously, which would be glxinfo based data. This is a partial fix also for 
Known Issue 1, at least we'll see Xwayland is present even if Wayland detections
failed for unkonwn reasons.

7. Added some ram value dmi filters, found some that had 'none' or 'unknown'.

8. Show display protocol out of display!! Also handles most common root use 
cases as well, so in most cases, if the initial protocol detections failed, this
will result in a decent attempt, though if root it is less reliable. sudo or 
regular user will be fine since looks for not tty/pts TTY type and username.

This should also help narrow down Known Issue 1 failures, though there are more
cases to be dealt with, but can only chip away since not enough data.

9. Made info: item in slots more robust, and able to handle more diverse 
scenarios.

10. Added alternate syntaxes for dmidecode permissions errors.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added brzdm clogin mlogind xlogin display managers. Not verified. Version for
brzdm is probably like slim since brzdm is a fork of slim.

2. Added voltages to ram module report, that had been left out. Note that it's 
common for voltages to be either 'unknown' or not present at all. This is as 
close as inxi can get to handling issue #265 since there is no other source for 
the requested data type (show DDR3L, low voltage DDR3, which doesn't exist as a 
type in dmidecode).

3. Added voltages to --slots report, --slots -xx. Only shows if present.

4. Added for --slots -a for Linux, if detected, the PCI children of the bus ID 
of the slot. This is recursive, so supports as many levels as are present, 
though it would be rare for there to be more than one level of children.

--------------------------------------------------------------------------------
CHANGES:

1. In -m ram report, moved ram type before size/speed/voltage, that makes more 
sense.

2. Also in -m ram report, make type: the default value (was an -x options 
before), which contains the no module found messages etc, making the order:
  Device-1: DIMM 0 type: no module installed
  Device-2: DIMM 1 type: DDR4 size: 16 GiB speed: 2400 MT/s
  
This puts all the speed/size/voltage data together, and stops putting the no 
module found message in speed, which never made any sense.

2. In -m, changed width data to more clearly reflect the data source:
      width (bits):
        data: 64
        total: 72

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Man page, added a TABLE OF CONTENTS section which lists all the primary 
sections. Can help since the man page has gotten so darned long and man doesn't
as far as I know support clickable internal links, sadly.

2. For -m, updated for revised output syntax and -x levels. Note that the help
and man actually had the type: as default for -m, not -mx, but for some reason,
the code had it wrong. Oops.

3. For -m, fixed some legacy output syntax in the examples.

--------------------------------------------------------------------------------
CODE:

1. Some refactors of slots, ram, as well as a bit more refactoring of edid stuff
for graphics. 

2. Added $ENV{'DISPLAY'} to debugger data collector, no idea why that was left 
out.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 8 April 2022 22:46:26 -0700

================================================================================
Version: 3.3.14
Patch: 00
Date: 2022-03-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man. Continuing development of EDID and monitor features, bug 
fixes, normal fixes. 

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Failed to handle case for monitor positions of array type: 2-2, 3-1, 1-3, 
4-4. I'm not sure what structure those are really arranged in, but might be 
worth adding in the x+y pos values along with the row-col values.

2. For Monitors and graphics Device ports, if using non free nvidia driver and:
nvidia-drm.modeset=1 not set in grub kernel boot parameters, there will be no
/sys/class/drm data for the nvidia device, and thus no ports data, and no 
monitor data. 

3. A class of high count DP or DVI port IDs are changed by Xorg drivers to for
example: DP-6 > DP-2-3. This is very difficult to handle and will in general 
probably fail unfortunately because that level of port ID abstraction is just
reazlly hard to deal with dynamically.

4. A to-do item: add bus ID children on --slots. This will probablby be in next 
inxi.

--------------------------------------------------------------------------------
BUGS:

1. None outside of the various fixes.

--------------------------------------------------------------------------------
FIXES:

1. In sensors, failed to pull out BAT sensor data. In most cases, this would not
lead to any issues, but it could have.

2. This one just slipped my mind, I'd meant to do it, but in Montitor-x:, the
primary ID should have been the 'real' kernel ID, not the mapped: ID, which is 
the X.org ID when different from the kernel ID. So mapped should be the Xorg 
version when they are different from the kernel version.

3. In Graphics, monitors can show > 1 ratio, failed to set all to :, resulting
in: ratio: 3:2 or 16/10 modes:. Also fixed ParseEDID to output an array of 
ratios, which can then be processed as wanted.

4. Monitor map fixes:
* Handle case in monitors where display ID: eDP and sys ID: eDP-1, this only 
works if 1 monitor in array. There's a variety of this type of failure, when 
X.org or its drivers decide to call the port ID XYZ with no number at all. All 
those possible cases are now handled, like eDP > eDP-1, VGA > VGA-1, and so on.

* Added fallback, if no match, and if only 1 monitor, just map them to eachother
if other mappings failed. Prompted by things like: s: DP-6 > d: DP-2-3; 
s: eDP-1 > d: DP-4, which are just impossible to create logic to map.

5. Removed 'ati' driver from xorg drivers list, it's simply a wrapper for r128, 
mach64, or radeon (and maybe amdgpu), and shows as failed, unloaded, or loaded, 
because of this. ati basically assigns the correct driver, that is, but is not 
itself a driver. Thanks mrmazda for spotting this issue.

6. Typo on QDI => Quantum Data.

7. Added fallback for monitor model, now using vendor code plus product code 
if nothing found for vendor nice name or model. This will show as 'model-id:'
instead of model: to help differentiate the two.

8. Added Monitor product_code to manufacturer if no model name is found.

9. get_pci_vendor was trimming at ' / ' if the product string also contained 
' / '. Fix is to ignore 1 character 'words' in the logic.

10. In Slots, failed to remove_duplicates in the slot info field, leading to 
redundant output strings. See Enhancement 3 and Code 4.

11. See Change 3, finally made -S section use full key: value pair, which makes
stuff more explicit, like:

System:
  Host: yawn
  Kernel: 5.16.0-11.1-liquorix-amd64
    arch: x86_64
    bits: 64
    compiler: gcc
      v: 11.2.0
  Desktop: Xfce
    v: 4.16.0
    tk: Gtk
      v: 3.24.24
    info: xfce4-panel
    wm: xfwm
      v: 4.16.1
    vt: 7
    dm:
      1: LightDM
        v: 1.26.0
      2: SDDM
        note: stopped
  Distro: Debian GNU/Linux bookworm/sid

12. Fix for mageia and lsb distro data, force use of os-release for mageia if
detected. That overrides the forced use of lsb release for mandrake/mandriva,
because for some reason mageia has decided to carry ALL the legacy distro files:
'/etc/lsb-release',
'/etc/lsb-release.d',
'/etc/mageia-release',
'/etc/mandrake-release',
'/etc/mandrakelinux-release',
'/etc/mandriva-release',
'/etc/os-release',
'/etc/redhat-release',
'/etc/system-release'
which is really not what this stuff is intended for, if it's an actual derived 
distro from a living base, then yes, include the base file, but all these have
the same distro id data for mageia, none for the derived distros.

Also, fixed an lsb release thing to avoid using codename if codename contains 
release number as well. Since lsb_release is totally legacy at this point, who
cares if we might miss a specific codename here and there on legacy system.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added Color Characteristics to EDID parser, for some reason that had been 
left out. 

2. Added advanced EDID output option --edid, that allows for showing more 
advanced EDID data than is appropriate for most users cases. Ihcludes errors,
color characteristics chroma: (chromacity), full modes, not just min/max.

3. In --slots, added bus-ID. 

Also extended report quality, made more granular, got rid of single blob from
Type and Designation and now get more accurate and useful data. 

4. In cases with > 1 DM, check to see if one or more are stopped or disabled, =
and add (stopped) if it was detected in running service as stopped.

--------------------------------------------------------------------------------
CHANGES:

1. Reversed monitor ID and mapped: ID values, that was a mistake, the mapped: 
item was supposed to contain the X.org mapped name, and the primary ID was 
supposed to be the actual real ID the kernel uses. Not a huge deal either way,
but there it is.

2. Include disabled but connected Monitors. This works around nvidia bug showing
monitors disabled when they are enabled, but also allows for showing connected 
monitors, though without as much data.

3. Made the last holdout -S > -Sa use strict full key: value pair output, like
Desktop: XFCE v: 4.14.12 and so on.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Added help/man for --edid info.

--------------------------------------------------------------------------------
CODE:

1. In ParseEDID: made new key: edid_error, which contains an array ref of 1 or
more edid errors. The previous version did a poor job and returned only the 
first error found, so there could have been > 1 error, and you'd never know it.

This changes check_parsed_edid to _check_parsed_edid(). and adds a utility tool
_edid_error, which grabs the message from main::message, giving better output 
integration.

This also allows for future error handling expansion quite easily.

2. In map_monitor_ids() fixed matching pattern, made more robust and explicit,
to catch things like s: eDP-1 d: eDP or eDP-1-1, both have been seen. Also added
fallback for single monitor, just map them to eachother if mapping failed.

3. get_pci_vendor() added test for using anything that is 1 character length,
to not break on 1 character length string matches.

4. Fully refactored --slots, that was originally written purely as a proof of
concept in terms of adding a new feature during the original inxi 2.9 rewrite,
and was never actually touched after that.

5. Added option to reader() to return array ref, if expecting a large file can
be useful.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 24 Mar 2022 12:01:50 -0800

================================================================================
Version: 3.3.13
Patch: 00
Date: 2022-02-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Just as 3.3.10 > 3.3.11 were a huge set of CPU upgrades, including significant 
internal refactors, so too is 3.3.13 a significant Graphics upgrade, featuring 
significant upgrades to Wayland (and Xvesa/TinyX!) support, and allowing for 
much more granular output controls. The legacy -Ga showing 
Display/Screen/Monitors is now split apart, and can now work for some features 
in and out of display.

This upgrade should be of significant interest to any Wayland using distro, as
well as the tiny Xvesa based distros like TinyCore, Slitaz, and Puppy.

--------------------------------------------------------------------------------
NOTE TO MAINTAINERS AND PACKAGERS:

If you had Cpanel::JSON::XS or JSON::XS Perl modules as dependencies, you can 
remove those, inxi now can use JSON::PP, which is in Core Modules since Perl 
5.14 (unless for some reason your distro removed that module from Core Modules).

Basically inxi will simply look for whichever of the 3 is installed, and use 
that one. 

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. The free drivers for xorg like amdgpu, modesetting, alter the the internal 
kernel IDs for monitors/gfx device ports, which is somewhat bizarre since the 
ideal role of any ID is to be an identifier that always works. Due to this 
situation, inxi has to map the kernel ids to the x driver monitor IDs in order
to show the advanced monitor data, like model: mapped: and modes:. This may not
always work as expected since if the mapping fails, the data will fail to match
to the monitors. While not enough data is in to make any conclusions, hoping 
that this issue does not exist on Wayland compositors.

--------------------------------------------------------------------------------
BUGS:

1. Not sure if this was a bug, but I believe RAM vendor ID matches would never
have generated results, and might have generated errors. That's corrected as 
part of Code fix 1.

--------------------------------------------------------------------------------
FIXES:

1. Tiny indentation level issue, for -Ga, Monitor was not set to be a container 
for its data. This would only impact -y 1 or json and xml output cases, and would 
be subtle, but it was an oversight.

2. Small fix for monitor dimensions, failed to switch the mm dimensions for 
monitors placed in a vertical, portait mode, instead of standard landscape mode.
Now switches mm x and y if that is detected, which corrects dpi as well.

3. For Xvesa:

* Show vesa as display driver, Xvesa == vesa, dugh,lol.

* Show better Interface and Screen resolution data missing messages.

* See FIX 5 for adding in display-ID:.

* Show TinX Xvesa string for server data, not just Xvesa.

4. For Wayland, which currently has no EGL support in inxi, if no glxinfo 
present, show EGL Wayland specific Messsage: for advanced EGL data, not the 
generic glxinfo that were shown previously.

5. Display was relying on xdpyinfo or a Wayland environmental variable to set
display-ID:, now falls back always to $ENV{DISPLAY} if nothing else was found 
and that exists. I hadn't realized how much was depending on those x tools, 
which many people never had installed in the first place. This also supplies
that for Xvesa as well, which has features that need the Display-ID to use.

6. Intel family 6, model 17h, supposed to be yorkfield, was penryn, fixed.

7. Small fix for remove_duplicates, it was not case insensitive so missed things
like DELL Dell in strings.

8. Failed to detect or get Xfree86 X server version number.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Extensive Graphics Upgrades:

* -Gxx Devices: For some gpus / drivers, show vram total and used for -Gxx. 
amdgpu supports this, I believe it's the only one, but don't know for sure.

* -Gxx Devices: (Linux only): Show active, off (connected but disabled, like a 
closed laptop screen with attached moniitor), and empty ports on devices. Not 
tested for USB yet.

* -Gxx Devices: Show device ports (like VGA-1, DVI-I-1, HDMI-A-1), active, off 
(off is connected but disabled) and empty (linux only).

* -G Display/Screen: Removed strict dependency on xdpyinfo to show advanced xorg 
screen and display data. Now it will show most of the data if xrandr is 
available, and all if xrandr and xdpyinfo are installed. More granular error 
messages as well.

* -G Wayland Display: new type, d-rect: for > 1 monitor Wayland display layouts. 
Works roughly the same as Screen: s-res: does, except since Wayland has no 
'Screen' concept, that goes into Display. This is sort of a rough algo, 
basically it takes either the dimensions of the total of x and y resolutions, or 
the greatest x or y resolution found for any monitor, whichever is greater, and 
uses that to create the display rectangle resolution composite value.

* -G Display, Monitors: Extended display tool options from just xrandr to 
swaymsg, wlr-xrandr, weston-info, wayland-info. Still nothing on kwin_wayland or 
gnome-shell and mutter data.

*. -S, -G: compositors, full redo of list, now supported: 

asc awc cage cagebreak cardboard chameleonwm clayland comfc dwc dwl epd-wm 
fireplace feathers fenestra glass gamescope greenfield grefson hikari hopalong 
inaban japokwm kiwmi kwinft  labwc laikawm lipstick liri mahogany marina maze 
motorcar newm nucleus orbital perceptia phoc pywm qtile river rustland simulavr 
skylight sommelier sway swc swvkc tabby taiwins tinybox tinywl trinkster velox 
vimway vivarium wavy waybox way-cooler wayfire wayhouse waymonad westeros 
westford weston wio+ wio wxrc wxrd xuake

* -G Enhanced Interfaces/GL item, previously only type OpenGL forX, now has:

  * X - OpenGL, requires glxinfo , same as before.

  * Wayland - EGL, currently no tool available, stub in place. Allegedly this 
  data can be found but have no idea how or if a tool does that yet

  * Xvesa - Interface: interface type (VBE/GOP). GOP not confirmed, no data 
  samples; v:, source:, dac: (no idea what it is, show it though), controller:, 
  and ram: items. 

  This is based on TinyX/Xvesa as found in TinyCore, but should work in Slitaz
  and Puppy TinyX as well if those projects are still around.

* -G Display/Screen/Monitor data: Created structures and abstractions that allow 
for Wayland/Xorg/Xvesa data, most new features will work with any of these. Or 
Arcan, if that actually makes it, and we get data for it. We'll wait on Arcan, 
heh.

* -G Display server: For Xvesa, added type TinyX to server if detected. Added 
Xwayland, which was not handled previously. For Xwayland, if wayland running,
and if Xorg also installed, shows:

  server: X.org
    v: 1.20.14
    with: Xwayland 
      v: 21.01
  
Otherwise shows:

  server: Xwayland 
    v: 21.01

* -G Compositors: fixed a long standing weak spot, if > 1 compositor detected 
running, not common, but could happen, shows all detected compositors.

  Display: x11
    server: X.Org
      v: 1.20.13
    compositors:
      1: Mutter
        v: 41.1
      2: xfwm
        v: 4.16.1
    driver:
      X:
        loaded: modesetting
      gpu: radeon

* -G drivers: now shows if X or gpu driver, in each its own section. This makes
it more obvious what is going on:

  Display: x11
    server: X.Org
      v: 1.20.13
    driver:
      X:
        loaded: modesetting
      gpu: radeon
    resolution:

* -Gxx Monitors: Show primary monitor with pos: primary,right. Uses either 
xrandr 'primary' value, or if no 'primary' found in an Xorg Screen, uses +0+0 
positioned monitor. Position is based on the row and column number in the 
rectangular grid of monitors when monitors per Xorg Screen are > 1. 

For most common multi-monitor layouts, text positions are used, which are in 
general more clear and easy to understand than their internal numeric 
counterparts, that is, unless the layout is too complicated, it will show left, 
or top-left, instead of 1-1, and so on.

Text mode positions are available for the following grid styles currently: 1x2, 
1x3, 1x4, 2x1, 2x2, 2x3, 3x1, 3x2, 3x3. 'top' means the top row if > 1 row, 
'bottom' means the bottom row, 'middle' is the middle row if 3 rows, 'left' is 
the first column, 'right' the last, 'center' if 3 columns, and 'center-l' (1-2), 
'center-r' (1-3) are the 2 center columns if 4 columns. 'bottom-l', 'bottom-c', 
'bottom-r'; 'middle-l', 'middle-c', 'middle-r'; 'top-left', 'top-center', 
'top-right' complete the possible values. 

If the grid of monitors is greater than the supported rows or columns, it will 
switch to numeric row-column mode, with column-row numbering starting at 1-1, 
top left.

* -Gxx Monitors: show (if detected, Linux only) monitor model, and if the 
display ID (from Xorg or Wayland) is different from the /sys monitor ID, show 
mapped: to show the /sys id.

* -Gxxx Monitors: show modes: max: XxY min: XxY, or mode: XxY (if only 1 mode 
found). Shows hz:

* -Ga Monitors: shows serial, built year, gamma, ratio, if detected.

2. Added impish 21-10 and jammy 22-04 to ubuntu id. That's for Mint base ID. Not
huge point in updating if Mint doesn't update inxi, but there it is.

3. For -Axx, -Exx, -Gxx, -Nxx, shows PCIe speed and lanes. With -a, shows max 
speed / lanes if different than current speeds/lanes. Note that for unknown 
reasons not all devices in a PCIe slot show this data.

4. -Ixx: terminals added: foot, ate

5. -Sxx: login/display managers added: emptty, greetd, qingy, tbsm. See CODE 5 
for more info on how this change was done.

6. -Sxxx: status/dock/panel bars added: i3-status-rs, luastatus, nwg-bar, 
nwg-dock, nwg-panel, rootbar, sfwbar, wapanel, waybar, yambar

7. Added a Tyan board IPMI sensor data set.

8. Added support for fruid_print for Elbrus -M Machine data. Those boards don't
have dmi tables, but do ship with Elbrus OS which has fruid_print.

9. More disk vendors! Yes, you know the drill, the world turns, and with every
turn, a flock of new vendors appears, like baby rabbits emerging from their 
warren, endlessly, a stream that is the life essence itself... or something.

--------------------------------------------------------------------------------
CHANGES:

1. When xdpyinfo is not installed, user will still see advanced -Ga Monitor and
Screen data as long as xrandr at least is installed. Better error messages as 
well now to explain which tool or tools missing caused the missing data.

2. -Gxx will show basic Screen and Monitors, id, mapped, pos:, model, res, dpi, 
diag; -Gxxx adds Monitor modes; --Ga adds screen/monitor size, Screen diag.

3. -ba/-v2 no longer show the full screens/monitor report, now it remains basic 
mode output, which it should have always done, unless -G is also explicitly 
added.

4. Split apart x-server version to v:, which should always have been the case.

5. Xvesa and Wayland no longer show glxinfo messages for no glxinfo for GL data.
Now they show their own custom messages, appropriate to the case.

6. json features now test for JSON::PP, JSON::XS, or Cpanel::JSON::XS modules,
and use whichever is found. Note I did not realize JSON::PP was in core modules
as of 5.14 so that makes sense to use, and will allow inxi to start using json
data sources, which are a lot easier to parse.

7. Changed -G drivers to show subsections for X and gpu drivers, and updated 
missing driver messages to account for this change. X drivers now show the sub
sets of loaded/unloaded/failed/alternate, and gpu shows active gpu drivers,
assuming such are detected.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Help and man page updates for -G Display/Screen/Monitor changes. Redid -G, 
-Gx, -Gxx, -Gxxx, -Ga. Added monitor layout position feature.

2. Updated -Ga for xrandr/xdpyinfo changes.

3. Updated --recommends to more accurately show function of xdpyinfo and xrandr
for -G and -Ga.

4. Reorganized and added complete table of contents to docs/inxi-data.txt

--------------------------------------------------------------------------------
CODE:

1. Slightly optimized use of array loads on disk_vendor() and ram_vendor() based 
on how it's now done for monitor layouts, which is more efficient, use a scalar 
to hold a reference to the array, that avoids having the array ever exist in 
more than 1 place. Part of the ongoing process of avoiding extra hash and array 
copies globally. 

2. Moved to consistent undef behaviors. 
 * For lists of variables use () to undefine, changed all of the the following: 
    1. (@a,$b,$c,%d) = (undef,undef,undef,undef);
    2. (@a,$b,$c,%d) = (undef);
    3. (@a,$b,$c,%d) = undef;
   to use: (@a,$b,$c,%d) = (); This undefines all the variables in the list.
   Note that assigning undef to @a in the first example creates an array of 1 
   key, with the value undef, and (@a,@b) = (undef,undef) creates arrays of 2
   indexes, or something like that. Not what was wanted.
   Examples 2 and 3 assign undef to @a: an array of 1 index, value undef, and 
   undefine the others variables in the list. This was not the desired behavior!
 * For most scalars, arrays, and hashes, use: undef @a; undef $s; undef %h.
 * For some hash and array index values, use $h{a} = undef. These cases may want
   the key itself to exist, with the value of undef, though I believe: 
    undef $h{a};
   is synonymous, but still have to verify that. 

I did some testing, and realized that some of the undef I had used in the 
various previous ways of using undef were not actually resulting in the expected 
behaviors.

3. Refactored display_data_x into 3 functions, added display_data_xdpyinfo and 
display_data_xrandr, which allows for more granular handling of those 
dependencies, now inxi can show most advanced display data with only xrandr
installed.

4. Significantly improved all error handling and missing data for Wayland/Xorg.

5. Refactored get_display_manager() to better handle corner case dm file or 
directory names, and to avoid endless loops. Much cleaner now. Required because
greetd had varying file names, greetd.run, or just greet-546.sock. With some 
other dm's that use similar, or unreadable directories in /run, now just doing
a glob of /run/ /var/run, /var/run/rc.d as detected and checking for the dms
in the names, then just using the dms that were found. Simpler.

6. Massively simplified and integrated compositor logic in Graphics, now using
program_values() and program_data() as appropriate, and simple matching list 
to ps_gui data to get detected compositor[s], much simpler, far more efficient 
code, less to maintain. Also fixed long-standing weak spot of exiting on first
detected compositor, now shows all detected, with version etc for each if 
available.

7. With 6. also significantly simplified and optimized get_ps_de_data() for 
desktop data, that's the ps aux fallback case for wm desktop detections. 

8. Made $wl compositors list global to avoid having to update each section, 
that's now used in -G compositor, -S desktop/wm, and wm sections. It is set 
in ps_gui() on initial load.

7. Settled on one and only way to do multiline conditionals, now use no space, 
use same indent level as starting if/elsif etc. I've been debating this one, but
can't find any real way to handle that elegantly so I think best to just not 
try, and leave it up the code flow to show when it's wrapped condition tests.

8. Refactored previous gl_output, expanded it to handle all interface types, 
OpenGL, EGL (not currently active due to no known tool to get EGL data for 
Wayland, and Interface: VBE type data for Xvesa. This roughly completed the 
breaking apart of the X.org centric logic for Display, Monitors, and GL data, 
and make all sections now fully agnostic to display server or protocol type. 

Should new display servers appear, it will now be far more simple to add support 
for them, since they would just plug into the existing abstraction layers.

9. Added --debug-arg to allow for passing specific custom args to the debugger.

10. Refactored display_server version, now works much better, creates lists of
server/version, and xwayland as well if found.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 22 Feb 2022 15:30:24 -0800

================================================================================
Version: 3.3.12
Patch: 00
Date: 2022-01-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small point release with some useful fixes, some bugs corrected, small 
enhancement.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Note on KNOWN ISSUES 2 from 3.3.10, I realized that the second level 
indentation actually takes care of that hanging parent, since now it's quite 
clear that its children are indented on the following line. So that issue took 
care of itself.

--------------------------------------------------------------------------------
BUGS:

1. In $bsd_type cases, specifically SunOS triggered this, where sysctl was not
present (which it always is in all other BSD types), it tripped an error due to
failure to update to revised $alerts{'sysctl'}->{'message'}, instead was using
the old method. Failed to update that in refactor of CheckTools logic. Would
impact no supported operating systems, but is a bug.

2. Corner case, a combination I never used, inxi -a, triggers error in the RAID 
logic because the mdadm test was not run, generating an undefined eq error. Only
happened when mdraid was present and used on system.

3. Tiny bug, for st+mt cpus, like alder lake,  was printing out second tpc by 
accident which made it look like it said st: 4 tpc: 2. Just a small output
glitch.

--------------------------------------------------------------------------------
FIXES:

1. Added some fallback 32 bit system tests, [2345]86, like i386, i686.

2. Changed shell: Unknown Shell to shell: N/A, that was a legacy use, and was
obviously redundant. N/A is more consistent with rest of output no value found
handling. Due to requirement of doing empty tests, this is set in the data, not
output, generator component.

3. Refactored partition data logic to get rid of bsd tests for df -kTP, -kT, -k.
Now tests only to see if returns data, cascades down until it gets something. 
Now will attempt to reconnect hanging lines when no -P feature available prior 
to main partition data processing. This makes it agnostic to os issues, and it
just pays attention to feature support. 

Also adds in dynamic column count instead of hard-coded, this avoids oddities
and future proofs to some degree. Now systems will adapt seamlessly if support
for -P appears, or -T, or whatever.

4. Partitions corner case, where has zram, but has no partitions, failed to show
partitions no data found message since @partitions had data in it, but nothing
for partitions output to print. Seen in TinyCore for example, but might happen 
in other ram based systems.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added Slint to distro ID, and slint/slackware to system base.

--------------------------------------------------------------------------------
CHANGES:

1. None

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Typo in man page fixed.

2. A few more edits and corrections on 3.3.10 changelong. That thing was written 
concurrently with the development, and thus had lingering errors when things 
were changed in midstream.

--------------------------------------------------------------------------------
CODE:

1. Added --cygwin and --android fake system type flag. Switches on $b_android/
$b_cygwin flags.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 18 Jan 2022 14:02:54 -0800

================================================================================
Version: 3.3.11
Patch: 00
Date: 2021-12-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Quick bug fix release. With as many changes as we got in 3.3.10, there were 
bound to be a handful of oversights that were not caught in testing simply 
because those hardware scenarios were not present in the tested systems.

Also minor feature enhancement for CPU scaling min/max speeds.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Due to the huge amount of changes, and the speed of change, while the new 
code is working as intended, it's somewhat lacking in coding elegance since a 
lot of it was hacked out very quickly, in near real time. This will get cleaned 
up and refactored to be less redundant if it does not impact execution speed, 
but is not pressing since there should be no functional difference.

--------------------------------------------------------------------------------
BUGS:

1. Tiny oversight, in single case CPU model id would fail because it was using
an undefined test from previous tests, not the right test, that is. Tripped
error on Elbrus for example.

2. Typo in battery secondary type status, created undefined value error. This 
was a recently created bug.

--------------------------------------------------------------------------------
FIXES:

1. PPC revision change broke Elbrus revision test for stepping. Added in more
tests to show stepping for elbrus revision.

2. Single core Elbrus in cpuinfo fallback mode failed to assign core multiplier
so L1 cache failed.

3. In cpuinfo fallback mode, Elbrus E2C3 cache data failed to appear, that data
is not per block in cpuinfo, but is the last block, so those tests had to run 
on each block, not just the first one.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1a. Show for -Ca scaling min/max speeds if different from CPU min/max speeds.

1b. If no cpuinfo_min/max_freq speeds found, and scaling_min/max_freq found, set
overall min/max to use scaling min/max instead of cpuinfo min/max.

--------------------------------------------------------------------------------
CHANGES:

1. None.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Cleaned up and proofread better 3.3.10 changelog, it had a lot of errors 
because stuff kept changing.

--------------------------------------------------------------------------------
CODE:

1. Small code optimizations.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 16 Dec 2021 16:14:08 -0800

================================================================================
Version: 3.3.10
Patch: 00
Date: 2021-12-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Huge refactor of CPU physical/core/cache logic. That was some very old logic 
with a lot of hacks and patches, but it had never been actually rewritten to 
take advantage of Perl's far more powerful and robust data structures and logic. 
This caused a continuous stream of error cases in subtle ways, or not so subtle, 
and fixes were just changing how the errors manifested.

Tnanks very much to linuxquestions.org Slackware forum people for massive help,
and also to linux.org forum members for ongoing help and data and debugging.

Note Changes 5, change of default widths in display to 80 columns, and out (aka, 
console, or ssh into remote system), 100. You can still use other widths if you 
like something wider using the configuration options shown. Also upped max 
columns wrapping line starters to own rows to 110 columns from 90, again the 
idea being to make output more readable to other users when posted in public.

I've been thinking of this change for a long time, but was hoping -y would 
register with users, but it hasn't gained enough traction, so the result is way 
too many super hard to read issue reports, forum posts, linux kernel issues, 
etc, it's honestly gotten sort of embarrassing because they make it look like 
inxi has bad output. Sidescrolling code blocks in forums in particular are 
absurdly hard to read and scan rapidly for data.

Going along with the width and indentation changes, for most main row types, if 
they wrap to a second row, they are further indented 2 columns, to make it 
easier to see what they belong to. The two levels of indentation contain more 
useful visual cues as to what belongs to what.

There was a temptation to release this as either 3.4.00 or 4.0.00 but in the 
end, I decided to follow the numbering rules, and to just roll it to 3.3.10 
since there aren't really any primary new features even though CPU was basically
rewritten in large part, and big parts of inxi were also changed, upgraded, and
enhanced. But no truly new features, just some display control items like -Y,
--indent, --indents.

I hope this refactor meets its primary goals, and that the new defaults for 
display help resolve public posting issues which have grown increasingly 
annoying for anyone trying to read those pasted in too long outputs.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Android seems to have CPU cache data, but does not show any 'size' item. But
it does have the other data for each cache type internally, which is odd.

2. [See KNOWN ISSUES 2 for 3.3.12 above] In some instances, the parent key:value 
pairs with '' as value, those are parents of children key:value pairs, are left 
hanging at end of line, with the children on the following line. This can look 
awkward, but in other cases, actually looks very good, it depends if it's at the 
start or end of the line.

I won't say this is not correctable, but it would be very difficult, and outside
the scope of this release, but that is something that I may look at for a future
release now that the output generator logic was reworked slightly for Change 5b.

It's tricky though, because in cases where it's the first item on the line, you 
want that behavior, but when it's last, you don't. But this may be worth 
revisiting in the future.

3. In some cases, -Y + -y1 may lead to the start of the block scrolling off the
top of the visible screen. This isn't really correctable, so if that's an issue
for you, just don't use -y1 with -Y and all the output will wrap nicely.

4. There is an unaccountable ~10-20ms delay reading cpufreq/scaling_cur_freq, 
per thread/core, which really adds up on high thread count CPUs. There is a 
workaround in inxi to use cpufreq_cur_freq if it is readable, ie, if you are 
root or use sudo, but to fallback to scaling_cur_freq if can't read cpuinfo_...

This is a drag, and really looks like a kernel bug, or a frequency driver bug.

--------------------------------------------------------------------------------
BUGS:

1. 3.3.09 and 3.3.10 CPU bug fixes:
* Failed to filter out certain virtual machine CPU core speeds, and showed more
speeds than the instance actually has. Noticed this with KVM running on Xeon 
CPUs.
* For many cases, L2 cache, particularly for Intel, was completely wrong, it was 
showing L3 caches, or L3+L2. Failed to handle cases where L2 cache belongs to 
more than 1 core, except for using a crude hack for AMD Bulldozer microarch. 
Older Intel Core 4 core CPUs would sometimes be 1 L2 per die, and the 4 cores 
were actually 2 core duo cpu dies, with one L2 cache per die.
* Shows wrong core count for complex core complexes like those found in Intel 
Alder Lake, now shows correct count of actual cores, regardless of the MT or ST 
state of each core.
* Showed invalid L3 cache values in some legacy cpus that had no L3 cache, that
is due to a bug in the dmidecode data itself. Solution is to never use dmidecode
cache data if any other valid L1, L2, or L3 cache data found for Linux, and to
only use dmidecode data for bsds if no L1, or L2, or L3 data found. Or if forced
with --dmidecode.

2. An unfortunately long standing bug found and fixed, thanks slackware users!
cp_cpu_arch was, and has been for a while, failing to convert hex stepping to
decimal, or test if the string it gets is even a possible hex value, this 
resulted in all Intel CPUs with stepping > 9 failing to ID correctly for cpu 
arch. 

3. In a related bug, hex to decimal tool used to create --admin hex/decimal 
output for family/model/stepping was also not testing if the string was an 
actual valid hex number. Case in particular, power pc with revision field 
contained a long string, which was of course not a valid hex number, and that
tripped a Perl error when it was asked to convert a non hex string to decimal.

4. Long standing bug found while doing Change 5: inxi actually never applied 
separate in/out of dispay to widths because using a legacy boolean that was not 
updated, so it was always using out of display widths.

--------------------------------------------------------------------------------
FIXES:

1. Incorrectly calling PowerPC 'revision' 'stepping' for -Ca, that is now stored
as $cpu{'revision'} to avoid mixing up the logics there. For PowerPC shows as
rev: [string].

2. Microarch:
* AMD family 15, model 2 as bulldozer, actually piledriver. 
* AMD family 17, model 18, was supposed to be zen/zen+, since I can't tell those
apart, seen stepping 1 is zen+, but had incorrect match.
* Intel family 6, model 25, stepping 2 as nehalem, should have been westmere.
* Changed Penryn to Core Penryn, intel family 6, model 17
* misc other micro arch fine tunings.

3. Code fix 8, switched to global %risc for arm, mips, ppc, riscv, sparc. This
corrects many sloppy handlers, and makes all risc processing the same, and calls
device tree readers for all risc systems, not just arm or arm and mips.

4. In cases where bogomips were 0 due to false values in risc results, show N/A.

5. Removed all attempts to guess at what /proc/cpuinfo cache size: refers to,
it can literally be anything, a per core L1, a per core or cpu L2, or an L3.
So applying any math to it is just a random guess at that point. If any L1,2,3
cache data is found, don't use the cache: value at all, but that will only be
present if no /sys data was found anyway, and if cpuinfo had no specific cache
type fields, only generic cache. 

6. Added failsafe tests for stepping and model id before doing conversion to 
hex. Make sure integer!

7. Added L1 D cache, was only using I cache for BSDs. Output will show total for
L1 A + L1 D. No idea why I didn't use L1 D, makes little sense, but that's how 
it goes.

8. Made bogomips tests more granular, now only rejects low sub 50 bogomips 
values if %risc cpu type. Legacy ancient cpus like 486 could and did have 
bogomip counts below 50.
https://tldp.org/HOWTO/BogoMips/bogo-list.html

9. See Enhancement 12 as well. If OpenBSD, which has no per core data or 
physical cpu data, is running on MT capable cpu, but for security OpenBSD has 
disabled MT, will now force MT to be not shown via the hw.smt value. This 
removes a small glitch that would have bothered OpenBSD users who know that 
OpenBSD has disabled MT for security purposes.

10. Changed BSD hack to use L2 cache totals to deduce > 1 physical cpus, that 
was flat out dumb, since we can just use dmidecode type 4 to iterate physical 
cpu counts and skip the pointless logic. Thus, if dmidecode, and if > 1 
dmidecode type 4 found, and if physical cpu counts equal 1, then replace the 
found counts with the dmidecode physical cpu counts.

11. Corrected bad assumption that threads would always be 2 per core for MT 
tests. Revised logic should handle this case fine now, and show correct thread 
count per core.

12. Fixed 'parameters:' going to its own line with -Sa, that wasn't supposed to.
-S is two lines, the kernel / host stuff, and the desktop/console/distro stuff.

13. Fixed case when key: value first word plus other parts of line longer than 
max width, failed to wrap as expected.

14. Added start/end ' and " to existing start / end \s trims to main filters.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. CPU: most Linux will now show L1 and L3 cache with -Cx without needing 
sudo/root, and it will be more accurate than ever before.

2. CPU: shows per CPU L1/L2/L3 totals, and shows actual full system physical 
processor count * L1/L2/L3 total in parentheses, like: L2: 2x 1.5 MiB (3 MiB).

3. CPU: A long standing annoyance, previously for main CPU 'Speed:' item, showed 
the fastest core speed found, now shows avg: [speed] and with -Cx, shows the 
'high:' as well if > 1 cores, and if 1 or more cores have a higher speed than 
the other(s). 

4. CPU: Handles advanced cases of new architectures, like Alder Lake with 
Performance and Efficiency cores, future Zen, and existing ARM CPUs with 2 or 
more different core sets, with different max/min frequencies. Previously a hack 
was used to handle only ARM CPUs with this type of architecture. Will show 
correct CPU core counts, which previous inxi versions would fail to do for Alder 
Lake type scenarios of 8 single threaded CPUs and 4-8 multithreaded )MT) 
perforance cores.

This should also in theory show different the different min/max speeds if they 
were detected. Those did not seem to be set correctly in Alder Lake sample data 
I saw however, P and E cores were set to the same min/max speeds. 

[Update 3.3.12: more research suggests that for now, 1 cpu physical body will 
contain one clock generator, so that is not a mistake. Future CPUs may add a 
second clock generator but that is probably very complicated to implement, which 
is why ARM complex cpus simply use two cpus, with different clock rates when 
they want to run different speeds for efficiency.]

5. Added CPU types MST (Multi+Single Thread), AMP (Asymmetric Multi Processing), 
and AMCP (Asymmetrical Multi Core Processor). This will be applied to any CPU 
that has this type of complex topology that has been dynamically detected, like 
Alder Lake or different core count or min/max speed RISC CPUs.

6. CPU: shows with -Ca for cases where different L1/L2/L3 caches found per 
physical CPU, as with Alder Lake, but also many other variants that were poorly 
or not at all handled before, how many of each cache type (L1 Data, instruction) 
were found, otherwise will show how many of each cache were found. 

7. CPU: shows with -Ca in Topology: report, for cases like Alder Lake with 
different core types in one physical CPU (type: MST AMCP), the number that are 
single threaded (st) and number that are multi-threaded (mt).

8. Basic support for rsyc-v systems, going along with code fix 8, fix 3, now 
it's easy to add this type of support.

9. Added shortcut options for --filter-label (--zl), --filter-uuid (--zu), and
andded new filter option, --filter-vulnerabilities (--zv). The latter is added
by request, a decent idea to have option to not show cpu vulnerabilities.

10. Going with fix 7, switched to a sort of pseudo L1 d/i with desc report for
any BSD with L1 I/D cache found, or elbrus cache0 (icache) / cache1 (d cache).
Elbrus should hopefully be handled by the /sys tool. Guesses on the L1 are ok,
since those are almost always per core, so it's fine. Didn't expect to enhance
any BSD cpu data this time around, but there you go!! If they have the data, 
then it will be used. Not going to go overboard though in that, quite useless
overall since usually can't see how many CPUs are present, at least not usually.

11. For -Ca, full CPU topology report if any complex topogy is detected, 
otherwise shows the same basic Info: 2x 6-core or Info: dual core as before, no 
point in wasting a line for something with no more data than the short string. 
Complex types include MT CPUs since they will have different thread counts etc, 
and will have 2 or more threads per core, which will also be listed. 

12. If smt status is defined (0/1), shows smt: enabled|disabled in Topology 
section, can be useful for systems with disabled MT, but supporting it. If no 
topology data found (OpenBSD for example), for -C shows 'smt: disabled' after 
'type:' section, and enabled if -Cxxx (since MT really already tells you that).

13. For -Ca Speed: report, added scaling: report, with childrend 'governor:'. 
Can show 1 or more active governors. Also shows scaling driver:. Shows if either 
is available.

scaling:
  driver: ..
  governor: ..
  
These may be quite useful over time to help diagnose or debug scaling issues.

14. Output height (in lines) control: -Y [-3|-2|-1|0|1-xxx]]. This lets you 
break up any of the output into whatever number of lines you want. Also useful 
out of DISPLAY for reading -h options menu items etc.

It came tp my attention that the long standing shift+pgup/pgdown (aka 
'softscrollback) behavior had stopped working in kernel framebuffer mode, and in 
fact has been removed from the current Linux kernel, at least until it is 
rewritten to be more clean and understandable. Read more about it in these 
kernel post/commit messages:

https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=50145474f6ef4a9c19205b173da6264a644c7489
https://lwn.net/ml/linux-kernel/CAHk-=whe4ZdTdCebneWqC4gSQZwsVJ5-Emg0BucOGCwPhOAJpw@mail.gmail.com/

Options for -Y are:
* -Y 0 or -Y: Set maximum block height to terminal line height.
* -Y [1-xxx]: Set maximum block line height to given integer.
* -Y -1: Print out one primary data block item at a time, with -F for example.
* -Y -2: Do not remove color codes when piped or redirected. Mostly useful for 
         piping to less -R, to preserve color codes.
* -Y -3: Restore default unlimited height if LINES_MAX configuration item used.

15. And finally, more disk vendors/vendor ids. As usual. As expected.

--------------------------------------------------------------------------------
CHANGES:

1. If /sys or /proc/cpuinfo speed data available: 
* For -b CPU item:
   speed: [speed MHz] min/max: [min]/[max] MHz
  becomes:
   speed (MHz): avg: [speed] min/max: [min]/[max]
* For -C, Speed item 
   Speed: [speed MHz] min/max: [min]/[max] MHz Cores (MHz): ...
  becomes:
   Speed (MHz): avg: [speed] min/max: [min]/[max] cores: ...
* For short form, shows speed/min/max but uses average speed if available.

For -b and -C, only shows one MHz in Speed line starter, which slightly shortens
the line even with the added 'avg:' item since 3 MHz are replaced with 1. 

2. Going with change 1, now the 'avg:' item shows not the fastest cpu speed 
found, which was the case before, but shows an average of all cpu speeds found.
Showing the fastest made some sense back in the days of single core, or even 
dual core CPUs, but makes little sense today with many core/threaded cpus.

With -x, it will show the high: [speed] item as well, after 'avg:'.

3. By suggestion, wrapped first Type item in Vulnerabilities to its own line,
that's a verbose --admin option after all, no need to save lines!

4. Going along with Fix 5, give up on trying to pretend we can guess at L2 
cache, now if only 'cache' data was available from cpuinfo, will just say:
cache: [cache size]
 note: check
 
and call it a day.

5a. Change default width to 80 columns in display, and 100 and out. Too many 
users are posting horribly wrapping inxi output in forums, issue trackers, etc, 
and it frankly makes inxi look really bad, creates awful side scrolling code 
boxes, etc. So now default widths in and out of console are 80/100 (since often 
data is generated in SSH or out of X/Wayland) for issues. 

This essentially makes -y 80/-y the default width in display, and a wrapped 100 
out. This is what I've been using for a few years now, and after seeing far too 
many side scrolling or badly wrapping inxi outputs online, I think it's probably 
time to just force 80 column widths as default and call it a day.

You can change these new defaults using configuration options (these are the 
previous options, though due to a bug, COLS_MAX_CONSOLE was never being used):

 COLS_MAX_CONSOLE=115 # in display, terminal client max width 
 COLS_MAX_IRC=100 
 COLS_MAX_NO_DISPLAY=130 # not in display, no X/Wayland running
 
5b. Made second and greater rows of a line indent +2 to make it more clear that 
it is a child row of its parent row. Note that because no arg short form and -I 
are special types of rows, this behavior is not used, they just print out as 
usual. This makes for more readable and easy to follow flow of output data.
 
6. If > 1 physical cpu detected, no longer uses single/dual/triple/quad core 
strings, rather uses: 2x 2-core. Also uses lower case -core, not -Core.

7. Only show die counts for CPU (on rare occasions > 1 found) with -xx. Not 
particularly important bit of data afterall.

8. Make L1, L3 cache data show with -Cx, not -Cxx, now that it's working well.

9. Removed CPU die for -Cxx, that's only going to show with -Ca now.

10. If -Ca, and if certain complexity conditions are met, shows a separate 
Topology line rather than the Info: 6-core type item. For -b, short, -Cx, -Cxxx
shows the Info: topology short form.

11. Bogomips always shows before flags data, whether -f or just -Cx trips flag
output. This places bogomips at end of Speed: line, after the core speeds.

12. Flags/Features now shows in the same place, under Speeds: always, whether 
-Cx shortlist, or -Cf full list. Makes more sense that way, and code is much
cleaner too.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated man/help for new CPU extra data options and output changes. 

2. Cleaned up and added sample outputs for man CPU items. 

3. Now that doas is getting into Linux distros, removed all mentions of doas as
a BSD option, and made it a general doas/sudo item. Glad to see doas making it
into linux distros, it's a good tool, much easier to configure and use than 
sudo. Good job OpenBSD guys. Note that inxi already has had full doas support 
for a while now, but this finalizes it, and makes it fully agnostic. Internally
doas is actually preferred over sudo, by the way.

4. Added documention items for INDENT (--indent), INDENTS (--indents).

5. Re-ordered help menu and man page, created new Filters and Output Controls 
sections to make stuff easier to find. In man page, also added on top a list of 
OPTIONS sections to make finding stuff easier.

--------------------------------------------------------------------------------
CODE:

1. Removed legacy /sys cpu functions: cpu_bugs_sys(); get_boost_status(); 
set_cpu_speeds_sys(). get_caches() was only a placeholder for the full featured 
cpu_sys data source, and was removed; cpu_speeds() no longer needed, integrated 
into other logic; cpu_dies_sys() removed, integrated into other logic.

This logic is now integrated into cpu_data_sys() data generator.

2. Changed the main CpuItems functions to use array/hash references, not passing 
full hashes or arrays in most cases now.

3. For machine_data_soc(), switched to CpuItem::cpuinfo_grabber() which then 
sets the global @cpuinfo and %cpuinfo_machine items, which will be used again
in Cpu if cpu data is requested. This gets rid of a full parsing of cpuinfo
just to get the machine data section, and also makes it so cpuinfo in cpu does
not need to worry about the machine data block, which is not related to the 
processor blocks anyway, that was always a hack done by the kernel guys to toss
that SOC data somewhere as far as I can tell.

4. New tools: 
* get_defined() - takes a list, and returns the first defined element of list.
* regex_range() - generate ranges from comma, space, or ranges like 2-29, or any 
combination of those, like 3,6,12-29

5. Added --force cpuinfo to bypass all /sys based cpu logic, useful for testing
to see what would have happened using old logic.

6. Added --dbg switches 39, 40, 41, for the new cpu sys data features, also made
more consistent --dbg 8 and --dbg 38 switches.

7. Added sys/cpuinfo pair debugger to support debugging complex sys/cpuinfo 
issues.

8. Got rid of $b_arm,$b_mips,$b_ppc,$b_sparc, replaced with global %risc, also
added $risc{'riscv'} type. this makes general risc type feature testing a lot 
easier since inxi can either test for %risc defined, or for a specific type of 
risc cpu. This is much cleaner, and use $risc{'id'} for print purposes, which 
got rid of a lot of tests. Also made all risc tests consistent, some were ARM 
only, or arm/mips, but were supposed to be for all risc cpus.

13. Made help menu code more or less wrap to 80 columns, or close. Ongoing to
bring to 80 columns where practical, but never at expense of clarity or logic.

10. Changed all xxx_cleaner subs to clean_xxx, all filter subs to filter_xxx, 
and row_defaults() to message().

11. Dumped redundant fallback logic in get_kernel_bits, if first getconf method 
fails, use $sys_bits, and call it good, it was repeating the 32/64 bit tests 
pointlessly.

12. Cleaned up print_data() to allow for more fine tuned indentation for the new
2 indent levels.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 13 Dec 2021 10:25:49 -0800

================================================================================
Version: 3.3.09
Patch: 01
Date: 2021-11-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Thanks manjaro user alven for finding a bunch of corner and not so corner case 
errors, glitches, documentation oversights, etc.

This is a point release between the coming full CPU refactor and the current
set of bug fixes and issue handlings.

This release also contains the debuggers for the new CPU data logic, which are
important to get this CPU refactor stable and reliable across old/new systems,
different operating systems and platforms.

Wanted to do this intermediate releaase to get the current fixes out, which 
make inxi overall better for CPU issues, but do not handle the core requirement
to do a full refactor.

--------------------------------------------------------------------------------

CORRECTION:

1. On release notes for 3.3.08: due to a long delay to get real debugger data 
from the person who had the issue, but finally getting it after the release of 
3.3.08, there was NO bug in ps wwaux output. Something else was creating the 
linewraps, maybe the subshell, it's basically impossible to know since we never 
got a real debugger data set, which is the only real way to get the actual same 
data inxi will see. 

Was it a subshell wrapping the output? We just can't know, nor are we likely to 
ever find out.

This highlights very well however why some issues are essentially impossible to 
ever fully resolve without the --debug 22 dataset. This bug/fix is definitely in 
that class of issues.

It's never good to accuse another program of having a bug when it doesn't, so 
sorry to ps authors, no bug or issue exists for ps in this area.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. wiryonolau issue #259 points out that if --tty is used, default IRC filter
rule is still active and on. Because his case appears to be from an autostart 
using Bash, which then gives up to find the parent at dash, which then makes
inxi believe it's in an IRC shell client, that issue doesn't appear to be 
resolvable.

--------------------------------------------------------------------------------
BUGS:

1. Documentation, help menu and man page showed wmctl instead of wmctrl, 
which for someone who reads the help man, leads to command --fake wmctl failing.
Thanks manjaro user alven for finding this typo.

2. For dmidecode cpu data, had global total values for cache that could result 
in wrong output values, 2x or more wrong for L1 / L3 cache on linux. Difficulty 
is preserving that data for bsd, which in general do not show phys cpu counts, 
and thus make showing totals off. Created new '-total' item for each L cache 
type, which will handle > 1 cpus, and also can be used to determine if > 1 cpus 
present!.

3. Manjaro user pointed out that hub types were wrong, this is because inxi was
using the INTERFACE ID values for hubs instead of the TYPE values. For all other
device types, INTERFACE is correct, but for hubs, we needed TYPE, so fix is to
detect INTERFACE 9/0/0 and if TYPE present for that, swap.

--------------------------------------------------------------------------------
FIXES:

1. For > 1 cpu systems, with dmidecode sourced cpu cache data, can now determine 
physical cpu count based on comparing L2 and L2-total values. This means that 
when dmidecode is used on BSD for CPU data, inxi may now be able to deduce that
it is a > 1 cpu system.

2. Forgot to set $run{'filter'} to 0 for whitelist start client detection.

3. Going along with bug 3, changed 'Full speed (or root) hub' to:
Full speed or root hub, to make more clear that it's one or the other, or both.

4. For apply_filter(), added test if <superuser required> just return the 
string.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going with bug 1, and fix 1, for > 1 cpu systems, will now show for all 
cache: items L1: 2x 1.5 MiB (3 MiB), same for L2 and L3. This is far less 
confusing than showing the totals without explaining what they are.

2. Going along with 1, now root is not required to show L1 and L3 -Cxx on Linux
as long as the system is reasonably new, about after 2008, and has getconf -a 
supported. That support is came in somewhere around 2.10, not sure exactly when.
Debian Etch had it, Sarge did not, Ubuntu 9.10 had it. Tinycore does not have 
getconf at all. This will probably be replaced by a more robust full cpu /sys 
data tool.

3. Added ht to default short -Cx flag list, that should show, and it's short.

4. Added --no-filter to activate -Z, --filter-override isn't consistent with
other --no-xxx options, even I forgot it. No changes, just another way to use
-Z.

5. For issue #260 added pch as a new sensor output type, it's kind of a builtin
southbridge / northbridge in the CPU die, but it's not a core, and has a 
different temp. Will anyone even know what pch is? probably not, but who cares.

--------------------------------------------------------------------------------
CHANGES:

1. No longer showing for > 1 physical cpu systems the sum total of L1/2/3 cache
data. Now shows per cpu L1/L2/L3, and if > 1 cpu, shows for example:

cache: L1: 2x 512 KiB (1024 KiB) L2: 2x 2 MiB (4 MiB)  L3: 2x 20 MiB (40 MiB)

For single physical cpu output remains the same:

cache: L1: 576 KiB L2: 3 MiB L3: 16 MiB

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Updated help/man for L1/L3 cache -Cxx changes.

2. Updated man and help to suggest -Z for --tty.

3. Forgot to note -v 7 adds -f, added to man/help.

--------------------------------------------------------------------------------
CODE:

* Added 'getconf -a' to debugger, that may be usable for cpu cache data, need to
gather data on that to confirm. that's regading issue #257 cache glitches.

2. Removed all * $physical_count for cache data in cpu_properties, that is now
handled by creating string with cpu count, per cpu caches, and total in parens.

3. Added in fallback failure case for the ZFS file system issue exposed by 
accident in issue #258 - will now log in debugger the error, so we can try to 
find what is going on there, impossible to reproduce until we find what zfs or 
more likely, freebsd, changed there. Could be hyper specific, some weird thing 
like a person making a zfs device name with space, impossible to guess. Note 
that since the freebsd user declined to supply any data to help resolve this 
issue, then closed it, we're back where we usually end up with FreeBSD issues, 
either a Linux user (or worse, me) willing and able to find the issue and supply 
the debugger data required shows up, OR the issue is ignored as valid but 
impossible to resolve.

RANT: Note that this also confirmed to me that in order to preserve my own 
sanity and not waste endless hours trying to get data, from now on, unless 
utterly trivial, if a FreeBSD user refuses to promptly supply the required data, 
the issue will be closed with a freebsd-closed-no-data-supplied label, which 
means, valid but not possible to solve due to user refusing to help me help 
them. 

Come on FreeBSD users!! If you want help, and inxi to support your distro, help 
me help you!! If not, then why are you even filing an issue in the first place? 
Do you expect faeries to spread magic bug / issue fixing faerie dust over inxi 
and then activate it with their little wands? This is growing tiresome to be 
honest because it's so utterly predictable. 

4. Shuffled order of sensor type detections, there was a slim chance that a non
gpu sensor type could have string intel in it, so put the gpu sensors second 
to last, before 'main'. 

5. Started refactor of cpu core/cache logic. Added feature to cpu_arch, and 
changed it to cpu_info since now it gives by vendor/family/model/stepping both
micorarch and cache/core math array returns. Also started refactor to make more
predictable, with increased comments, about what is going on in cpu_properties
to avoid breaking existing correct results.

6. Added to --debug /sys cpu data globber tool, that will help debugging the new 
/sys cpu data feature, will let me insert the file data directly into the logic.

7. Added CpuItem::cpu_data_sys() with debuggers, that will now start collecting
user cpu data whenever the debugger is run, though it's not active yet.

8. Set $Data::Dumper::SortKeys = 1; dugh, could have saved big headaches if had
found this before. Makes all keys sorted cleanly, gets rid of random hash sorts.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 22 Nov 2021 12:45:00 -0700

================================================================================
Version: 3.3.08
Patch: 00
Date: 2021-10-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix release. 2 bugs that can impact all users under the right circumstances
were detected and fixed. Thanks manjaro users there for finding and reporting 
those. No other changes.

--------------------------------------------------------------------------------
KNOWN ISSUES:

None.

--------------------------------------------------------------------------------
BUGS:

1. Manjaro user ben81 located a critical bug in hardware raid output, this bug 
impacts ALL users of hwraid that run inxi with -xx option. Bug was a bad copy 
paste, the classic, had updated all the pci type data blocks at once, and hw 
raid unfortunately had a slightly different logic due to being part of the more 
complex RAID block of logic. Was trying to use an array, not a hash, reference.

Thanks ben81, I would never have spotted this one, and it would impact 100% of 
all inxi users with hwraid on their machine who ran inxi with -xx option.

2. Also, ps wwaux parser was spitting out an undefined index error. This is 
caused by one of two things:

* ps has an issue, and is apparently at times failing to respect ww, unlimited 
line length, and wrapping anyway. This is the likely cause.
* the user terminal for some inexpicable reason has decided to hard wrap long 
lines. This is very unlikely, but has to be considered as a possible cause. 
Since these commands run in a subshell, this is VERY unlikely.

Workaround this failure by double checking that line split item is defined, if 
not, next row. Thanks Carpenter for finding that one.

--------------------------------------------------------------------------------
FIXES:

None.

--------------------------------------------------------------------------------
ENHANCEMENTS:

None.

--------------------------------------------------------------------------------
CHANGES:

None.

--------------------------------------------------------------------------------
DOCUMENTATION:

None.

--------------------------------------------------------------------------------
CODE:

1. Added workarounds for bug 2. Corrected silly copy/paste error for bug 1.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 21 Oct 2021 12:28:15 -0700

================================================================================
Version: 3.3.07
Patch: 00
Date: 2021-10-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Some very nice issue reports have helped correct various corner case issues. 
Mint users helped find a big one with lspci.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Unsure how to handle Android case where inxi correctly does -r test, see bug 
3 fixes 6, but android incorrectly claims it is readable when it is not 
readable, then the reader tool can't read the file and fails with permissions 
error. This is one of those weird android errors that are pretty much impossible 
to fully work around, but we can get rid of the readline() errors when reader() 
was trying to work on a file handle that did not exist, that part was an inxi 
bug.

--------------------------------------------------------------------------------
BUGS:

1. dm detection was not using case sensitive search for duplicates, leading to 
cases where dm like slim / SLiM failed to get detected and then repeated in 
output. Anonymous BSD debugger dataset exposed this issue, thanks.

2. In certain corner cases, like ARM Android, sub reader got passed a file that 
had passed the is readable -r test, but it still failed with permissions error, 
which then led reader to try to keep working with a null $fh. While in theory 
nothing non readable should be passed to reader(), that fails when the OS fails 
to actually follow correct readable rules, as in this case. Added protections in 
reader() to handle this case, now will show error, but will not try to work with 
$fh, that is how it should have been all along, but this is a very corner case. 
Exposed by an anoymous ARM debugger dataset.

Thanks Termux user for creating the debugger dataset that exposed this issue.

3. lspci parser didn't null port value each iteration, resulting in all pci 
items getting port values. Not a big deal, port is only used one place, but good
to find and correct that error.

4. Not an inxi bug, but would appear so to end users: lspsci -nnv implements a 
truncating routine and breaks the first line for each bus id. See Fix 6 and Code 
fix 3. 

--------------------------------------------------------------------------------
FIXES:

1. -S and -I would show Console: tty pts/3 even though pts device is a pty, not 
a tty. The only time this happened was when connecting to a remote system using 
ssh or something like that. Local console still shows Console: tty 2 since that 
was correct, but Console: tty pts/2 was confusing since technically it's not a 
tty, it's a pty, pseudo terminal.

Now shows, when relevant: Console: tty 2 OR Console: pty pts/2.

2. Issue #252 notes that Emacs (and possibly other code/text editors with native 
embedded terminals) includes a native virtual terminal that also follows 
configuration rules from the editor to highlight trailing spaces. This created 
odd looking screen output in Emacs vt mode since inxi always sets key/value 
pairs with a white space ending as separator for next key value pair for screen 
output mode, resulting always in a trailing space on each vt screen line. Fix 
was to remove the last trailing space just prior to the print line point to 
avoid this issue.

As a general thing, I'm curious to learn if any editor other than Emacs actually 
contains its own virtual terminal that also follows the editor rules for output. 
Or if any virtual terminal has such a highlight trailing space rule, which would 
be imo so annoying it's hard to understand why a vt would implement it. Easy to 
understand why Emacs (or any editor) does it, but an editor also being a vt AND 
applying certain editor display configurations to the vt is a very specific and 
unique circumstance I'd say.

Odd, historical, but there it is, why not handle it?

3. ARM / Android case where certain files passed the read -r test, but failed 
with permission denied error. This tripped a further glitch where reader() would 
then try to work with the failed $fh, see bug 2. This was really more a fix 
than a bug, since the bug in this case was in android permissions tests, not 
inxi, but it appears to be a bug to end users, so it's handled now.

4. Another ARM/Android, there was a voltage regulator IP that contained the term 
wlan so it tripped false positive for network match. Added a new type, 
regulator, to filter out those, like codec and dummy do already.

5. For issue #254, fix for cygwin ERR-102 in partitions, add cygwin test, new 
dev type, 'windows', dev base then becomes E: or whatever. To avoid confusing D: 
for a key: with no value, added D:/ slash.

6. Mint people discovered lspci issue, lspci -nnv has a bug where it will 
truncate the output of the first line per bus ID if it's over some arbitrary 
amount, then tack on rev and other items to end of that string, which leads to 
the block: [vendorID:productID] getting truncated or removed altogether. Clearly 
an oversight, at least I hope it's an oversight on lspci's part, but have to 
work around the issue anyway since it may never get fixed, and has been around a 
long time. Bug is in lspci 3.7, 3.6.4, and probably earlier. 

Also added in a fillin tool for this rare case, lspci -n data is used to replace 
the missing values.

Note that while lspci recommends using -mmv, for machine parsing, apparently 
nobody noticed that -mmv doesn't have the same data items as -nnv, sigh.

7. Issue #255 noted that the combination of:
GoogleDrive Hogne: fuse.rclone 15728640
which is two word remote fs AND a fs type with a '.' in it would fail to trip 
the handler for that multi word remote mount name. Also failed to detect as 
remote fs, added fs specific test since the actual mount name doesn't permit
reliable detection as remote type. Testing for trailing ':' isn't safe since 
':' alone is not an invalid character in a file system name as far as I know.

Further, this exposed that the ^^ space replacements for $row[0] fs > 1 word 
name were not being reset soon enough in the logic, that's also corrected.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Neglected to support standard package config file override 
/etc/inxi.d/inxi.conf item. This is mainly useful for packaged inxi's who want 
to override the distro maintainer /etc/inxi.conf file. Test priority is the same 
except /etc/inxi.d/inxi.conf comes right after /etc/inxi.conf now in the test 
sequence.

2. Added basic cygwin id, yes, inxi works in cygwin, apparently, with some
issues. Added cygwin os id to distro ids. 

3. Added --version info for debugger, sometimes we want to know what verion of
a tool, like lspci, in case it has a bug or something.

4. Added exfat and apfs to unmounted fs types.

5. More disk vendors!! New vendor ID matches!! Yes, yes, you've heard it all 
before, the list never ends!! The eternal chaos of existence manifested in just 
how many IDs can be generated for new and old disk vendors alike!!! 

--------------------------------------------------------------------------------
CHANGES:

1. No changes this release.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Pull request #253 corrected typos, urls, and other errors in man page, 
inxi/pinxi comments, pinxi.1/inxi.1, README.txt, and updated LICENSE.txt to 
current gnu wording.

--------------------------------------------------------------------------------
CODE:

1. Forgot to add lspci debugger fake data option, that's corrected. That's 
--fake lspci, now works, didn't before, only the bsd pci tools had fake switches 
previously, since lspci never needs debugging really, but did now to test an 
issue report.

2. Added -CYGWIN to debugger file name. Added -ANDROID if ARM and if android.

3. With Fix 6, refactored entire lspci_data block, added lspci_n_data item, 
which matches bus id of lspci -nnv when corruption occurs and replaces vendor, 
product, and if also missing, rev version. I kind of knew I'd have to do this 
fix one day, that was the same fix logic used on the BSD pci tools, which have 
similar issues with consistency in output, or lack thereof.

This refactor is long term very good because it avoids an entire class of 
possible errors, and makes pci detections far more robust.

4. Created new repo, for legacy code, inxi-legacy. Moved branch inxi-c to 
inxi-legacy/xorg-c, moved branch xiin to /xiin, moved branch inxi-legacy (binxi) 
to inxi-legacy/inxi-legacy. Those directories each contain all the files each 
branch had in it. 
 
This gets rid of some branches clutter, and nobody needs to see those anymore, 
but if they care, they can look at them. Note that to do this, I had to merge 
their histories, which was not that nice, but git is just really bad at this 
type of stuff, so that's how it goes.

Times like this really make me miss svn's directory based branch approach...

5. Simplified sub fs_excludes, simplified regex constructors for all function 
that use this data, made list more fault tolerate by adding global (fs)?(\d{0,2}
which means all file systems can have or not have 'fs' at end, and all can have
or not have a version number in string.

6. Exposed by issue #255, refactored slightly ordering of partition filter
logics and variable resets in the df output processing loop.

7. Added --fake partitions, to help debug odd corner cases like cygwin glitches.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 11 Oct 2021 19:01:15 -0700

================================================================================
Version: 3.3.06
Patch: 00
Date: 2021-07-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version! Fixes!! Bug fixes! More bug fixes!! Cleanups!

Most of these were exposed by issue #251 filed by LukasNickel, then further
revealed via his debugger data set, which showed two more bugs. Well, bugs,
changed syntaxes, same difference to end users.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Work is ongoing to add btrfs support to -R (similar to softraid or zfs), 
basic stubs and debuggers added, but reporting tools are not as robust (and 
often require sudo/root for reasons that escape me) as I would have hoped, so 
it's slow. One of these days... Normally would not release with working stubs, 
but there were enough real issues/bugs to warrant just getting 3.3.06 out the 
door, then going on with the btrfs feature for -R. But so far I view the 
reporting tools as inadequate, unfortunately.

--------------------------------------------------------------------------------
BUGS:

1. As initially discovered in issue #251 there are alternate syntaxes which had 
never been seen before for remote mounts, fuse mounts, etc. In this case, it was 
fuse.sshfs that was not removed from the Disk total:... used: leading to silly 
1000+% used percentage. Note that while technically inxi could try to be clever 
about reporting impossible percentages, so far those have led to bugs getting 
reported, then fixed, so I think it worth leaving it as is.

2. When --swap/-j is used with no other arguments, failed to show uuid or label. 
Discovered this while testing fix 2.

3. Bug which is not a bug but will appear as such to users, nvme temps were 
failing in -Dx due to a change in how those values are located in /sys. See fix 
3.

--------------------------------------------------------------------------------
FIXES:

1. Going along with Bug 1, and considering that only in 3.3.05 was the nfs4 
remote fs failure to identify/exclude, the entire section involving remote/ fuse 
etc file systems was refactored, and extended to add many more previously 
non-handled remote and fuse type file systems. Significant extension of known 
remote filesystem types, distributed file systems, overlay file systems, all to 
try to avoid having more distributed/remote/fuse file system issues. Also added 
test to support fuse. or fuseblk. type prefixes for any of these. Hopefully 
there will be fewer issues related to distributed and remote and overlay type 
file systems in the future.

2. Made all label/uuid triggers global, that is, -ol shows unmounted with 
labels, -ju shows swap with uuid, and so on. This may require a bit more tweaks 
to get exactly right, but in general, this is a purely cosmetic fix, that is, 
try not to show label/uuid for partition/mounts that probably can't have those 
values.

3. There was a change in the way nvme /sys temperature paths were handled, an 
actually understandable, albeit as always annoying, one, because inxi actually 
had to do a sort of convoluted hack to get the nvme block devices temperatore 
paths before, now that hack is not required for newer kernels (5.12+), though 
for kernels that had the old paths (5,8, 5.9 at least, don't know when paths 
changed) left in the old method. Now tests are more granular, and inxi should 
find temperatures regardless of which method is used for nvme and sd type 
drives.

4. Another somewhat irksome random change, again, understandable since the new 
syntax is more consistent in output than the previous one, but still breaks all 
existing parsers that use the changed field names. Lsblk did NOT change the -o 
input field names, but DID change the output field names, which broke the 
internal inxi parser, and led to null lsblk data. 

Changes were - or : separators in input values are output as _ always. that is, 
MAJ:MIN becomes MAJ_MIN. Also corrected the debugger lsblk to use the same 
output fields for -P -o as the actual lsblk parser uses internally so these 
failures can be spotted more readily, as it was, it was literally only because 
someone submitted the debugger dataset, and was running lsblk 2.37, where I 
believe this behavior change happened. Solution was to just use regex patterns 
instead, [:_-], in the parser. Big fear now is that they will randomly stop 
supporting the -o input field names that contain - or : and change that too 
without any real warning or deprecation notice.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going with bug and fix 1, added avfs, afs, archivemount, avfs, ceph, gfs, 
glusterfs, gmailfs, hdfs, ipfs, kosmos/kfs, lafs, mergerfs, mhddfs, moosefs, 
ocfs, openafs, orangefs, overlayfs, pvfs, s3fs, sheepdog, vmfs, and several 
others to the exclude list for disk used and show label/uuids for partitions. 

2. A smattering of disk vendors added. 

--------------------------------------------------------------------------------
CHANGES:

1. Going with fix 2, -l and -u no longer will trigger -P by default, now if -l 
or -u are used without -j, -o, -p, -P, an  error will explain that you must use 
one of those together with -l or -u. This was the only way to get the -l and -u 
switches to turn off/on label/uuid reports in swap, unmounted, and partitions 
consistently. Triggering -P was really a legacy behavior from when the only 
options were -p or -P, and --swap and --unmounted did not exist. I found it 
increasingly odd that unmounted would show label/uuid always but partitions only 
with -l/-u.

2. This was a pet peeve, sometimes field names just bug me (like 'Topology: did 
for CPU, now  corrected to Info:), the Drive: rotation: was one such annoyance. 
I had recycled that to indicate SSD, which was a feature request, but that was 
always a sloppy solution, and made no sense, since SSD isn't a rotation speed.

Now it reports a much more logical:

ID-1:...... type: HDD rpm: 7200 
or
ID-1:...... type: SSD
or
ID-1:...... type: N/A

This also corresponds to the intended meaning much better. The HDD type was 
always present internally if rotation speed is detected, but was not used. Now 
will also show type: N/A if reliable type detection failed, which will also be 
more consistent.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Brought most of inxi.changelog (this file) into a consistent state, re 
whitespaces, readability, consistent use of various header / section names. 
Ideally while I don't expect anyone to ever sit down and read this changelog, it 
will be now much easier to scan to find whatever interests you. This change goes 
along with ongoing changes in docs to in general try to be usually 80 columns 
wide.

2. inxi-resources.txt, inxi-data.txt are updated with more raid, partition, file 
system values and data to go along with bug, fix, enhancement 1.

3. Man and help updated to indicate -u and -l no longer trigger -P by default.

--------------------------------------------------------------------------------
CODE:

1. Ongoing refactors, bringing the codebase to the point that matches current 
coding styles. Removed remainder of whitespaces in conditions and for/while 
loops, for example:

if ( condition ) { 
becomes:
if (condition){
and
if ( ( test set 1 ) && ( test set 2 ) ) {
becomes: 
if ((test set 1) && (test set 2)){

and so on. That dropped over 2 KiB of whitespaces. This went along with fixes 
that have been ongoing to change to this whitespace use style, but previously it 
was only being  done when that situation was hit in a local block, now it's been 
completed globally.

This continues the style refactor that has been ongoing for a while now, to 
bring inxi into a consistent state, since when it started, it was more pressing 
to get the bash/gawk mess translated to Perl than it was to get the Perl itself 
to be as good/consistent as possible, so now those issues are being slowly 
unravelled, and hopefully will set inxi on course for its next 10 years.

It was starting to get annoying, because some parts of inxi used those spaces, 
and all newer ones didn't in general. Now it's one behavior throughout the whole 
program file.

2. Refactored the entire fs exclude for disk used data, and integrated those 
values into a global tool that is used either to exclude file systems from disk 
used totals, or to not show uuid/labels for the excluded 
remote/distributed/overlay type file systems, which in general don't have uuid 
or labels.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 21 Jul 2021 18:23:21 -0700

================================================================================
Version: 3.3.05
Patch: 00
Date: 2021-07-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Many small updates, enhancements, bug fixes!!! We've been saving them up!! Here 
they are!! Don't wait!!

Thanks mr. mazda for many issue finds, and suggestions.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Due to unfixable rpm slowdowns, removed package counts for default output for 
rpm based systems. We were seeing delays of up to 30+ seconds just to list the 
rpm package count, which is absurd, even after the rpm optimizations inxi 
already runs. To allow rpm users to get excluded by default for rpm package list 
counts, added --pkg flag plus a short message telling them to use that flag to 
get the installed package count if they want it.

Changes like this are very unfortunate, but in 2021 for a package manager at 
times to require over 30 seconds to generate a trivial installed package list is 
just not acceptable. One of the reasons this release was delayed was this was 
not an easy decision to make, it's very rare support for a feature is removed 
for specific tools due to how badly the tools may perform. Note that whatever
higher level tool is used, like dnf, zypp, it's still the same speed, they all
appear to use the same core engine.

Basically this decision was forced since either inxi looks really bad and slow,
when it's not, or the actual cause was removed from default outputs.

--------------------------------------------------------------------------------
BUGS:

1. Small bug in nfs blacklist for disk used led to nfs used being added, which
leads to silly used percents. This is corrected.

2. If ram vendor ID failed, inxi would delete the part number. Oops. This was
related to the Mushkin failures.

3. Close to a bug, though not one internally, but to users would appear as one: 
ZFS does not act as expected, zpool list did not in fact return the pool size, 
which I had always assumed to be the case, but in a very strange decision, does 
return something very close to the pool size for mirrors, but NOT for z1 or z2 
pools, then it returns the total size of the drives that make up the pool. To 
call this strange behavior would be an understatement. The fix was to modify the 
logic to use zfs list instead to get the size data. This also makes the drive 
total report far more accurate, since it lists usable space now for ZFS as was 
always intended. The cause of this was simply that I'd always had access to zfs 
mirrors, not z1 or z2 arrays.

--------------------------------------------------------------------------------
FIXES:

1. OpenSuse and maybe others use kdm3 for Trinity, not kdm, so dm was failing.

2. Going along with fix 1, made kde version detection more robust so may catch
more fringe / corner cases for kde desktops. These were mainly added to correct
Trinity desktop version detections.

3. Mushkin ram vendor ID was failing, that is or should be corrected.

4. Added in /dev/disk/by-id handlers for zpool components, there are several
variants, wwn-, pci-, scsi-, ata-, but they all map to the real /dev drive IDs.
Failure to unmap these led to failing to match components and get size info 
etc for zfs.

5. See DOCUMENTATION: 2, language changes for weather feature abuse.

6. Failed uptime report data due to yet another random syntax change in the
data. See Code Change 1 for details on the fix.

7. A change at some point made sensors show 0 instead of N/A due to improperly 
setting undefined sensor values as 0. This in particular happened with mobo 
temps on systems without known mobo temp sensors.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going along with the rpm issues, added dnf.conf support to yum/dnf repo 
types. Not sure how that one was missed, but there it is. This should tighten 
repo reports for dnf/yum/zypp types.

2. Added LeftWM. LeftWM confirmed working. Added unverifed detections for: 
penrose, 2bwm, 5dwm, catwm, mcwm, monsterwm, snapwm, uwm, wingo, wmfs, wmfs2. 

3. Added xfwm as a compositor type, that had been left out, somewhat on purpose, 
since xfwm can run in compositing or non compositing mode. But should show since 
many users use compositing mode now.

4. Added OpenMediaVault distro ID and systembase handlers.

5. Going along with zfs bug fix 3, using zfs list data for free, size, 
allocated. Trying to understand how zfs developers actually thought about this 
is nearly impossible so just used what seems to correspond to reality most. Also 
shows raw values for zfs data in RAID along with regular ones to make clear 
which is which value.

6. Added more CPU architecture ID matches for AMD Zen and a variety of Intel. 
Both vendors finally released some new CPUs and the data became available, which 
doesn't always happen quickly.

7. A bunch of new disk vendors and vendor IDs added. Never stops, like the sands 
of time, like the ocean waves, like the scuttling crabs scrounging around in the 
seaweed in the foam where the outgoing wave left its mark...

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Added leftwm keybindinigs to inxi-data.txt desktop/wm section. Updated more 
wm in that section as well, and list more info on wms for future reference etc.
Also reorganized and made more readable wm section.

2. Help/Man now make more clear that automated requests or excessive use of the
inxi weather feature are not under any circumstance permitted. There had been 
some ambiguity and lack of clarity about what abuse is, now it should be more
clear.

--------------------------------------------------------------------------------
CODE:

1. Refactored uptime parser logic, the code and regex was just getting too messy 
and difficult to work with and debug, now it works similar to how the revised 
BSD parsers run, the regex are pulled apart and made more granular so a small 
syntax change ideally won't break the detections as easily.

2. Cleaned up sub cpu_arch() and made all the arch values line up nicely, over 
time I notice that almost invariably stuff done to save lines of code makes 
code harder to read as the feature expands, so it's generally worth just 
unravelling it so it all stacks and is easy to scan/read. Also removed extra 
white space in parens, which is something I'm leaning more towards but it's not 
worth fixing all at once so it's just done where it's noticed.

That's using: 
if ( /test/ ){ 
rather than:
if (/test/){

I believe using more white space helped with Perl comprehension in the 
intermediate stages, but is not required anymore and just looks like extra 
whitespace now.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 11 Jul 2021 18:36:42 -0700

================================================================================
Version: 3.3.04 
Patch: 00 
Date: 2021-04-16
--------------------------------------------------------------------------------
RELEASE NOTES: 
--------------------------------------------------------------------------------

Enhanced features!! Huge BSD upgrades! Bug Fixes!! Elbrus Fixes!! More bluetooth 
fixes!! What are you waiting for?!!?

A special thanks for significant help, ongoing, leading to a huge boost to BSD 
support, Stan Vandiver, who did a lot of BSD testing, and setup many remote 
access systems for testing and development of the latest BSD upgrades. If you're 
a BSD user, you can thank him for helping to expand BSD support!

An ongoing thanks to Mr. Mazda, for continuous testing, suggestions, and helpful 
ideas.

Take special note of the code folding fixes in Fix 1, those open up possible 
free software code editors that can be used to work with inxi to more than just 
Kwrite/Kate, to include scite and geany, nice lightweight code editors. You 
can't do real work in inxi without code folding, so getting this finally 
resolved was I think worth it.

Also, for the first time ever!! inxi is now using Pledge, well, if 
OpenBSD::Pledge module is available, which is currently only in OpenBSD, since 
that's the only system that supports Pledge security, except for Serenity, but 
inxi doesn't support Serenity. Note that OpenBSD was smart and added 
OpenBSD::Pledge and OpenBSD::Unveil to Perl Core modules, thus removing any hoop 
that might stop a Perl program from implementing it. Nice going OpenBSD guys!

The addition of OpenBSD softraid support for RAID and CRYPTO types highlights 
the problem with --raid and --logical, where --raid is really just a subset of 
Logical volume management. Note that while the hardware RAID feature only lists 
the actual PCI RAID device, OpenBSD bioctl supports hardware RAID out of the 
box, something I'd thought of doing in inxi for a few years, but it's too much 
work, but bioctl has done the work, which is impressive. Can't do much without a 
lot of debugger data there though, but it's worth being aware of. In this case, 
since softraid is the primary device, I opted to call Crypto and RAID types all 
RAID, same as with linear zfs.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. FreeBSD: USB drivers. I really gave this a try, but could not get any logic 
to be stable across systems and varying syntaxes used. Will wait for FreeBSD to 
add drivers to usbconfig -vl. Note that this makes it not possible to correctly 
match USB networking devices to their respective IF data, so USB networking IF 
will fall back to the undetected IF-ID, which means it was found but not 
connected to a specific hardware device. 

2. FreeBSD Battery Report: there are non-objective values for Battery state data 
in sysctl output, as in minutes remaining, which has no meaning, and percent 
charge (percent of what? original design capacity? current actual capacity?). If 
data with voltages, design/current capacity in Ah or Wh, is made available, 
support will be added. Note that there are 3rd party tools that do supply this
data in a usable format, but they are not in core so no point.

3. BSDs All: have found no way to get physical CPU counts. this will lead to odd 
outputs in some cases, like a 2 cpu system reporting itself as a 2x the actual 
core counts single CPU, but the data just isn't there as far as I know. 
Dragonfly in some cases appears to have that data.

4. BSDs All: so far no way to get live per core cpu speeds using a file or fast 
command query. Thought I'd found a way in FreeBSD but that was not the correct 
clockrate values, or inconsistently right/wrong, so not using it. Also saw the 
same issue with max/min frequencies in FreeBSD so removed that item, it's 
better to show nothing than data that is not reliable or actually not even 
referring to what it seems to be.

5. BSD SOC Support: An issue poster asked why FreeBSD (but really BSD in 
general) SOC ARM device, like RaPi, support, was so weak in inxi. The reason is 
simple: to do SOC ARM device data in a meaningful way requires a complete path 
based data structure, which the BSDs do not appear to have, at least from what 
I've seen so far. See Linux's /sys data structures for examples of what is 
required to add or expand inxi SOC device support in inxi. It's hard even with 
that type of rich path based data, and without it I won't try.

The bright side is inxi runs perfectly on such devices, no errors, which was 
amazing to see, and spoke volumes of the recent work done to extend support for 
the BSDs.

6. Perl / inxi, when run as root, shows read error when trying to open a 200 / 
--w------- permission /sys uevent file for reading. The test works as expected 
as user, but not as root. Perl will try to read it when run as root even though 
it has no read permissions, only write. This in reality only manifests on very 
old /sys, from Debian Etch kernel 2.26 days.

--------------------------------------------------------------------------------
BUGS:

1. tput + urxvt / FreeBSD: There appears to be a bug in Arch Linux urxvt that 
leads to failed terminal/console size from tput. Also while trying to resolve 
this bug, discovered that if you use "tput cols 2>/dev/null" in FreeBSD, for 
some inexplicable reason tput puts out defaults 80 cols x 24 rows. Why? Who 
knows. Added in non numeric tests of output to handle errors from tput instead.

The bug appears to be what rxvt reports itself as vs what it is actually running 
as. This issue isn't present in any other distro I tried, but could just be a 
new bug in urxvt, don't know.

2. Elbrus CPU: Ongoing issue #197 Elbrus poster gave sample of new 2C3 cpuinfo, 
that exposed some bugs internally in inxi Elbrus handling, I was using integer 
values instead of hex for model IDs in the Elbrus logic, which would fail after 
model 9.

3. BSD dmesg.boot: The logic used for dmesg.boot data processing had errors, and 
had to be fully redone because of the need to detect in a reliable way the 
current state of USB drives. This logic now is much more robust and reliable, 
and no longer relies on using 'uniq' values per line, which would fail in all 
kinds of situations.

4. OpenBSD USB Speeds: bugs fixed for OpenBSD speeds, these were found during 
the USB data refactor testing process. 

5. BSDs: in some cases, wrong memory used values were being generated, this 
should be largely corrected now. Also pulled the weird NetBSD use of 
/proc/meminfo which had wrong data in it, and now use vmstat for all BSDs, which 
after the used bug fixes, is more reliable for BSDs.

6. All systems: CPU stepping would report as N/A if stepping 0, luckily I came 
across some systems with an actual stepping: 0, which are not common.

7. FreeBSD: dmidecode sourced L2 cache data failed to show correct totals in 
some cases. Due to no MT detection possible for FreeBSD currently, these totals 
will still be wrong, but now it says note; check to let users know.

8. dmidecode: some cases were getting the wrong failure error message, this bug 
became exposed due to OpenBSD locking /dev/mem even to root, which then failed 
to show the expected message. This was a bug, and is now corrected.

9. FreeBSD: partition swap size didn't show in at least some cases, that's 
corrected.

10. Linux Partitions: partitions would let doubled swap items through in several 
cases, and also failed to create in rare cases matches for hidden partition 
mapped id's. Finally tracked down the actual cause, when moving the partition 
filters I'd forgotten to add swap into the filter list, oops. But now it will 
catch duplicates in several different ways, so that's fine.

11. Unmounted: Failed to properly handle detecting RAID components in the case 
of lvm, mdraid, it was only working for zfs. This was an accident, and should 
now be corrected.

--------------------------------------------------------------------------------
FIXES:

1. Code Folding: Note that this was NOT a bug or failure in inxi, it was a bug 
in scintilla/scite geany code editors with folding, basically if you commented 
out logic, without using a space or other marker after the comment #, folding 
would break in weird ways. Obviously the core scintilla engine should IGNORE the 
darned # commented out lines, but it doesn't, which is a real bug. But not in 
inxi.

This was however worth working around, because without folding, you can't work 
on or learn how inxi works, and the only editor I know of in the free software 
eco-system that can handle folding reasonably accurately was until now 
Kwrite/Kate code editors, and those have some real, long standing, weaknesses, 
and bugs around folding that have never been resolved, and yes, did notify them 
about them, and no, they remain unfixed after years, or they were fixed briefly, 
then broke again.

So it was important to expand the base of possible code editors to more than 
just the KDE stuff. Fixing this was tedious, but I think worth it. On the bright 
side, geany/scite folding / unfolding is FAST, and once the code issues that 
triggered folding failures were resolved, very accurate, much better than Kate's 
to be honest, though Kate isn't as picky, but Kate's unfold top nodes has been 
broken more often than it's worked.

To avoid this issue, it's also important to configure geany/scite to use a space 
after the comment when using keyboard shortcuts to comment out lines/blocks. 
Same goes for Kate/Kwrite, by the way.

2. Battery: Forgot to add battery-force to -v7, which means you would never see 
the battery line in full output if there was no battery present, this is similar 
to how raid-forced worked, it was just an oversight which I hadn't noticed until 
testing the new BSD battery logic.

3. Indentation: small indentation fixes on Sound Server data. Those are visible 
with -y1, that is.

4. OpenBSD PCI: enabled Device matching to PCI networking device, this required 
an odd little hack, but seems to be pretty reliable, and allowed me to add 
driver to PCI device reports as well. Not sure why driver isn't in pcidump -v 
but it probably will be in the future. Note to self: add in support for that so 
if they include it in a future release, it will suddenly 'just work', assume 
they use the same basic syntax as usbdevs -vv output.

5. BSDs: Added in some null data protections for BSDs, which do not always have 
all the data types found in Linux, those would trigger Perl undefined value 
errors, which are warnings that inxi failed internally to test for null data in 
that, but it's hard to know when to do that when the data is basically always 
there in Linux.

6. Debugger: Added test for required Net::FTP module in debugger, had forgotten 
to make that test explicit, which led to odd failures.

7. BSDs: nvme detections should be better now. But I have seen no live test 
system to confirm the fixes work as expected, plus, at least, OpenBSD swaps 
nvme0 to sd0 internally, so I'm not actually sure how that data will even work, 
we'll see how that goes.

8. BSDs: oddly, despite using 0x hex numbers almost everywhere, for CPU 
stepping, the stepping is in decimal, which is even odder because CPU makers 
list their steppings as hex in many if not most cases. In case this is corrected 
in the future, if 0x appears before stepping number, will not then try to 
convert to hex since it already is.

9a. CPU L3: Subtle, probably won't change behaviors, but L3 cache is per physical 
CPU in every case I've found, so never multiply value by cores for L3. Like 
everything, this may lead to corner cases being wrong, but that's life, it will 
also lead to the data being right for most users.

9b. CPU L1: Different L1 syntaxes found so inxi now uses more loose detections, 
should cover most OpenBSD L1 variants at least.

10. BSDs: inxi was using internal 'sleep' right before reading /proc/cpuinfo, 
but that was silly for BSDs since cpu speeds there come from sysctl, so the BSD 
sleeps are now running before sysctl if CPU data feature is required.

11. Too many to remember, but lots of subtle message output changes to make more 
clear, more accurate, shorter, whatever.

12. USB: a very subtle fix, some devices can be both audio and video, like 
cameras, but inxi would default to the first detected. Now it checks for both 
before going to the list of checks, and correctly assigns a type that is both 
audio and video to the audio and video hashes so both features will show the USB 
device, not just Audio.

13: BSD: fixes for BSD ifconfig IF status, it was slicing off the full status 
string, like 'no network' to 'no', which is silly. Now shows full string.

14. OpenBSD: restored USB Hub ports: xx item, I hadn't realized that the data 
was still there with usbdevs but it required an extra -v, like: usbdevs -vv to 
trigger, so now the OpenBSD USB ports works fine again.

15. Fedora Xorg: updated --recommends to use the newer split apart xorg utils 
package names, only xrandr I think needed updating. Thanks Mr. Mazda for keeping 
up with that stuff!

16. OpenBSD SMART: the actual device being queried turns out to the 'c' 
partition, the one that represents the entire disk, NOT the main device ID, like 
sd0, so now inxi tacks on 'c', sd0c, when smartctl runs, and it works fine. So 
previously SMART report would never have worked in OpenBSD.

17. Partion labels/uuids: in Partitions and Unmounted, does not show label/uuid 
if fs type is ffs or if fs is a logical type one, like zfs, hammer, and remote 
fs mounts etc. This cleans up output, since these file system types will never 
have labels or uuids.

18. Mr Mazda inxi was missing data and showing errors if run in Debian Etch with 
Perl 5.008, and I realized I'd slipped up and had used the -k option without 
testing lspci version, but -k was only available in 3.0 in Lenny. But -v turns 
on -k automatically, so the easy solution was just to remove the -k and leave 
the -nnv, which is the same thing, but does not cause errors in early lspci.

There are also errors with reading as root some /sys uevent files, but upon 
examination, those had only root write permission, so the perl -r test isn't 
right. Don't think that can be fixed. See Can't/Won't fix for more.

Another issue I noticed was that in some cases Perl seemed to lose track of some 
hash values in local %trigger in OptionsHandler, and just lose them, thus 
leading to things like --help --version --recommends not working. Moving 
%trigger to globals %show and %use fixed that one, but that's weird, no idea 
what happened, but it works now.

Tested in Sarge 3.1, where core modules have to be explicitly installed, they 
were not included in base Perl install. Kernel 2.4 had some key differences, 
different lspci syntax, different /proc/partitions, so the block device output 
and device output is flawed, but otherwise inxi worked fine in Sarge, from 2005!
But these issues will not be corrected, kernel 2.24 is just too old, lol.

inxi should always run ok in very old systems, like Etch, back to when Perl 5.8 
was standard, so bugs like this are always welcome, it's easy to slip up and use 
something that didn't work in those old systems, then forget to test.

19. Corner case SMART errors, sometimes occur much later in output than inxi 
expects, this is now corrected and errors should show in smart data no matter 
where the main error type occured. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Elbrus: Going along with Bug 2, Updated Elbrus microarch to use family 6, 
assuming models 10, 11, are the same, which they should be since 12 is the same 
as in family 4.

2. IPMI Sensors: More sensor syntax detections, sensors will never be stable...

3. OpenBSD: Rolled out live battery state feature, they have very good data, 
simple, but solid, that allows for a quality battery state report. Handles both 
Wh/Ah, though I am slightly suspicious of the reality of the arithmetic for Ah > 
Wh conversion, it seems to be too high. That's Ah * Design Voltage. But Linux 
battery data has the same issue, though I think in most cases, the data is in 
Wh, so this issue isn't BSD specific. My suspicion is that the voltages used to 
determine Ah may actually be slightly lower than the listed design voltage, 
which inxi calls min: but it's actually the design voltage.

Unknown if NetBSD data is the same as OpenBSD for battery, was unable to locate 
any samples, so can't say, if you have a NetBSD laptop that correctly reports 
battery state in sysctl -a, please file an issue with some sample battery 
charge/voltage syntax and values, ideally from > 1 system. If the data is 
complete, it's easy to add support.

4a. BSD USB rev: inxi now emulates USB rev versions for BSD USB speed/rev 
version data. Note that this is not guaranteed to be right, because USB devices 
can be different rev versions than the speed they run at, but as far as I could 
find, the USB revision data is not available in any practical sense, unless I 
create a complicated recursive tool to build up a snapshot of the usb system and 
devices from dmesg data, but I already blew a day on that attempt, so will wait 
for more complete data in the usb tools in future. The rev version is based on 
the device/hub speed, using a standard USB rev speed mapping. But a 12 Mbps 
device can be rev 2, not rev 1.1, for example, that is, it's actually a USB 2.0 
device, but a slow speed one. 

4b. USB Type: Expanded fallback USB device type tests, these are useful for 
cases where it's either a vendor defined type, or for Open/NetBSD, which do not 
yet show USB class/subclass data. But it's a good fallback tool, added Mass 
Storage, expanded detections.

5. BSD Sensors: Going along with Enhancement 3, rolled out live sensors data. 
Confirmed working in OpenBSD and FreeBSD, not sure about NetBSD, no data, 
problem with vm testing is no sensors, but don't have any NetBSD hardware 
installs to verify. Stan gave it a good try, but could not get NetBSD running so 
far, maybe later.

This basically means the -B and -s features are largely feature complete for the 
BSDs as far as practical, though due to difficulties in getting the data in a 
consistent clear way, some more advanced features, like gpu temps, which are now 
available in Linux kernel values and lm-sensors, do not yet appear to be present 
in the BSDs, though if this changes, the structures are in place to make 
updates to these logics very easy to implement now.

Note that the --sensors-include and --sensors-exclude items, or config items, 
work fine with this BSD logic, though you have to figure out what exact syntax 
to use, but that's the same in Linux.

6. OpenBSD Pledge: Yes, that's right, inxi is now Pledged!!! In OpenBSD, anyway, 
they did a really good job, and the OpenBSD Perl packager made a very nice Perl 
modules, OpenBSD::Pledge, which was very easy to implement. Now I know what inxi 
needs to run its features!!

So far OpenBSD only, but Pledge seems like a really good idea, so I figured, 
let's give it a spin, even if it will only currently work on OpenBSD, but that's 
fine, inxi is pledged as tightly as I could make it, including unpledging 
features not required post options processing, once inxi knows what it's 
actually going to be doing.

Note that I'm aware of OpenBSD::Unveil, but that's a lot harder to implement due 
to never really being sure about what files inxi will need to be looking at 
until well into the logic. I may look at that in the future.

7. Bluetooth Rfkill: Due to ongoing failures in current inxi to show consistent 
Bluetooth hci report on Linux, added in one last fallback, rfkill state, which 
allows inxi to always fallback to at least that basic data. Also added in which 
tool is providing the report mostly, like: Report: bt-adapter ID: hci0 and so 
on.

Also integrated into -xxx data, or for down state, the full rfkill report, since 
that can be quite useful.

Note that bluetooth is a real pain for users to debug because you can have:

 * Bluetooth Service: enabled/disabled 
 * Bluetooth Service: started/stopped 
 * bluetoothctl: start/stop 
 * bt-adapter: start/stop 
 * hciconfig: start/stop 
 * rfkill: software: block/unblock; hardware: block/unblock - however, for 
   hardware, that means a physical button has been pressed to disable it, on the 
   laptop that is.
	
To make matters worse, one tool does not always even know when another tool has 
changed something, for example, if I rfkill blocked hci0, then unblocked it, 
hciconfig would keep seeing it as down until it was switched to on with 
hciconfig explicitly. This is I suspect one reason hciconfig is being dropped, 
it doesn't know how to listen to the newer tools like bluetoothctl, bt-adapter, 
or rfkill.

8. OpenBSD: Going along with Code Change 1, now has disk serial (doas/root), 
more consistent physical block size data, more reliable disk data, and for -Dxx, 
duid, if available. Also added disk partition table scheme, aka MBR / GPT. Some 
of these new items may also work with NetBSD. See also Fix 17, SMART fix for 
OpenBSD.

9. OpenBSD/NetBSD/FreeBSD: the DiskDataBSD refactor now allows Unmounted 
partitions report. 

10. OpenBSD: added in CPU MT detections using siblings data, I think only 
OpenBSD and Dragonfly support proper MT cpu core counts. Still no way to get 
physical cpu counts in OpenBSD or FreeBSD or NetBSD that I am aware of. 

11. OpenBSD: added in cpu speed min/max data, that was available in most cases, 
didn't realize that.

12. BSDs: expanded and made more robust cpu L1/L2/L3 cache detections, now for 
example, OpenBSD will report its L1/L2/L3 cache without root. FreeBSD requires 
root since that data is coming from dmidecode.

This logic update made BSD L-cache data much more reliable and consistent, and, 
important, easy to work with. This was directly connected to Code Changes 2 and 
3, which made dealing with those data sources a lot easier.

Note that L1/L2 cache data if not from OpenBSD will show note: check because 
it's not possible to determine if it's a multithreaded MT cpu or not, and thus 
if L1/L2 * core count would so often be totally wrong that inxi won't try to 
guess, it will just list the single value found, and tell the user to check it 
themselves.

13. OpenBSD: Added rcctl tool to init tools, I hadn't known about that one, that 
replaces the fallback default used before, /etc/rc.d.

14. RAM Vendor: Issue #245 raised the point that it would be good to try to show 
RAM vendor data when the manufactorer field is empty, and since that logic is 
already present in disk_vendor, it was just matter of researching the product 
IDs to find the matching patterns for the RAM vendors, the initial list is 
pretty good, but will need updates now and then to correct errors. Also will 
override only vendor ID 4 character hex value and see if it can find a better 
value. 

15. OpenBSD RAM: data quality is decent (no vendor/product no, unfortunately). 
The data is often, but sadly not always, available. I'm not clear why sometimes 
it isn't, but since OpenBSD also defaults to blocking /dev/mem to even root 
user, which then blocks dmidecode, this is the only practical way to give basic 
RAM data for OpenBSD, so that's running fine now, when the data is available, 
with the added bonus of not needing doas/root. 

Note that due to the way that this data is present, I can have inxi deduce some 
things like how many arrays there are, and then guess at overall capacity, max 
stick size, and so on, but all Array-x: values are followed by note: est because 
they are never based on hard data, just extrapolations. I debated if inxi should 
even show the guesses, but I think by saying note: est after each Array-x: item, 
it's pretty clear that it's not hard data, and it does give an idea roughly. I 
made an initial guess at > 1 ram array but found no data samples to let me see 
if my guess was right or not, so > 1 array remains roughly theoretical until 
shown to work or not work empirically.

While NetBSD sometimes has the system ram data in a similar way that OpenBSD 
does in dmesg.boot, it varies too much, and is too inconsistent. There are not 
enough data samples with good consistent data, and the samples I did see 
suggested that it would take too much code and convoluted logic to handle the 
variations, so I'm leaving this one alone. Also, NetBSD probably doesn't block 
/dev/mem so dmidecode should work fine.

16. Using system clang version info for OpenBSD kernel compiler, the assumption 
being that a BSD is an OS, so the Clang version it shipped with would be the 
clang version that compiled the kernel. Please correct if this is wrong.

17. OpenBSD RAID: support added for softraid, including for drive storage 
totals, unmounted raid component detections. Plugged in pretty smoothly, able to 
generate a partial report for non root, and shows message if not root. 

18. VM detections upgraded, particularly for BSDs, now includes vmm, hvm, 
hyper-v, kvm. Not all of these would have been detected before. Also cleaned up 
vm logic, moved all vm detections into $dboot{'machine-vm'}, and only use the 
first found item. 

19. Disk Vendors!!: Yes, last, but not least!! More disk vendors, vendor ID 
matches!! Yep. What else can I say? Eternity? Man's quest for something that 
cannot be found, yet these strivings never cease, here manifested by always new 
vendors and ID matches!

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Very significant ongoing upgrades to the docs in inxi-perl/docs/, 
particularly in inxi-values.txt, inxi-resources.txt, and inxi-data.txt. These 
are now increasingly useful, and I am trying to keep in particular 
inxi-values.txt up to date as a primary reference for various features, though 
it will always lag, because that's how it is, lol.

2. Cleaned up changelog, made 80 cols wide for text, bars, etc, made numbered 
lists and headers consistent, but otherwise did not change any of the actual 
content.

--------------------------------------------------------------------------------
CODE:

1. Complete rewrite of BSD disk/partition data tools, now there is one core tool 
that generates a mega-disk/partition hash, which is then used for all features 
that need partition/disk data. This worked out super well, and allowed new 
features like BSD Unmounted disk data to be generated for the first time ever, 
along with filling in various block device fields that were missing before.

2. Change 1 also went along with a refactor of dmesg data tool for BSDs, which 
allowed for much more granular data generation, along with a complex %dboot hash 
which stores all sub types as well as the main full dataset. This allowed inxi 
to stop looping through all of dmesg data each time a feature needed it. Now all 
the data types are assigned if required by a feature, and only then. This, along 
with change 1, worked really well.

See also Bug 3, which mandated completely changing how dmesg.boot and dmesg live 
data were / are merged, the result is far more robust now, and far less prone to 
error.

3. Similar to dmesg changes, used same methods for sysctl data, now all the data 
is assigned to %sysctl data structure based on if needed or not, so it only does 
the assignments one time, in one location. Much cleaner code this way, and 
allows for testing set/unset substructures, like $sysctl{'cpu'}.

4. The %dboot and %sysctl refactors went so well that I switched the core USB 
and Devices to also use %usb and %devices structures. These updates let me dump 
a lot of global hashes and arrays, and leaned everything down a lot, and also 
removed basically all the testing loops for these data types, now the Item 
features just test to see if a reference to the specific type exists, if it 
does, it has data, if not, it doesn't, this is a lot easier to manage.

5. Ongoing: moving related subroutines to Packages, the goal is to have pretty 
much all related subroutines (functions) contained in parent classes/packages, 
makes it easier to maintain.

6. Ongoing: making all internal package tools have similar sub names, getting 
rid of the specific names for output and data generator functions. This makes 
each Item Generator increasingly like all the others, as much as practical.

7. A big one, renamed all the feature generators to be XxxxxItem, instead of 
XxxxData, which was colliding as a package name with actual data generator 
tools, now all the Feature generators are [Feature]Item, and all the Data 
generators have Data type names where relevant. This avoided in particular the 
silly case where I was relying on case to differentiate UsbData and USBData, 
feature vs data generator.

8. As part of the move to data hash global structures, also moved as many of the 
top global scalars and hashes and arrays to these now much more heavily utilized 
global hashes, like %alerts, %use, %fake, %force, and so on. There are now far 
fewer globals running than before, and where it makes sense, I keep moving them 
into global hashes, and giving the global hashes more work to do.

9. Significantly expanded list of debuggers for specific data types always 
available, see docs/inxi-values.txt for list of options there. Decided for rapid 
development, it was too much of a pain to always be uncommenting the debuggers, 
so now am uncommenting, adding to @dbg supported items, then documenting. I 
guess this means the @dbg items are more or less stable and consistent now, give 
or take.

10. Refactored UsbData and DeviceData, for in particular the BSDs, to be much 
more robust and to rely less on very fragile regex parsing patterns, takes more 
lines of code, but better than having the detections break every other BSD 
release. This was part of the %device and %usb refactors as well.

11. Fixed system_files() too, which was really silly logic, it used a global 
packed hash of system files, then would do a function call for the paths when 
required, which was redundant since the values were already in a hash which 
could be used directly. This was a throwback to inxi gawk/bash, where hashes 
were not really used in this way, and the logic had been translated to Perl 
without thinking about it, but once I thought about it, I realized how silly 
that was. This must have knocked off a good 50 or more unnecessary, and always 
expensive, function calls.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 16 Apr 2021 20:37:35 -0700

================================================================================
Version: 3.3.03
Patch: 00
Date: 2021-03-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bugs!! Fixes! Spring cleaning! 

Because these are either newly created, or newly discovered, bugs, this release 
was pushed as early as possible to get them fixed asap.

--------------------------------------------------------------------------------
BUGS:

1. Desktop: Lumina detection had a syntax error which made it not work. This has 
been broken for a while.

2. Logical: if not root, and if LUKS / bcache detected, failed to load 
proc_partitions, which generates error on --logical --admin since the required 
components data was not loaded. This was an oversight.

3. The 3.3.02 ShellData refactor created a bug for console IRC, showed shell, 
not irc client, name, and set default shell data which also showed.

4. Console IRC tty: there was also an older bug that made -S, -G not work 
consistently, and there were errors that had been missed for many years in that 
logic. These should all be corrected, console irc out of display, or in display 
as root, should now show tty info, tty size in -G.

--------------------------------------------------------------------------------
FIXES:

1. Memory: restored $BSD_type block on /proc/meminfo and force NetBSD to use a 
corrected vmstat. This leaves that block of logic to correct the NetBSD oddities 
in meminfo, but it may fix future isses that popup.

2. -Sxxx man page item incorrectly said XDG_VTNR was systemd/linux, it's not, 
it's various things, GhostBSD has it, for example. See what you get for 
believing what people say!

3. Logical: added in N/A for null maj-min in --logical report. While bug 2 
triggered those errors, there could be future cases where maj-min are null, like 
BSD lvm data etc.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going along with Fix 1, added '--force meminfo' in case you really want that.

2. Distro: System Base: Added TrueNAS detection.

3. Package Data: Added mport [MidnightBSD] type. That requires root to run for 
some odd reason, so won't see the best output if not root.

--------------------------------------------------------------------------------
CHANGES:

1. Moved logical to -v7 from -v8, it's stable enough now.

--------------------------------------------------------------------------------
CODE:

1. Moved get_tty_number and get_tty_console_irc to ShellData:tty_number and 
ShellData::tty_console_irc.

ShellData::tty_number was being loaded several times, added 
$loaded{'tty-number'} test, and made client{'tty-number'} to store value.

tty_console_irc changed to console_irc_tty, which is what it gets, removed hacks 
and made it load once and store result in client hash.

2. Optimization: retested sub vs package::method and they run at exactly the 
same time, give or take, so moving more stuff into packages to make it easier to 
maintain.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 17 Mar 2021 19:36:39 -0700

================================================================================
Version: 3.3.02
Patch: 00
Date: 2021-03-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Huge upgrade!! Bug Fixes!! Refactors!!! BSDs!!! More BSDs!!! raspberry pi!! New 
Features!!! Enhanced old features!!! Did I mention bluetooth?! USB? Audio? No? 
well, all hugely upgraded!

--------------------------------------------------------------------------------
BUGS:

1. Sadly, 3.3.01 went out with a bug, forgot to remove a debugger, resulted in 
hardcoded kernel compiler version always showing.

Note that there is a new inxi-perl/docs/inxi-bugs.txt file to track such bugs, 
and matched to specific tagged releases so you know the line number and items to 
update to fix it.

2. Typo in manjaro system base match resulted in failing to report system base 
as expected.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. OpenBSD made fvwm -version output an error along with the version, and not in 
the normal format for standard fvwm, this is just too complicated to work around 
for now, though it could be in theory by creating a dedicated fvwm-oBSD item in 
program_values. But that kind of granularity gets too hard to track, and they 
are likely to change or fix this in the future anyway. Best is they just restore 
default -version output to what it is elsewhere, not nested in error outputs. 

2. Discovered an oddity, don't know how widespread this is, but Intel SSDs take 
about 200 milliseconds to get the sys hwmon based drive temps, when it should 
take under a millisecond, this may be a similar cause as those drives having a 
noticeable SMART report delay, not sure. This is quite noticeable since 200 ms 
is about 15% of the total execution time on my test system.

--------------------------------------------------------------------------------
FIXES:

1. For --recommends, added different rpm SUSE xdpyinfo package name.

2. Distro Data: added double term filter for lsb-release due to sometimes 
generating repeated names in distro.

3. Packages: fix for appimage package counts.

4. Desktop: fixed ID for some wm when no xprop installed, fallback to using 
@ps_cmd detections, which usually work fine.

5a. When swap used was 0, showed N/A, fixed to correctly show 0 KiB.

5b. If no swap devices found, BSDs were not correctly showing no swap data found 
message. Corrected.

6a. Bluetooth: Removed hcidump from debugger, in some cases, that will just hang 
endlessly. Also wrapped bluetoothctl and bt-adapter debugger data collection 
with @ps_cmd bluetooth running test. Only run if bluetooth service is running.

6b. Bluetooth: running detections have to be very strict, only bluetoothd, not 
bluetooth, the latter can show true when bluetoothd is not running, and did in 
my tests. 

7. USB: with Code Change 1, found a few places where fallback usb type 
detections were creating false matches, which resulted in say, bluetooth devices 
showing up as network devices due to the presence of the word 'wireless' in the 
device description. These matches are all updated and revised to be more 
accurate and less error prone.

8. Battery: an oversight, had forgotten to have percent used of available 
capacity, which made Battery data hard to decipher, now it shows the percent of 
available total, as well as the condition percent, so it's easier to understand 
the data now, and hopefully more clear.

9a. OpenBSD changed usbdevs output format sometime in the latest releases, which 
made the delicate matching patterns fail. Updated to handle both variants. They 
also changed pcidump -v formatting at some point, now inxi will try to handle 
either. Note that usbdevs updates also work fine on NetBSD.

9b. FreeBSD also changed their pciconf output in beta 13.0, which also broke the 
detections completely, now checks for old and new formats. Sigh. It should not 
take this much work to parse tools whose output should be consistent and 
reliable. Luckily I ran the beta prior to this release, or all pci device 
detections would simply have failed, without fallback.

9c. Dragonfly BSD also changed an output format, in vmstat, that made the RAM 
used report fail. Since it's clearly not predictable which BSD will change 
support for which vmstat options, now just running vmstat without options, and 
then using processing logic to determine what to do with the results.

10. It turns out NetBSD is using /proc/meminfo, who would have thought? for 
memory data, but they use it in a weird way that could result in either negative 
or near 0 ram used. Added in some filters to not allow such values to print, now 
it tries to make an educated guess about how much ram the system is really using 
based on some tests. 

11. Something you'd only notice if testing a lot, uptime failed when the uptime 
was < 1 minute, it had failed to handle the seconds only option, now it does, 
seconds, minutes, hours:minutes, days hours:minutes, all work.

12. Missed linsysfs type to exclude in partitons, that was a partner to 
linprocfs type, both are BSD types.

13. Added -ww to ps arguments, that stops the cutting width to terminal size 
default behavior in BSDs, an easy fix, wish I'd known about that a long time 
ago.

15. gpart seems to show sizes in bytes, not the expected KiB, so that's now 
handled internally. Hopefully that odd behavior won't randomly change in the 
future, sigh.

16. Fixed slim dm detection, saw instance where it's got slim.pid like normal 
dms, not the slim.lock which inxi was looking for, so now inxi looks for both, 
and we're all happy!

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added in something that should have been there all along, now inxi validates 
the man page download as well as the self, this avoids corrupted downloads 
breaking the man.

2. Init: added support for shepherd init system.

3. Distro Data: added support for guix distro ID; added support for NomadBSD, 
GhostBSD, HardenedBSD system base. GhostBSD also shows the main package version 
for the distro version ID, which isn't quite the same as the version you 
download, but it's close. Also added os-release support for BSDs, using similar 
tests as for linux distros, that results in nicer outputs for example for 
Dragonfly BSD.

4. Package Data: added guix/scratch [venom]/kiss/nix package managers. Update 
for slackware 15 package manager data directory relocation, now handles either 
legacy current or future one.

5. Repos: added scratch/kiss/nix-channels; Added GhostBSD, HardenedBSD pkg 
repos.

6. USB Data: added usbconfig. That's FreeBSD's, and related systems.

7. Device Data: Added pcictl support, that's NetBSD's, I thought inxi had 
supported that, but then I remembered last time I tried to run netBSD in a vm, I 
couldn't get it figured out. Now debugged and working reasonably well.

8. Raspberry Pi 3, 4: ethernet nic now detected; wifi device, which is on a 
special mmcnr type, now works, that stopped working in pi 3, due to the change, 
now it's handled cleanly. Also added support for pi bluetooth, which lives on a 
special serial bus, not usb. For Raspberry Pi OS, added system base detections, 
which are tricky. Also matched mmcnr devices to IF data, which was trickyy as 
well. Note that as far as I could discover, only pi puts wifi on mmcnr.

9. Bluetooth: due to deprecated nature of the fine hciconfig utility, added in 
support for bt-adapter, which also allows matching of bluetooth data to device 
data, but is very sparse in info supplied compared to hciconfig. bluetoothctl 
does not have enough data to show the hci device, so it's not used, since inxi 
can't match the bluetooth data to the device (no hci[x]). This should help the 
distros that are moving away from hciconfig, in particular, AUR is only way arch 
users can get hciconfig, which isn't ideal.

10. New tool and feature, ServiceData, this does two things, as cross platform 
as practical, show status of bluetooth service, this should help a lot in 
support people debugging bluetooth problems, since you have bluetooth enabled 
but down, or up, disabled, and you can also have the device itself down or up, 
so now it shows all that data together for when it's down, but when the device 
is up, it just shows the device status since the other stuff is redundant then.

In -Sa, it now shows the OS service manager that inxi detected using a bunch of 
fallback tests, that's useful to admins who are on a machine they don't know, 
then you can see the service manager to use, like rc-service, systemctl, 
service, sv, etc.

11. Big update for -A: Sound Servers: had always been really just only ALSA, now 
it shows all detected sound servers, and whether they are running or not. 
Includes: ALSA, OSS, PipeWire, PulseAudio, sndio, JACK. Note that OSS version is 
a guess, might be wrong source for the version info.

12. Added USB device 'power:' item, that's in mA, not a terrible thing to have 
listed, -xxx. This new feature was launched cross platform, which is nice. 
Whether the BSD detections will break in the future of course depends on whether 
they change the output formats again or not. Also added in USB more chip IDs, 
which can be useful. For BSDs, also added in a synthetic USB rev, taken from the 
device/hub speeds. Yes, I know, USB 2 can have low speed, full speed, or high 
speed, and 1.1 can have low and full speeds, so you actually can't tell the USB 
revision version from the speeds, but it's close enough.

13. Made all USB/Device data the same syntax and order, more predictable, bus, 
chip, class IDs all the same now.

14. Added in support for hammer and null/nullfs file system types, which trigger 
'logical:' type device in partitions, that's also more correct than the source: 
Err-102 that used to show, which was really just a flag to alert me visibly that 
the partition type detection had simply failed internally. Now for detected 
types, like zfs tank/name or null/nullfs, it knows they are logical structures.

15. Expanded BSD CPU data, where available, now can show L1/L2/ L3 cache, cpu 
arch, stepping, family/model ids, etc, which is kind of nifty, although, again, 
delicate fragile rules that will probably break in the future, but easier to fix 
now.

16. By an old request, added full native BSD doas support. That's a nice little 
tool, and it plugged in fairly seamlessly to existing sudo support. Both the 
internal doas/sudo stuff should work the same, and the detection of sudo/doas 
start should work the same too.

17a. Shell/Parent Data: Big refactor of the shell start/parent logic, into 
ShellData which helped resolve some issues with running-in showing shell name, 
not vt terminal or program name. Cause of that is lots of levels of parents 
before inxi could reach the actual program that was running inxi. Solution was 
to change to a longer loop, and let it iterate 8 times, until it finds something 
that is not a shell or sudo/doas/su type parent, this seems to work quite well, 
you can only make it fail now if you actually try to do it on purpose, which is 
fine.

This was very old logic, and carried some mistakes and redundancies that made it 
very hard to understand, that's cleaned up now. Also restored the old (login) 
value, which shows when you use your normal login account on console, some 
system will also now show (sudo,login) if the login user sudos inxi, but that 
varies system to system.

17b. BSD running-in: Some of the BSDs now support the -f flag for ps, which made 
the parent logic for running-in possible for BSDs, which was nice. Some still 
don't support it, like OpenBSD and NetBSD, but that's fine, inxi tests, and if 
no support detected, just shows tty number. Adding in more robust support here 
cleaned up some redundant logic internally as well.

17c. Updated terminal and shell ID detections, there's quite a few new terminals 
this year, and a new shell or two. Those are needed for more reliable detections 
of when the parent is NOT a shell, which is how we find what it is.

18. Added ctwm wm support, that's the new default for NetBSD, based on twm, has 
version numbers.

19. Upgraded BSD support for gpart and glabel data, now should catch more more 
often.

20. For things like zfs raid, added component size, that doesn't always work due 
to how zfs refers to its components, but it often does, which is better than 
never before.

21. To make BSD support smoother, got rid of some OpenBSD only rules, which in 
fact often apply to NetBSD as well. That may lead to some glitches, but overall 
it's better to totally stay away from OpenBSD only tests, and all BSD variant 
tests, and just do dynamic testing that will work when it applies, and not when 
it doesn't. In this case, added ftp downloader support for netBSD by removing 
the openBSD only flag for that item.

There's a bit of a risk there in a sense since if different ftp programs with 
different options were to be the fallback for something else, it might get used, 
but that's fine, it's a corner case, better to have them all work now than to 
worry about weird future things. But limiting it to only BSDs should get rid of 
most of the problem.

vmstat and optical drive still use net/openBSD specifics because it is too 
tricky to figure out it out in any more dynamic way.

22. For -Sxxx, added if systemd, display, virtual terminal number. Could be 
useful to debug subtle issues, if the user is for example not running their 
desktop in vt 7, the default for most systems.

23. And, last but not least, yes, you guessed it!!! You've been paying 
attention!!! More disk vendors, more vendor IDs!!! As always, thanks linux-lite 
hardware database!!

--------------------------------------------------------------------------------
CHANGES:

1. Moved battery voltage to -Bx output, the voltage is quite important to know 
since that is the key indicator of battery state. If voltage is within .5 volts 
of specified minimum, shows voltage for -B since that's a prefail condition, 
it's getting close to death.

2. In partitions and raid, when the device was linear raid logical type layout, 
it said, no-raid, when it should be 'linear', that's now cleaner and more 
correct.

3. When running-in is a tty value, it will now show the entire tty ID, minus the 
'/dev/tty', this will be more precise, and also may resolve cases where tty was 
fully alpha, no numbers, previously inxi filtered out everything that was not a 
number, but that can in some tty types remove critical tty data, so now it will 
show:

running-in: 
tty 2 [not changed]; tty pts/2 [adds pts/]; tty E2 [adds the E];
tty rx [would have not shown at ll before]

--------------------------------------------------------------------------------
CODE:

NOTE: unlike the previous refactors, a lot of these changes were done to make 
inxi more maintainable, which means, slightly less optimized, which has been my 
preference in the past, but if the stuff can't be maintained, it doesn't matter 
how fast it runs!

These changes have really enhanced the quality of the code and made it a lot 
easier to work with. It's also now a lot easier to add debuggers, force/fake 
data switches, etc, so it gets done, unlike before, when it was a pain, so it 
got skipped, and then caused bugs because of stray debuggers left in place, and 
so on.

The bright side is while reading up on this, I learned that using very large 
subs is much more efficient than many small ones, which I've always felt was the 
case, and it is, so the style used internally in inxi proves to be the best one 
for optimizations.

These refactors, ongoing, have now touched at least 1/3, almost 1/2, of the 
entire inxi codebase, so the stuff is getting more and more consistent and up to 
date, but given how old the logic is in places, there will be more refactors in 
the future, and maybe once the code is easier to maintain, some renewed 
optimizations!, if we can find anything that makes sense, like passing 
array/hash references back to the caller, already the first half is done, 
passing references to the sub/method always.

The second part is started, using the Benchmark Perl module, which really speeds 
up testing and helps avoid pointless tweaks that do little re speed 
improvements.

I could see with some care some areas where working on data directly via 
references could really speed things up, but it's hard to write and read that 
type of code, but it's already being done in the recursive data and output 
logics, and a few other places.

1. Large refactor of USBData, that was done in part to help make it work for 
BSDs better, but also to get it better organized.

This refactor also made all the device items, like -A,-G,-N,-E use the same 
methods for creating USB output, previously they had used a hodgepodge of 
methods, some super old, it was not possible to add USB support more extensively 
for BSDs without this change.

Also added in some fallback usb type detection tools using several large online 
collections of that info to see what possible matching patterns could catch more 
devices and correctly match them to their type, which is the primary way now 
that usb output per type is created. This really helps with BSDs, though BSD usb 
utilities suffer from less data than lsusb so they don't always get device name 
strings in a form where they can be readily ID'ed, but it's way better than it 
was before, so that's fine!

Moved all previous methods of detecting if a card/device was USB into USBData 
itself so it would all be in one place, and easier to maintain.

All USB tools now use bus_id_alpha for sorting, and all now sort as well, that 
was an oversight, previously the BSD usb tools were not sorted, but those have 
been enhanced a lot, so sorting on alpha synthetic bus ids became possible.

Removed lsusb as a BSD option, it's really unreliable, and the data is 
different, and also varies a lot, it didn't really work at all in Dragonfly, or 
had strange output, so lsusb is now a linux only item.

2. Moved various booleans that were global to %force, %loaded, and some to the 
already present, but lightly used, %use hashes. It was getting too hard to add 
tests etc, which was causing bugs to happen. Yes, using hashes is slower than 
hardcoding in the boolean scalars, but this change was done to improve 
maintainability, which is starting to matter more.

3. Moved several sets of subs to new packages, again, to help with debugging and 
maintainability. MemoryData, redone in part to handle the oddities with NetBSD 
reporting of free, cached, and buffers, but really just to make it easier to 
work with overall. Also moved kernel parameter logic to KernelParameters, gpart 
logic to GpartData, glabel logic to GlabelData, ip data IpData, check_tools to 
CheckTools, which was also enhanced largely, and simplified, making it much 
easier to work with.

4. Wrapped more debugger logic in $fake{data} logic, that makes it harder to 
leave a debugger uncommented, now to run it, you have to trigger it with 
$fake{item} so the test runs, that way even if I forget to comment it out, it 
won't run for regular user.

5. Big update to docs in branch inxi-perl/docs, those are now much more usable 
for development. Updated in particular inxi-values.txt to be primary reference 
doc for $fake, $dbg, %force, %use, etc types and values. Also updated 
inxi-optimization.txt and inxi-resources.txt to bring them closer to the 
present.

Created inxi-bugs.txt as well, which will help to know which known bugs belonged 
to which frozen pools. These bugs will only refer to bugs known to exist in 
tagged releases in frozen pool distros.

6. For sizes, moved most of the sizing to use main::translate_size, this is more 
predictable, though as noted, these types of changes make inxi a bit slower 
since it moved stuff out of inline to using quick expensive sub calls, but it's 
a lot easier to maintain, and that's getting to be more important to me now.

7. In order to catch live events, added in dmesg to dmesg.boot data in BSDs, 
that's the only way I could find to readily detect usb flash drives that were 
plugged in after boot. Another hack, these will all come back to bite me, but 
that's fine, the base is easier to work on and debug now, so if I want to spend 
time revisiting the next major version BSD releases, it will be easier to 
resolve the next sets of failures.

8. A big change, I learned about the non greedy operator for regex patterns, ?, 
as in, .*?(next match rule), it will now go up only to the next match rule. Not 
knowing this simple little thing made inxi use some really convoluted regex to 
avoid such greedy patterns. Still some gotchas with ?, like it ignores following 
rules that are zero or 1, ? type, and just treats it as zero instances. But 
that's easy to work with.

9. Not totally done, but now moved more to having set data tools set their 
$loaded{item} value in get data, not externally, that makes it easier to track 
the stuff. Only where it makes sense, but there's a lot of those set/get items, 
they should probably all become package/classes, with set/get I think.

10. Optimized reader() and grabber() and set_ps_aux_data(), all switched from 
using grep/map to using for loops, that means inxi doesn't have to go through 
each array 2x anymore, actually 4x in the case of set_ps_aux_data(). This saved 
a visible amount of execution time, I noticed this lag when running pinxi 
through NYTProf optimizer, there was a quite visible time difference between 
grabber/reader and the subshell time, these optimizations almost removed that 
difference, meaning only the subshell now really takes any time to run.

Optimized url_cleaner and data_cleaner in RepoData, those now just work directy 
on the array references, no returns.

Ran some more optimization tests, but will probably hold off on some of them, 
for example, using cleaner() by reference is about 50% faster than by copy, but 
redoing that requires adding in many copies from read only things like $1, so 
the change would lead to slightly less clean code, but may revisit this in the 
future, we'll see.

But in theory, basically all the core internal tools that take a value and 
modify it should do that by reference purely since it's way faster, up to 10x.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 15 Mar 2021 18:42:04 -0700

================================================================================
Version: 3.3.01
Patch: 00
Date: 2021-02-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes!! Fixes!!! Refactors!!! Edits!!!

BUGS:
1. Big bug, 3.2 appears to have introduced this bug, for disks, rotation and 
partition scheme would never show, oops. 

2. Tiny bug kept one specific smart value from ever showing, typo.

--------------------------------------------------------------------------------
FIXES:

1. Accidentally followed Arch linux derived distro page, which claims KaOS as 
arch derived, when of course it's not, it's its own distro, own toolchain, etc. 
I kind of knew this but had forgotten, then I believed the Arch derived distro 
page, oh well. Resulted in KaOS being listed with arch linux as system base with 
-Sx. Arch should fix this, it's not like it's hard, just remove the distro from 
the page. 

2. Cleared up explanations for drivetemp vs hddtemp use, updated --recommends, 
man, and help to hopefully make this clear. Debian will be dropping hddtemp, 
which is not maintained, sometime in the coming years, sooner than later. Note 
that users unfortunately have to manually enable drivetemp module unless their 
distros enable it by default, but the man/recommands/help explain that.

3. Fixed smart indentation issues, that went along with code change 1, was 
failing to indent one further level for failed/age values like it's supposed to.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added /proc/device to debugger, that will help track block device main 
numbers

2. More disk vendors, more disk vendor IDs!!! As noted, the enternal flow flows 
eternally, thanks linux-lite hardware database users!! and other inxi users, 
whose outputs sometimes reveal a failure or two.

3. Added loaded kernel module tests to --recommends, this was mostly to let 
users know that drivetemp is needed if you want non superuser fast drive temps, 
and that this came along with kernels 5.6 or newer. Hopefully word will start 
drifting out. Note that if inxi is using drivetemp values, drive temps will 
appear as regular user with -Dx, and will be to 1 decimal place. hddtemp temps 
are integers, and requires sudo to display the temps.

4. To handle issue #239 which I'd thought of trying off and on, but never did, 
added option to -Dxxx to show SSD if a positive SSD ID was made to rotation: So 
rotation will show either nothing, if no rotation or ssd data is detected, the 
disk speed in rpm, or SSD if an SSD device. There may be corner cases where this 
is wrong, but I don't have data for that, for example, if a disk is parked and 
has zero rotation but is a HDD, not as SSD. I don't know what the data looksl 
ike in that case. Note that if sudo inxi -Da is used, and smartctl is installed, 
it should be right almost all the time, and with regular -Dxxx, it's going to be 
right almost always, with a few corner cases. That slight uncertainty is why I 
never implemented this before. Legacy drives also sometimes did not report 
rotation speeds even when HDD, so those may create issues, but inxi will only 
call it an SSD if it's an nvme, mmcblk device, both are easy to ID as SSD, or if 
it meets certain conditions. It will not call a drive an SSD if it was unable to 
meet those conditions.

--------------------------------------------------------------------------------
CODE:

1. Refactored the output logic for DiskData, that was messy, split it into a few 
subs, and also refactored the way smartctl data was loaded and used, that's much 
cleaner and easier to use now. Split the previous 1 big sub into: 

totals_output(), drives_output(), and smart_output(). 

Also split out the smart field arrays into a separate sub, which loads 
references to avoid creating new arrays and copying them all over when 
outputting smart data. References are weird to work with directly but they are 
MUCH faster to use, so I'm moving as much of the internal logic to use array 
raferences instead of dereferenced arrays/hashes assigned to a new array, or 
hash.

2. Redid all the output modules and renamed them to be more consistent and 
predictable, and redid the logic here and there to make the get() items be 
fairly similar on all the data builder packages. Now as with the data subs, 
which generally end in _data, now most of the output subs end with _output.

3. Roughly finished the process started in 3.2, got rid of redundant array 
loads, changed: 

@something = something_data();
push (@rows,@something);
to:
push (@rows,something_data());

which avoids creating an extra array, this also let me remove many arrays 
overall.

4. Missed a few hashes in machine data that were being passed directly, not as 
references, to other subs, corrected that. I think I missed those because they 
were %, so the search I did for @ in sub arg lists didn't catch the % hashes.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 08 Feb 2021 16:16:27 -0800

================================================================================
Version: 3.3.00
Patch: 00
Date: 2021-01-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes!! New Feature!! Edits, cleanups!! 

--------------------------------------------------------------------------------
BUGS:

1. Small bug, wrong regex would make mdraid unused report never show. Was 
looking for ^used, not ^unused. No idea how that happened, but it's fixed.

2. Big RAID bug. Due to never having seen an 'inactive' state mdraid dataset, 
inxi had a bunch of bugs around that. I'd assumed active and inactive would have 
roughly the same syntax, but they don't. This is now corrected. Thanks Solus 
user for giving me the required data. This case when not corrected resulted in a 
spray of errors as RAID ran, and a fairly incomplete RAID report for mdraid.

3. A bug that probably never impacted anyone, but in SMART the matching rules 
failed to match field name Size[s]? in the logical/physical block sizes. 
However, those were already coming in from I believe pre-existing /sys data for 
the drives but now it's fixed anyway. I had not realized that smartctl made it 
plural when logical/physical were different, and singular when they were the 
same.

4. Failed to use all possible sd block device major number matches, which led to 
false disk total/used reports, that is, totals less than used.

5. Bug probably introduced in 3.2, zfs single array device did not show raid 
level.

--------------------------------------------------------------------------------
FIXES:

1. Going along with bug 2, fixed some other admin/non admin report glitches. 
Made patterns more aggressively matching, whitelist based to avoid the types of 
syntax issues that caused bug 2.

2. Added 'faulty' type to mdraid matches, that had not been handled.

3. Found even more of those pesky 'card' references in help and man page, 
replaced all of them with 'device[s]'.

4. Subtle fix, for debugger data collectors, added -y1 support, which can be 
useful at times.

5. Optimized PATH searches, now inxi only adds things to PATH if they exist in
the system, not blindly.

6. Added to path test /usr/X11R6/bin to defaults, that is needed, if present, by
OpenBSD and maybe other BSDs for tools like glxinfo. 

7. Corrected missing PCI device data requires root message, that should have 
shown PCI device, not Device, since sometimes there is USB device data also 
next even if no permissions to read PCI device data tool, like in OpenBSD.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. In USB data grabber, added fallback case for unspecified type cases, now uses 
a simple name/driver string test to determine if it's graphics, audio, or 
bluetooth. This was mainly to make sure bluetooth usb devices get caught.

2. New feature! -E/--bluetooth. Gives an -n like bluetooth Device-x/Report. 
Requires for the 'Report:' part hciconfig, which most all distros still have in 
their repos. With -a, shows an additional Info: line that has more obscure 
bluetooth hci data: acl-mtu sco-mtu, link-policy, link-mode, ￼service-classes.

This closes the ancient, venerable issue #79, filed by mikaela so many years 
ago. Better late than never!! However, features like this were really difficult 
in legacy bash/gawk inxi 2.x, and became fairly easy with inxi 3.x, so I guess 
we'll slowly whittle away at these things when the mood, and global pandemic 
lockdowns, make that seem like a good idea...

Includes a small lookup table to match LMP number to Bluetooth version (bt-v:), 
hopefully that's a correct way to determine bluetooth version, there was some 
ambiguity about that.

-x, -xx, and -xxx function pretty much the same way as with -A, -G, and -N 
devices, adding Chip IDs, Bus IDs, version info, and so on. Since this bluetooth 
report does not require root and is an upper case option, it's been added to 
default -F, similar to -R, and -v 5, where raid/bluetooth shows only if data is 
found. With -v7 or -R or -E, always shows, including no data found message.

Includes a fallback report Report-ID: case where for some reason, inxi could not 
match the HCI ID with the device. That's similar to IF-ID in -n, which does the 
same when some of the IFs could not be matched to a specific device.

3. For -A, -G, -N, and -E, new item for -xxx, classID, I realized this is 
actually useful for many cases of trying to figure out what devices are, though 
most users would not know what to do with that information, but that's why it's 
an -xxx option!

4. Yes! You've been paying attention!! More disk vendors, and new vendor IDs!! 
The cornucopia flows its endless bounty over the grateful data collector, and, 
hopefully, inxi users!! Thanks as always, linux-lite hardware database, and 
linux-lite users who really seem set on the impossible project of obtaining all 
the disks/vendors known to man.

--------------------------------------------------------------------------------
CHANGES:

1. Small change in wording for mdraid report: 
'System supported mdraid' becomes 'Supported mdraid levels' which is cleaner and 
much more precise.


--------------------------------------------------------------------------------
-- Harald Hope - Thu, 28 Jan 2021 19:34:17 -0800

================================================================================
Version: 3.2.02
Patch: 00
Date: 2021-01-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page, bug fixes, changes, adjustments and cleanups!!!

Special thanks to mr. mazda for his ongoing suggestions, ideas, and 
observations.

--------------------------------------------------------------------------------
BUGS:

1. In certain corner cases, it appears that lsusb has blank lines, which tripped 
errors in inxi output when the usb parser was trying to access split keys that 
did not exist. Added in check to make sure split actually resulted in expected 
data.

2. A red face bug, I'd left the output debugger switched on with json output, so 
it was printing out the json data structure with Dumper, that's now switched 
off. Hope this doesn't mess anyone up, but it would have mattered only if the 
person was using: 
--output json --output-type print
It did not effect xml output.

--------------------------------------------------------------------------------
FIXES:

1. Got rid of extra level of -L data structure and output handler. Not visible 
to users, but still irksome, so nice to get that fixed. Recursive structures are 
confusing, lol, but this extra level was pointless, but to fix it required 
redoing the logic a bit for both data generator and output feature.

2. Added in support for --display :0.0, previously it did not support the .0 
addition, but why not, if it works for people, good, if not, makes no 
difference.

3. There were some missing cases for LVM missing data messages, so the 
following fixes were added:
 * In cases where lsblk is installed and user is non root, or lvs is not 
 installed, but no lvm data is present, inxi now shows the expected 'Message: 
 No LVM data found.' instead of the permissions or missing program error that 
 showed before. If lsblk is not installed, and lvm is installed (or missing), 
 with lvs not root readable, the permissiosn message (or missing program) will 
 show since at that point, inxi has no way to know if there is lvm data or not.
 
 * Not an inxi, but rather an Arch Linux packaging bug, the maintainer of lvm
 has made lvs and vgs fail to return error number on non root start, which is
 a bug (pvs does return expected error return). Rather than wait for this bug
 to be fixed, inxi will just test if lvs and lsblk lvm data, it will show 
 permissions message, otherwse the no lvm data message as expected.
 
I think these cover the last unhandled LVM cases I came across, so ideally, the 
lvm data messages will be reasonably correct.

4. Some man page lintian fixes.

5. Changed usb data parser to use 'unless' instead of 'if' in tests since it's 
easier to read unless positive tests are true than if negative or negative etc.

--------------------------------------------------------------------------------
ENHANCEMENTS: 

1. Since I see too often things like -F --no-host -z which is redundant, the 
help and man now make it more clear that -z implies --no-host.

2. Even though it's not that pointful, I added in derived Arch Linux system base 
like Ubuntu/Debian have. It's not that meaningful because unlike Ubuntu/Debian, 
where you want to know what version the derived distro is based on, Arch is 
rolling thus no versions, but I figured, why not, it's easy to do, so might as 
well make the system base feature a bit more complete.

Note that the way I did this requires that the distro is ID'ed as its derived 
distro nanme, not Arch Linux, that will vary depending on how they did their 
os-release etc, or distro files, but that's not really an inxi issue, that's up 
to them. From what I've been seeing, it looks like more of the derived distros 
are being ID'ed in inxi as the derived name, so those should all work fine. Note 
that seeing 'base:' requires -Sx.

3. More disk vendors!! More disk vendor IDs!!! I really dug into the stuff, and 
refactored slightly the backend tools I use, so it's now a bit easier to handle 
the data. Thanks linux-lite hardware database, as always, for having users that 
really seemt to use every disk variant known to humanity.

--------------------------------------------------------------------------------
CHANGES:

1. In -G, made FAILED: lower case, and also moved it to be after unloaded: It 
was too easy to think that the loaded driver had failed. Also to make it more 
explicit, made output like this, in other words, driver: is a container for the 
possible children: loaded: unloaded: failed: alternate: which should be easier 
to parse and read without mixing up what belongs to what.

driver: loaded: modesetting unloaded: nouvean,vesa alternate: nv
driver: loaded: amdgpu unloaded: vesa failed: ati 

Note that if there is no unloaded: driver, failed: would still appear to come 
after loaded:, but hopefully it's more clear now.

Basically what we found was that the presence of the uppercase FAILED: drew the 
eye so much that it was sometimes not noted that it was a key: following the 
driver: item, which itself because it did not list explicitly loaded: was not as 
clear as it could have been. By making failed: the same as the other key names 
visually, hopefully it will be less easy to think that the loaded: driver 
failed:

In a sense, this is a legacy issue, because the original use of FAILED: was for 
non free video drivers, to see when xorg had failed to load them, but over more 
recent years, the most frequent thing I have been seeing is odd things like 
failed: ati, when xorg tries to load the legacy ati driver when amdgpu is being 
used.

2. Likewise, for RAID mdraid and zfs changed FAILED: to Failed:, again, to make 
it more consistent with the other types.

3. In help menu and man page, removed legacy 'card(s)' in -A, -G, -N, and 
replaced that with 'device(s)', which is the more accurate term, since the days 
when these things were only addon cards are long behind us. I had not noticed 
that, but it caught me eye and I realized it was a very deprecated and obsolete 
syntax, which did not match the way inxi describes devices today.

4. It was pointed out how incoherent the naming of the item for setting wrap 
width, --indent-min and config item INDENT_MIN were super confusing, since it 
was neither indent or minimum, it was in fact wrap maximum, so the new options 
and config items are --wrap-max and WRAP_MAX. Note that the legacy values will 
keep working, but it was almost impossible in words to explain this option 
because the option text was almost the exact opposite of what the option 
actually does. Redid the man and help explanations to make the function of this 
option/config item more clear.

5. Made -J/--usb Hub-xx: to fit with other repeating device types in inxi 
output, before Hub: was not numbered, but it struck me, it should be, like all 
the other auto-incremented counter line starters, like ID-xx:, Device-x:, and so 
on.

6. Reorganized the main help menu to hopefully be more logical, now it shows the 
primary output triggers, then after, the extra data items, -a, -x, -xx, -xxx, 
separated by white space per type to make it easier to read. This also moved the 
stuff that had been under the -x items back to where they should be, together 
with the main output control options. For readability and usability, I think 
this will help, the help menu is really long, so the more visual cues it has to 
make it clear what each section is, the better I think. Previously -a was the 
first items, then way further down was -x, -xx, and -xxx, then under those was 
-z, -Z, -y.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 10 Jan 2021 18:25:48 -0800

================================================================================
Version: 3.2.01
Patch: 00
Date: 2020-12-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug Fixes!!! Continuing internal refactor!!

This bug report came in right after 3.2.00 went out live, but I would never have 
found it myself in testing so better found than not found!

--------------------------------------------------------------------------------
BUGS: 

1. A bug was introduced to dmidecode data handlers in 3.2.00 resulted in the 
dmidecode data array basically eating itself up until errors appear. Quite 
difficult to trigger, but babydr from Slackware forums figured it out, using -F 
--dmidecode to force dmidecode use for all features that support it triggered 
thee bug always. This was a result of the refactor, previously inxi had worked 
on copies of referenced arrays, but in this case, it was working on the original 
array of arrays, subtle, but obvious. This method was only used on dmidecode 
arrays.

2. A second bug was exposed almost by accident, for -M --dmidecode data, there 
was a missing field and also a missing is set test on that field that led to an 
error of using undefined value in string comparison. This was strictly speaking 
2 bugs, both very old, from 2.9 first rewrite, one failing to set/get the value, 
and the other failing to test if the value was set before using it. 

--------------------------------------------------------------------------------
FIXES:

1. There were a few glitches in help menu and man page related to -L option, 
those are corrected.

--------------------------------------------------------------------------------
CODE:

1. removed bug inducing splice use in some cases, and added parens to splice to 
make it fit the new way of with perl builtins, when taking 2 or more arguments, 
use parens.

2. Found many more instances to add -> dereferencing operator. I have to say, 
not doing that consistently made the code much harder to read, and created 
situations where it's somewhat ambiguous what item belongs to what, with 
everything consistently -> operator run, the code is more clear and obvious, and 
some of the hacks I'd added because of the lack of clarity were also removed.

3. Removed explicit setting of hash references with null value, that was done 
out of failure to use -> operators which clearly indicate to Perl and coder what 
is happening, so those crutches were removed. Also got rid of unnecessary array 
priming like: my @array = (); Some of these habits came from other languages, 
but in Perl, declaring my @array means it's an array that is null, and you don't 
need to do a further (). @array = () is obviously fine for resetting arrays in 
loops or whatever, but not in the initial declaration.


--------------------------------------------------------------------------------
-- Harald Hope - Thu, 17 Dec 2020 14:27:13 -0800

================================================================================
Version: 3.2.00
Patch: 00
Date: 2020-12-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Huge upgrade, major rewrite/refactor, new features, everything is polished!!!

Note that due to large number of internal changes to code, a separate INTERNAL 
CODE CHANGES section is at the bottom. Those are changes which in general do not 
impact what users see that much, but which definitely impact working on and with 
inxi! They also make errors less likely, and removed many possible bad data 
error situations.

--------------------------------------------------------------------------------
BUGS:

1. Obscure, but very old Tyan Mobo used a form of dmidecode data for RAM that 
I'd never gotten a dataset for before, this tripped a series of errors in inxi, 
which were actually caused by small errors and failures to check certain things, 
as well as simply never assigning data in corner cases. This system used only 
dmi handles 5 and 6, which is a very rare setup, from the very early days of dmi 
data being settled, but it was valid data, and actually inxi was supposed to 
support it, because I'd never gotten a dataset containing such legacy hardware 
data, the support didn't work. There were actually several bugs discovered while 
tracking this down, all were corrected.

2. Going along with the cpu fixes below, there was a bug that if stepping was 0, 
stepping would not show. I had not realized stepping could be 0, so did a 
true/false test instead of a defined test, which makes 0 in perl always test as 
false. This is corrected.

3. While going through code, discovered that missing second argument to 
main::grabber would have made glabel tool (BSD I think mostly) always fail, 
without exception. That explains why BSD systems were never getting glabel data, 
heh.

4. Many null get_size tests would not have worked because they were testing for 
null array but ('','') was actually being returned, which is not a null array. 
The testing and results for get_size were quite random, now they are all the 
same and consistent, and confirmed correct.

5. In unmounted devices, the match sent to @lsblk to get extended device data 
would never work with dm-xx type names, failed to translate them to their mapped 
name, which is what is used in lsblk matches, this is corrected. This could lead 
to failures to match fs of members of luks, raid, etc, particularly noticeable 
with complex logical device structures. This means the fallback filters against 
internal logic volume names, various file system type matches, would always 
fail.

6. A small host of further bugs found and fixed during the major refactor, but 
not all of them were noted, they were just fixed, sorry, those will be lost to 
history unless you compare with diffs the two versions, but that's thousands of 
lines, but there were more bugs fixed than listed above, just can't remember 
them all.

--------------------------------------------------------------------------------
FIXES:

1. There was some ambiguity about when inxi falls back to showing hardware 
graphics driver instead of xorg gfx driver when it can't find an xorg driver. 
That can happen for instance because of wayland, or because of obscure xorg 
drivers not yet supported. Now the message is very clear, it says the gfx 
software driver is n/a, and that it's showing the hardware gfx driver.

2. Big redo of cpu microarch, finally handled cases where same stepping/model ID 
has two micorarches listed, now that is shown clearly to users, like AMD Zen 
family 17, model 18, which can be either Zen or Zen+, so now it shows that 
ambiguity, and a comment: note: check, like it shows for ram report when it's 
not sure. Shows for instance: arch: Zen/Zen+ note: check in such cases, in other 
words, it tells users that the naming convention basically changed during the 
same hardware/die cycle.

3. There were some raid component errors in the unmounted tests which is 
supposed to test the raid components and remove them from the mounted list. Note 
that inxi now also tests better if something is a raid component, or an lvm 
component, or various other things, so unmounted will be right more often now, 
though it's still not perfect since there are still more unhandled logical 
storage components that will show as unmounted when tney are parts of logical 
volumes. Bit by bit!!

4. Part of a significant android fine tuning and fix series, for -P, android 
uses different default names for partitions, so none showed, now a subset of 
standard android partitions, like /System, /firmware, etc, shows. Android will 
never work well though because google keeps locking down key file read/search 
permissions in /sys and /proc.

5. More ARM device detections, that got tuned quite a bit and cleaned up, for 
instance, it was doing case sensitive checks, but found cases where the value is 
all upper case, so it was missing it. Now it does case insensitive device type 
searches.

6. One of the oldest glitches in inxi was the failure to take the size of the 
raid arrays versus the size totals of the raid array components led to Local 
Storage results that were uselessly wrong, being based on what is now called 
'raw' disk totals, that's the raw physical total of all system disks. Now if 
raid is detected the old total: used:... is expanded to: total: raw:... 
usable:....used:, the usable being the actual disk space that can be used to 
store data. Also in the case of LVM systems, a further item is added, lvm-free: 
to report the unused but available volume group space, that is, space not 
currently taken by logical volumes. This can provide a useful overview of your 
system storage, and is much improved over the previous version, which was 
technically unable to solve that issue because the internal structures did not 
support it, now they do. LVM data requires sudo/ root unfortunately, so you will 
see different disk raw totals depending on if it's root or not if there is LVM 
RAID running.

Sample: inxi -D
Drives:    Local Storage: total: raw: 340.19 GiB usable: 276.38 GiB 
           lvm-free: 84.61 GiB used: 8.49 GiB (3.1%)

lvm-free is non assigned volume group size, that is, size not assigned to a 
logical volume in the volume group, but available in the volume group. raw: is 
the total of all detected block devices, usable is how much of that can be used 
in file systems, that is, raid is > 1 devices, but those devices are not 
available for storage, only the total of the raid volume is. Note that if you 
are not using LVM, you will never see lvm-free:.

7. An anonymous user sent a dataset that contained a reasonable alternate 
syntax for sensors output, that made inxi fail to get the sensors data. That was 
prepending 'T' to temp items, and 'F' to fan items, which made enough sense 
though I'd never seen it before, so inxi now supports that alternate sensors 
temp/fan syntax, so that should expand the systems it supports by default out of 
the box.

8. Finally was able to resolve a long standing issue of loading File::Find, 
which is only used in --debug 20-22 debugger, from top of inxi to require load 
in the debugger. I'd tried to fix this before, but failed, the problem is that 
redhat /fedora have broken apart Perl core modules, and made some of them into 
external modules, which made inxi fail to start due to missing use of required 
module that was not really required. Thanks to mrmazda for pointing this out to 
me, I'd tried to get this working before but failed, but this time I figured out 
how to recode some of the uses of File::Find so it would work when loaded 
without the package debugger, hard to figure it, turned out a specific sub 
routine call in that specific case required the parentheses that had been left 
off, very subtle.

9. Subtle issue, unlike most of the other device data processors, the USB data 
parser did not use the remove duplicates tool, which led in some cases to 
duplicated company names in the output for USB, which looks silly.

10. Somehow devtmpfs was not being detected in all cases to remove that from 
partitions report, that was added to the file systen filters to make sure it 
gets caught.

11. Removed LVM image/meta/data data slices from unmounted report, those are LVM 
items, but they are internal LVM volumes, not available or usable. I believe 
there are other data/meta type variants for different LVM features but I have 
added as many types as I could find.. Also explictly now remove any _member type 
item, which is always part of some other logical structure, like RAID or LVM, 
those were not explicitly handled before.

12. Corrected the various terms ZFS can use for spare drives, and due to how 
those describe slightly different situations than simply spare, changed the 
spare section header to Available, which is more accureate for ZFS.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Going along with FIX 2 is updating and adding to intel, elbrus microarch 
family/ model/stepping IDs (E8C2), so that is fairly up to date now.

2. Added in a very crude and highly unreliable default fallback for intel: 
/sys/devices/cpu/caps/pmu_name which will show the basic internal name used 
which can be quite different from what the actual microarch name is, but the 
hope is that for new intel cpus that come out after these last inxi updates, 
something may show, instead of nothing. Note these names are often much more 
generic, like using skylake for many different microarches.

3. More android enhancements, for androids that allow reading of 
/system/build.prop, which is a very useful informative system info file, more 
android data will show, like the device name and variant, and a few other 
specialized items. You can see if your android device lets inxi read build.prop 
if you see under -S Distro: Android 7.1 (2016-07-23) or just Android. If it 
shows just android, that means it can't read that file. Showing Android however 
is also new, since while inxi can't always read build.prop, if that file is 
there, it's android, so inxi finally can recognize it's in android, even though 
it can't give much info if it's locked down. Inxi in fact did not previously 
know it was running in android, which is quite different from ARM systems in 
some ways, but now it does.

If the data is available, it will be used in Distro: and in Machine: data to add 
more information about the android version and device.

4. A big one, for -p/-P/-o/-j now shows with -x the mapped device name, not just 
the /dev/dm-xx ID, which makes connecting the various new bits easier, for RAID, 
Logical reports. Note that /dev/mapper/ is removed from the mapped name since 
that's redundant and verbose and makes the output harder to read. For mapped 
devices, the new --logical / -L report lets you drill into the devices to find 
out what dm-xx is actually based on.

5. More big ones, for -a -p/-P/-o/-j/-R/-L shows kernel device major:minor 
number, which again lets you trace each device around the system and report.

6. Added mdadm if root for mdraid report, that let me add a few other details 
for mdraid not previously available. This added item 'state;' to the mdraid 
report with right -x options.

7. Added vpu component type to ARM gfx device type detection, don't know how 
video processing vpu had escaped my notice.

8. Added fio[a-z] block device, I'd never heard of that before, but saw use of 
it in dataset, so learned it's real, but was never handled as a valid block 
device type before, like sda, hda, vda, nvme, mmcblk, etc. fio works the same, 
it's fio + [a-z] + [0-9]+ partition number.

9. Expanded to alternate syntax Elbrus cpu L1, L2, L3 reporting. Note that in 
their nomenclature, L0 and L1 are actually both L1, so add those together when 
detected.

10. RAM, thanks to a Mint user, antikythera, learned, and handled something new, 
module 'speed:' vs module 'configured clock speed:'. To quote from supermicro:

<<<
Question: Under dmidecode, my 'Configured Clock Speed' is lower than my 'Speed'. 
What does each term mean and why are they not the same?

Answer: Under dmidecode, Speed is the expected speed of the memory (what is 
advertised on the memory spec sheet) and Configured Clock Speed is what the 
actual speed is now. The cause could be many things but the main possibilities 
are mismatching memory and using a CPU that doesn't support your expected memory 
clock speed. Please use only one type of memory and make sure that your CPU 
supports your memory.
>>>

11. Since RAM was gettng a look, also changed cases where ddr ram speed is 
reported in MHz, now it will show the speeds as: [speed * 2] MT/S ([speed] MHz). 
This will let users make apples to apples speed comparisons between different 
systems. Since MT/S is largely standard now, there's no need to translate that 
to MHz.

12. And, even more!! When RAM speeds are logically absurd, adds in note: check 
This is from a real user's data by the way, as you can see, it triggers all the 
new RAM per Device report features.

Sample:
Memory:
  RAM: total: 31.38 GiB used: 20.65 GiB (65.8%) 
  Array-1: capacity: N/A slots: 4 note: check EC: N/A 
  Device-1: DIMM_A1 size: 8 GiB speed: 1600 MT/s (800 MHz) 
  Device-2: DIMM_A2 size: 8 GiB speed: spec: 1600 MT/s (800 MHz) 
  actual: 61910 MT/s (30955 MHz) note: check 
  Device-3: DIMM_B1 size: 8 GiB speed: 1600 MT/s (800 MHz) 
  Device-4: DIMM_B2 size: 8 GiB speed: spec: 1600 MT/s (800 MHz) 
  actual: 2 MT/s (1 MHz) note: check

13. More disks vendor!!! More disk vendor IDs!!! Yes, that's right, eternity 
exists, here, now, and manifests every day!! Thanks to linux-lite hardware 
database for this eternally generating list. Never underestimate the creativity 
of mankind to make more disk drive companies, and to release new model IDs for 
existing companies. Yes, I feel that this is a metaphore for something much 
larger, but what that is, I'm not entirely clear about.

--------------------------------------------------------------------------------
CHANGES:

1. Recent kernel changes have added a lot more sensor data in /sys, although 
this varies system to system, but now, if your system supports it, you can get 
at least partial hdd temp reports without needing hddtemp or root. Early results 
suggest that nvme may have better support than spinning disks, but it really 
varies. inxi will now look for the /sys based temp first, then fall back to the 
much slower and root / sudo only hddtemp. You can force hddtemp always with 
--hddtemp option, which has a corresponding configuration item.

2. The long requested and awaited yet arcane and obscure feature -L/--logical, 
which tries to give a reasonably good report on LVM, LUKS, VeraCrypt, as well as 
handling LVM raid, both regular and thin, is now working. This took a lot of 
testing, and is a very solid and good start in my view, going from nothing to 
something is always a big improvement!! LVM reports require root/sudo. This 
will, finally, close issue #135.

3. Going along with -L, and serving as a model for the logic of -L, was the 
complete refactor of -R, RAID, which was a real mess internally, definitely one 
of the messiest and hardest to work with features of inxi before the refactor. 
It's now completely cleaned up and modularized, and is easy to add raid types, 
which was not possible before, now it cleanly supports zfs, mdraid, and lvm 
raid, with in depth reports and added items like mdraid size, raid component 
device sizes and maj:min numbers if the -a option is used. Note that LVM RAID 
requires root/sudo.

4. Added some more sensors dimm, volts items, slight expansion. Note that the 
possible expansion of sensors made possible by the recently upgraded sensors 
output logic, as well as the new inxi internal sensors data structure, which is 
far more granular than the previous version, and allows for much more fine 
grained control and output, though only gpu data currently takes advantage of 
this new power under the covers, although as noted, the /sys based hdd temps use 
the same source, only straight from /sys, since it was actually easier using the 
data directly from sys than trying to map the drive locations to specific drives 
in sensors output. Well, to be accurate, since now only board type sensors are 
used for the temp/fan speed, voltage, etc, reports, the removal of entire sensor 
groups means less chance of wrong results.

5. To bring the ancient RAID logic to fit the rest of inxi style, made zfs, 
mdraid, and lvm raid components use incrementing numbers, like cpu cores does. 
This got rid of the kind of ugly hacks used previously which were not the same 
for zfs or mdraid, but now they are all the same, except that the numbers for 
mdraid are the actual device numbers that mdraid supplies, and the LVM and ZFS 
numbers are just autoincremented, starting at 1.

6. Changed message <root/superuser required> to <superuser required> because 
it's shorter and communicates the same thing.

--------------------------------------------------------------------------------
CODE:

1. Small, transparent test, tested on Perl 5.032 for Perl 7 compatibility. All 
tests passed, no legacy code issues in inxi as of now.

2. Although most users won't notice, a big chunk of inxi was refactored 
internally, which is why the new -L, the revamped -R, and the fixed disk totals 
finally all can work now. This may hopefully result in more consistent output 
and fewer oddities and randomnesses, since more of the methods all use the same 
tools now under the covers. Ths refactor also significantly improved inxi's 
execution speed, by about 4-5%, but most of those gains are not visible due to 
the added new features, but the end result is new inxi runs roughly the same 
speed as pre 3.2.00 inxi, but does more, and does it better, internally at 
least. If you have a very good eye you may also note a few places where this 
manifests externally as well. Last I checked about 10-12% of the lines of inxi 
had been changed, but I think that number is higher now. Everything that could 
be optimized was, everything could be made more efficient was.

3. Several core tools in inxi were expanded to work much more cleanly, like 
reader(), which now supports returning just the index value you want, that 
always happened on the caller end before, which led to extra code. get_size 
likewise was expanded to do a string return, which let me remove a lot of 
internal redundant code in creating the size unit output, like 32 MiB. uniq() 
was also redone to work exclusively by reference.

4. Many bad reference and dereference practices that had slipped into inxi from 
the start are mostly corrected now, array assignments use push now, rather than 
assign to array, then add array to another array, and assign those to the master 
array. Several unnecessary and cpu/ram intensive copying steps, that is, were 
removed in many locations internally in inxi. Also now inxi uses more direct 
anonymous array and hash refernce assignments, which again removes redundant 
array/hash creation, copy, and assignment.

5. Also added explicit -> dereferencing arrows to make the code more clear and 
readable, and to make it easier for perl to know what is happening. The lack of 
consistency actually created confusion, I was not aware of what certain code was 
doing, and didn't realize it was doing the same thing as other code because of 
using different methods and syntaxes for referencing array/hash components. I 
probably missed some, but I got many of them, most probably.

6. Instituted a new perl builtin sub routine rule which is: if the sub takes 2 
or more arguments, always put in parentheses, it makes the code much easier to 
follow because you see the closing ), like: push(@rows,@row); Most perl builtins 
that take only one arg do not use parentheses, except length, which just looks 
weird when used in math tests, that is: length($var) > 13 looks better than 
length $var > 13. This resolved inconsistent uses that had grown over time, so 
now all the main builtins follow these rules consistently internally.

Due to certain style elements, and the time required to carefully go through all 
these rules, grep and map do not yet consistently use these rules, that's 
because the tendency has been to use the grep {..test..} @array and map 
{...actions...} @array

7. Mainly to deal with android failures to read standard system files due to 
google locking it down, moved most file queries to use -r, is readable, rather 
than -e, exists, or -f, is file, unless it only needs to know if it exists, of 
course. This fixed many null data errors in android even on locked androids.

8. Added in %mapper and %dmmapper hashes to allow for easy mapping and unmapping 
of mapped block devices. Got rid of other ways of doing that, and made it 
consistent throughout inxi. These are globals that load once.

9. Learned that perl builtin split() has a very strange and in my view 
originally terrible decision that involves treating as regex rules string 
characters in split string, like split('^^',$string), which should logically be 
a string value, not a ^ start search followed by a ^, but that's how it is, so 
that was carefully checked and made consistent as well. Also expanded split to 
take advantage of the number of splits to do, which I had only used occasionally 
before, but only updated field/value splits where I have a good idea of what the 
data is. This is very useful when the data is in the form of field: value, but 
value can contain : as well. You have to be very careful however, since some 
data we do want in fact the 2nd split, but not the subsequent ones, so I only 
updated the ones I was very sure about.

10. Going along with the cpu microarch fixes, updated and cleaned up all the 
lists of model/stepping matches, now they are all in order and much easier to 
scan and find, that had gotten sloppy over the years.

11. More ARM, moved dummy and codec device values into their own storage arrays, 
that let me remove the filters against those in the other detections. Makes 
logic easier to read and maintain as well.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 15 Dec 2020 15:08:05 -0800

================================================================================
Version: 3.1.09
Patch: 00
Date: 2020-11-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes, new features!! Update now!! Or don't, it's up to you.

--------------------------------------------------------------------------------
BUGS:

1. Let's call some of the android fixes and debugger failures bugs, why not? 
Those are fixed. Note that many of these fixes will impact any system that is 
ARM based, not just android.

--------------------------------------------------------------------------------
FIXES:

1. Related to issue #226 which was a fine issue, fine tuned the debugger 
debuggers to allow for smoother handling of /sys parse failures. Also added 
debugger filters for common items that would make the /sys parser hang, oddly, 
most seem to be in /sys/power for android devices.

2. Added some fine-tunings for possible mmcblk storage paths, in some cases, an 
extra /block is added, which made inxi think mounted drives were unmounted. I've 
never seen this extra /block except on mmcblk devices on android, but you never 
know, it could be more widespread.

3. Also mainly related to android, but maybe other ARM devices, in some cases, 
an errant 'timer' device was appearing as a cpu variant, which is wrong. That 
was a corner case for sure, and part of the variant logic in fact uses timer 
values to assign the actual cpu variants, but it was wrong in this case because 
it was ....-timer-mem, not ...-timer, which led to non-existent CPU variants 
showing.

4. Issue #236 by ChrisCheney pointed out that inxi had never updated its default 
/proc/meminfo value to use the newer MemAvailable as default if present, which 
led to incorrect memory used values showing up. That's because back in the old 
days, we had to construct a synthetic Memory used from MemFree, buffers, cache, 
etc, but that wasn't always right, since sometimes the cache actually isn't 
available, often is, but not always.

https://github.com/torvalds/linux/commit/34e431b0ae398fc54ea69ff85ec700722c9da773

This commit on the kernel explains it pretty clearly. Thanks Chris for bringing 
this to our attention.

5. Kind of more future-proofing, got rid of a bunch of hard-coded strings 
internally and switched those to use the row_defaults values, which is where 
string messages are supposed to go. That was mostly in the initial program check 
messages on start-up, but also a few other stray ones. Also consolidated them a 
bit to get rid of redundant messages, and added more variable based messages, 
like for missing/permissions on programs etc. The idea in general is that all 
the strings are contained in subs so that in theory they could be swapped for 
other strings, eg, languages, but honestly, I no longer see this as very likely 
to ever happen. But it's still nice to be consistent internally and not get 
sloppy with english strings.

This also got rid of some largely redundant items in row_defaults, and expanded 
the list of handled events, and of variable based events, so it shouldn't be as 
necessary to add new row_defaults items for similar events.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Debugger item to maybe try to find distro OEM, this was connected with issue 
#231 but the issue poster vanished, and didn't do the work required, so this one 
won't happen until someone who cares [not me, that is] does the required work. 
It's always funny to see how quickly people vanish when they have to do the 
actual boring research that they want me to do for them, lol. Or maybe, sigh is 
more appropriate than lol. But it is pretty much par for the course, sad to say. 
Or maybe this was an OEM hoping to have someone do their corporate work for them 
for free, who knows. Anyway, there's a certain category of items that I'm 
reasonably happy to implement, but NOT if I have to do all the boring research 
work, so such features being added will depend on the poster actually doing the 
boring work.

I've gotten burned on this a few times, cpu arch: for example, some guy said 
he'd track that and provide updates, he never even made it to the first release, 
so I got stuck doing that one forever after. But that one at least has some 
general value, so that's ok more or less, but I definitely won't take on stuff 
that I really don't personally care at all about unless the person requesting 
the feature does all the work beforehand. The boring part, that is....

2. Related to issue #226, much improved android ID and many small android fixes 
for machine data etc. Now uses /system/build.prop for some data, which is a nice 
source, sadly, most modern android devices seem to be locked down, with both 
build.prop and /sys locked down, which makes inxi unable to actually get any of 
that data, but if your device either does not have these root only readable, or 
if you have an android rooted phone, the android support will be more 
informative. 

Hint: if you run inxi in termux on your non rooted android device, and it shows 
you what android version you are using in System:... Distro: line, then your 
android is not locked down. I have one such phone, android 7.1, but I cannot say 
how usual or non usual this is. The poster of issue #226 for instance had to 
root his android 7 phone to get this data to display. So it seems to vary quite 
a bit.

Note that due to these file system lockdowns, in general, trying to do android 
arm support remains largely a waste of time, but on some devices sometimes, you 
can now get quite nice system info. As I noted in the issue, if I can't get the 
features to work on a non rooted phone in my possession, I'm probably not going 
to try to do the work because it's too hard to try to work on android issues 
without having the device in front of you for testing and debugging. In this 
case, one of my phones did work, so I did the work just to see where android is 
at now.

Android showed some slightly odd syntaxes for some devices, but those are now 
handled where I got a dataset for them that revealed the changes required.

3. Also related to issue #226 for termux in android, will show -r info. That's 
an apt based package manager, but termux puts the apt files somewhere else so 
needed to change paths if those alternate paths existed for apt.

4. Added PARTFLAGS to debugger to see what knd of data that will yield, that's a 
lsblk key/value pair. 

5. Just because it's easy to do, added new -Ixxx item, wakeups: which is a 
subset of Uptime, this will show how many times the system has been woken from 
suspend since the last boot. If the system has never been suspended, shows 0.

6. Many more disk vendors and disk IDs. The list just never ends, possibly a 
metaphor for something, the endless spinning of maya, who knows?

7. Added newest known ubuntu release, hirsute, to buntu ID logic. Might as well 
catch them early, that will be 21.04.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 11 Nov 2020 14:57:38 -0800

================================================================================
Version: 3.1.08
Patch: 00
Date: 2020-10-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes, updates!!! Yes!! Why wait!!! Can't stay frozen forever!

--------------------------------------------------------------------------------
BUGS:

1. Not an inxi bug, but a weird change in defaults for ubuntu GNOME ENV variable 
values when running at least the gnome desktop, result to end users appears to 
be a bug. This resolves issue #228

Note that so much weird non desktop data was put into those environmental 
variables that inxi simply could make no sense of it. The fix was to make the 
detections more robust, using regex instead of string compare, as well as to at 
least try to strip out such corrupted data values, though that can never be 
fully predictable. 

As far as I know, this issue only hits ubuntu gnome desktops, I've never seen 
these value corruptions on any other distro, or on any other ubuntu desktop, 
though they may be there, but I'm not going to test all the ubuntu spins to find 
out.

I'm hoping the combination of logic fixes and junk data cleaning will handle 
most future instances of these types of corruptions automatically. 

Again, this only happens on relatively laste ubuntu gnomes as far as I know.

--------------------------------------------------------------------------------
FIXES:

1. An oversight, added sshd to list of whitelisted start clients. This permits 
expected output for: ssh <name@server> inxi -bay that is, running inxi as an ssh 
command string. Should have done that a while ago, but better late than never.

This corrects issue #227, or at least, has a better default, it worked fine 
before, but required using --tty to reset to default terminal behavior. The 
problem is that if inxi can't determine what it's running in, it defaults to 
thinking it's in an IRC client, and switches to IRC color codes, among other 
changes. But it was nice to get sshd covered automatically so users don't have 
to know the --tty option.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. More disk vendors and vendor IDs!!! Yes, that's right, the list never ends!!

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 16 Oct 2020 13:43:40 -0700

================================================================================
Version: 3.1.07
Patch: 00
Date: 2020-09-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes, feature updates, changes!!

--------------------------------------------------------------------------------
BUGS:

1. There was a glitch in the pattern that made -D samsung / seagate not ID 
right, fixed.

2. I do not like calling this a bug, because it's not an inxi bug, it's an 
upstream regression in the syntax used in /proc/version, they changed a fully 
predictable gcc version .... to a random series of embedded/nested parentheses 
and other random junk. inxi tries to deal with this regression, which will be 
perceived as a bug in systems running kernel 5.8 or newer and inxi 3.1.06 or 
older, since it will fail to show the kernel build compiler version since it 
can't find it in the string.

I really dislike these types of regressions caused by bad ideas done badly and 
without any thought to the transmitted knowledge base, but that's how it goes, 
no discipline, I miss the graybeards, who cared about things like this.

--------------------------------------------------------------------------------
FIXES:

1. more -D nvme id changes, intel in this case.

2. FreeBSD lsusb changed syntax, which triggered a series of errors when run. 
[hint BSD users, do NOT file issues that you want fixed and then not provide all 
the data required in a prompt and timely manner, otherwise, really, why did you 
file the issue?].

Note: the fix basically just rejects any row from lsusb that does not have the 
expected syntax/value in the expected place, which was I think the right 
solution given that the change was random, broke expected syntax for lsusb, and 
wasn't really integrateable into existing inxi usb logic, so why fight it? Given 
that at least 99.99% of all lsusb output in the world, including by the way 
OpenBSD's [not sure about most recent version], shows the expected values in the 
expected place, I could see no value in creating a convoluted work-around for a 
non core BSD tool in the first place, so that's what I didn't do.

See the README.txt for what to do to get issues really handed in BSDs.

--------------------------------------------------------------------------------
ENHANCMENTS:

1. Added --dbg 19 switch to enable smart data debugging for -Da.

--------------------------------------------------------------------------------
CHANGES:
1. -C 'boost' option changed from -xxx feature to -x feature. Consider it a 
promotion!

--------------------------------------------------------------------------------
CODE:

1. Some new tools to handle impossible data values for some -D situations for 
SMART where the smart report contains gibberish values, that was issue #225 -- 
tools were convert_hex and is_Hex. The utility for these is limited, but might 
be of use in some cases, like handling the above gibberish data value.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 29 Sep 2020 16:08:05 -0700

================================================================================
Version: 3.1.06
Patch: 00
Date: 2020-08-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New features, new changes, new bug fixes!!! Excitement!!! Thrills!!!

--------------------------------------------------------------------------------
BUGS: 

1. Forgot to set get Shell logic in inxi short form, oops, so Shell remained 
blank, only inxi short, which I rarely use so I didn't notice.

2. Failed to test pacman-g2 for packages, had wrong query argument, so it 
failed. Also failed to test for null data, so showed errors for packages as 
well. Both fixed.

3. A big bug, subtle, and also at the same time, an enhancement, it turns out 
NVME drives do NOT follow the age old /proc/partitions logic where if the minor 
number is divisible by 16 or has remainder 8 when divided by 16, it's a primary 
drive, not a partition. nvme drives use a random numbering when > 1 nvme drives 
are present, and the old tests would fail for all nvme drivers more than the 
first one, which led to wrong disk size totals. Thanks gardotd426 who took the 
time to help figure this out in issue #223 - fix is to not do that test for nvme 
drives, or rather, to add a last fail test for nvme primary nvme[0-9]n[0-9] 
drive detections, not the minor number.

--------------------------------------------------------------------------------
FIXES:

1. Corrected indentation for block sizes, children were not indented.

2. Updated some older inxi-perl/docs pages, why not, once in a while?

3. Kernel 5.8 introduces a changed syntax to gcc string location, this has been 
corrected, and the kernel gcc version now shows correctly for the previous 
syntax and the new one. Hopefully they do not change it again, sigh...

4. Removed string 'hwmon' sensors from gpu, those are not gpu sensors, and are 
also usually not board/cpu sensors, but things like ath10, iwl, etc, network, or 
disk sensors, etc. In some cases hwmon sensor data would appear

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Big sensors refactor, now inxi supports two new sensors options: 
--sensors-exclude - which allows you to exclude any primary sensor type[s]. Note 
that in the refactored logic, and in the old logic, gpu sensors were already 
excluded. Now other hardware specific sensors like network are excluded as well.

--sensors-use - use ONLY list of supplied sensor IDs, which have to match the
syntax you see in lm-sensors sensors output.

Both accept comma separated list of sensors, 1 or more, no spaces.

The refactor however is more far reaching, now inxi stores and structures data 
not as a long line of sensors and data without differentiation, but by sensor 
array/chip ID, which is how the exclude and use features can work, and how 
granular default hardware sensor exclusions and uses can happen. This is now 
working in the gpu sensors, and will in the future be extended to the newer 
5.7/5.8 kernel disk temperature sensors values, which will lead in some cases to 
being able to get sensors data for disks without root or hddtemp. This is a 
complicated bit of logic, and I don't have time to do it right now, but the data 
is now there and stored and possible to use in the future.

To see sensors structures, use: inxi -s --dbg 18 and that will show the sensors 
data and its structures, which makes debugger a lot easier for new features.

This issue was originally generated by what was in my view an invalid complaint 
about some inxi sensors defaults, which led me to look more closely at sensors 
logic, which is severely lacking. More work on sensors will happen in the 
future, time, health, and energy permitting. 

2. Added Watts, mem temp, for amdgpu sensors, as -sxxx option. More gpu sensor 
data will be added as new data samples show what will be available for the free 
modules like amdgpu, nouvean, and the intel graphics modules.

3. More disk vendors and IDs, as noted, the list never ends, and it hasn't 
ended, so statement remains true. Thanks linux-lite hardware database.

--------------------------------------------------------------------------------
CHANGES:

1. This has always bugged me since it was introduced, the primary cpu line 
starter Topology: which was only technically accurate for its direct value, not 
its children, and also, in -b, cpu short form was using the value as the key, 
which is a no-no, I'd been meaning to fix that too, but finally realized if I 
just make the primary CPU line key be 'Info:', which is short, yet 
non-ambiguous, it would solve both problems. 

To keep the -b cpu line as short as before, I removed the 'type:' and integraged 
that value into the primary Info: string:

CPU:
  Info: 6-Core AMD Ryzen 5 2600 [MT MCP] speed: 2750 MHz min/max: 1550/3400 MHz 
  
-b 3.1.05 and earlier:
CPU:
  6-Core: AMD Ryzen 5 2600 type: MT MCP speed: 1515 MHz min/max: 1550/3400 MHz
  
These resolve something that has irked me for quite a while, 'Topology:' didn't 
fit, it was too geeky, and worst, it only applied to the value directly 
following it, NOT to the rest of the CPU information. It also could not be 
shortened or abbreviated since then it would have made no actual sense, like 
topo:, and the same issue with value being used for key in -b, and wrong word 
for line starter in -C would have existed. Besides, someone might think I was 
trying to make a subtle reference to the great Jodorowsky film 'El Topo', which 
would be silly, because that's art, and this is just some system specs that are 
reasonably readable...

2. Was using opendns for WAN dig IP address, but apparently cysco bought that 
company, and now I've noticed the old opendns dig queries were failing more and 
more, so replaced that with akamai dig requests. Also made the WAN IP fallback 
to HTTP IP method if dig failed. New option: --no-http-wan and config item 
NO_HTTP_WAN with override --http-wan added to let you switch off http wan IP 
requests if you want. Note that if dig fails, you will get no wan ip address. 
Updated/improved error messages to handle this more complex set of wan ip 
options, so hopefully the error alert message will in most cases be right.

3. To future proof inxi, switched debugger upload location to 
ftp.smxi.org/incoming from the old techpatterns.com/incoming. Updated man/help 
to remove those urls too.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 16 Aug 2020 14:28:58 -0700

================================================================================
Version: 3.1.05
Patch: 00
Date: 2020-07-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fixes!!! New Features!! Why wait!!!

--------------------------------------------------------------------------------
BUGS:

1. Issue #220 on github: inxi misidentified XFCE as Gnome. This was a kind of 
core issue, and pointed to some logic that needed updating, and some inadequate 
assumptions made, and some too loose cascade of tests. Hopefully now xfce will 
almost never get misidentified, and the other primary desktops ID'ed either from 
$ENV or from xrop -root will be slightly more accurately identified as well.

Note that this fix creates a possibility for obscure misconfigured desktops to 
be ID'ed wrong, but in this case, that will be technically a bug for them, but 
with the new fixes, that situation will be cleaner to handle internally in the 
desktop ID logic.

Also tightened the final Gnome fallback detection to not trigger a possible 
false positive, it was testing for ^_GNOME but that is not adequate, because 
some gnome programs will trigger these values in xprop -root even if GNOME is 
not running. Should be safer now, hopefully no new bugs will be triggered by 
these changes.

--------------------------------------------------------------------------------
FIXES:

1. Missed an indentation level for -y1, gcc alt should have been indented in one 
more level, now it is.

2. In disk vendors/family, didn't clean items starting with '/', this is now 
corrected. Yes, some do, don't ask me why. Might be cases like: Crucial/Micron 
maybe, where the first ID is grabbed, not sure.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New Disk vendors, vendor IDs!!! The list never ends!!! We've finally found 
infinity, and it is the unceasing wave of tiny and not so tiny disks and their 
Ids.

2. New feature: for -Aa, -Na/-na/-ia, -Ga, now will add the modules the kernel 
could support if they were available on the Device-x lines of those items. This 
was made an -a option because it really makes no sense, if it's a regular 
option, users might think that for example an nvidia card had a nouveua driver 
when it didn't, when in fact, all the kernel is saying is that it knows those 
listed modules 'couid' be used or present. This corresponds to the Display: item 
in -Ga, that lists 'alternate:' drivers that Xorg knows about that could 
likewise be used, if they were on the system.

In other words these are --admin options because otherwise users might get 
confused, so this is one where you want to know the man explanation before you 
ask for it.

It is useful however if you're not sure what your choices are for kernel 
modules.

When the alternate driver is the same as the active driver, or if none is found, 
it does not show the alternate: item to avoid spamming.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 26 Jul 2020 19:10:21 -0700

================================================================================
Version: 3.1.04
Patch: 00
Date: 2020-06-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man, huge update, bug fixes, cleanups, updates!! 

What started as a relatively minor issue report ended up with a refactor of big 
chunks of some of the oldest code and logic in inxi.

So many bugs and fixes, updates, and enhancements, that I will probably miss 
some when I try to list them.

--------------------------------------------------------------------------------
BUGS:

1. In the process of fixing an issue about sudo use triggering server admin 
emails on failure, when --sudo/--no-sudo and their respective configuration 
items were added, sudo was inadvertently disabled because the test ran before 
the options were processed, which meant the condition to set sudo data was 
always false, so sudo for internal use was never set. The solution was to set a 
flag in the option handler and set sudo after options or configs run.

2. Issue #219 reported gentoo and one other repo type would fail to show enabled 
repos, and would show an error as well, this was due to forgetting to make the 
match test case insensitive. If only all bugs were this easy to fix!!

3. I'd seen this bug before, and couldn't figure out why it existed. It turned 
out that the partition blacklist filters were running fine in the main partition 
data tool, but I had forgotten to add in corresponding lsblk partition data 
filters, lol, so when the logic went back and double checked for missing 
partitions. This feature had been, if i remember right, to be able to show 
hidden partitions, which the standard method didn't see, but lsblk did, anyway, 
when the double check and add missing partitions logic ran, inxi was putting 
back in the blacklisted partitions every time, despite the original blacklists 
working well and as intended. This was fixed by adding in all the required fs 
type blacklists, then adding in comments above each black list reminding coders 
that if they add or remove from one blacklist, they have to do the same on the 
other.

4. Found while testing something unrelated on older vm, the fallback case for 
cpu bugs, which was supposed to show the basic /proc/cpuinfo cpu bugs, was 
failing inexplicably because the data was simply being put into the wrong 
variable name, sigh.

--------------------------------------------------------------------------------
FIXES:

1. While not technically an inxi bug, it would certainly appear that way to 
anyone who triggered it. We'd gotten issue reports before on this, but they were 
never complete, so couldn't figure it out. Basically, if someone puts inxi into 
a simple script that is in $PATH [this was the missing fact needed to actually 
trigger this bug in order to fix it], the script [not inxi], will then enter 
into an endless loop as inxi queries it for its version number using <script 
name> --version. This issue didn't happen if the script calling inxi was not in 
PATH, which is why I'd never been able to figure it out before.

Only simple scripts with no argument handlers could trigger this scenario, and 
only if they were in PATH.

Fixing this required refactoring the entire start get_shell_data logic, which 
ended up with a full refactor of the program_version logic as well. The fix was 
to expand the list of shells known by inxi so it would be able to recognize when 
it was in a shell running a script running inxi.

This resulted in several real improvements, for instance, inxi will now almost 
always be able to determine the actual shell running inxi, even when started by 
something else. It will also never use --version attempts on programs it does 
not know about in a whitelist.

So we lose slightly the abilty to get version data on unknown shells, but we 
gain inxi never being able to trigger such an infinite loop situation.

2. As part of the program_version refactor, a long standing failure to get ksh, 
lksh, loksh, pdksh, and the related posh shells, all of which ID their version 
numbers only if they are running the command in themselves. The mistake had been 
having the default shell run that command. These all now correctly identify 
themselves.

3. As part of the wm upgrades, many small failures to ID version numbers, or 
even wm's, in some cases, were discovered when testing, and corrected. Some I 
had not tested, like qtile, and the lisp variants, were not being detected 
correctly by the tests due to the way python or lisp items are listed in ps aux.

4. As part of the wm update and program_version refactor, updated and simplified 
many desktop and wm detections and logic blocks. Ideally this makes them more 
predictable and easy to work on for the future.

5. As some last tunings for the new -y1 key: value pair per line output option, 
fixed some small glitches in -b indentation. Also improved RAID indenting, and 
Weather, and made it all very clean and predictable in terms of indentations.

6. Something I'd slightly noticed but never done anything about, while testing 
desktop fixes, I realized that for Desktop: item, dm: is a secondary data type, 
but if it's Console:, then DM: is a primary data type, not a secondary one. So 
now if Console: it becomes DM: which makes sense, previously it implied a dm: 
was used to start the console, which was silly. Also, since often the reason 
it's Console: with no dm in the first place is that it's a server with no dm. So 
now if console, and no dm detected, rather than showing DM: N/A it just doesn't 
show dm at all. Note that the -y1 display feature now makes catching and 
correcting such logic and level assignments much easier since you can see the 
error in the indentations directly.

7. As part of the overall core refactor, the print_data logic was also 
refactored and simplified, by making -y1 a first class citizen, it led to 
significantly different way of being able to present inxi data on your screen, 
and now print_data logic is cleaner and reflects these changes more natively, 
all the initial hacks to get this working were removed, and the logic was made 
to be core, not tacked on.

8. A small thing also revealed in issue #219, battery data was not being 
trimmed, not sure how I missed that, but in some cases, space padding was in the 
values and was not removed, which leads to silly looking inxi output.

9. Several massive internal optimizations, which were tested heavily, led to in 
one case, 8-900x faster execution the second time a data structure is used, 
previously in program_values the entire list was loaded each time program_values 
was called, now it's loaded into a variable on first load and the variable is 
used for the tests after that. This was also done for the vendor_version for 
disk vendors, which also features a very long data structure which can be loaded 
> 1 times for instances where a system has > 1 disk. 

I also tested while I was at it, to see if loading these types of data 
structures, arrays of arrays, or hashes of arrays, by reference, or by 
dereferencing their arrays, was faster, and it proved that it's about 20% faster 
to not dereference them, but to use them directly. So I've switched a number of 
the fixed data structures internally do use that method.

Another tiny optimization was hard resetting the print_data iterator hash, while 
this would never matter in the real world, it showed that resetting the iterator 
hash manually was slightly more efficient than resetting it with a for loop.

10. While not seen inside inxi, I updated and improved a number of the vm's 
used to test inxi and various software detections, so now I have a good 
selection, going back to 2008 or so, up to current. This is helpful because 
things like shells and window managers and desktops come and go, so it is hard 
to test old detections on new stuff when you can't install those anymore. You'll 
see these fixes in many of the less well known window managers, and in a few of 
the better known ones, where in some cases the detections were damaged.

11. As part of the program_version refactor, updated and fixed file based 
version detections, those, ideally, will almost never be used. Hopefully 
programmers of things like window managers, shells, and desktops, can learn how 
to handle --version requests, even though I realize that's a lot harder than 
copying someone's code and then rebranding as your own project, or whatever 
excuse people have for not including a --version item in their software.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. As a result of the shell, start shell, shell parent refactors, inxi was able 
to correctly in most cases determine also the user default shell and its 
version, so that was added as an -Ixxx option:

Shell: ksh v: A_2020.0.0 default: Bash v: 5.0.16

2. As part of the program_version refactor, a more robust version number cleaner 
was made, which now allows for much more manipulation of the version number 
string, which sometimes contains, without spaces, non version number ' info 
right before the actual version.

3. Many more wm IDs were created and tested, and some old virtual machines that 
were used years ago were used again to test old window managers and their IDs, 
as well as new vms created to test newer ones. Many version IDs and WM ids were 
fixed in this process as well. All kinds of new ones added, though the list is 
basiclaly endless so ideally inxi would only use its internal data tables for 
window managers that have actual users, or did.

4. First wayland datatype, now it may show Display ID: with -Ga, so far that's 
the only wayland screen/display data I can get reliably.

5. As part of the shell parent/started in: updates and fixes, added every shell 
I could find, and installed and tested as many of them as possible to verify 
that either they have no version method, or that their version method works. 
This shell logic also is used to determine start parent. Obviously using 
whitelists of things that can change over time isn't ideal, but there was no way 
to actually do it otherwise. The best part of the fixes is that it's now 
remarkably difficult to trick inxi into reporting the wrong shell, and it 
generally will also get the default shell right, though I found cases in testing 
where a shell when started replaces the value in $SHELL with itself.

6. I found a much faster and reasonably reliable way to determine toolkits used 
by gtk desktops, like cinnamon, gnome, and a few others. Test is to get version 
from gtk-launcher, which is MUCH faster than doing a package version query on 
the random libgtk toolkit that might be tested, and actually was tested for 
pacman, apt, and rpm in the old days, but that was removed because it was a 
silly hack. It's possible that now and then gtk desktops will be 0.0.1 versions 
off, but in most cases, the version matched, so I decided to restore the tk: 
item for a selection of gtk or gnome based desktops.

So now gtk desktops, except mate, which of course will be using gtk 2 for a 
while longer, toolkit version should be working again, and the new method works 
on everything, unlike the old nasty hack that was used, which required package 
queries and guessing at which gtk lib was actually running the desktop, it was 
such a slow nasty hack that it was dumped a while ago, but this new method works 
reliably in most cases and solves most of the issues.

7. As part of the overall program_versions refactor, the package version tester 
tool was extended to support pacman, dpkg, and rpm, which in practical terms 
covers most gnu/linux users and systems. Since this feature is literally only 
used for ASH and DASH shell version detections, it was really just added as a 
proof of concept, and because it fit in well with the new Package counts feature 
of -I/-r.

8. Updated for version info a few other programs, added compositors as well.

9. Last but not least!! More disk vendor IDs, more disk vendors!! And found 
another source to double check vendor IDs, that's good. 

--------------------------------------------------------------------------------
NEW:

1. For -Ix/-rx, -Ixx/-rxx, -Ia/-ra, now inxi shows package counts for most
package managers plus snap, flatpak, and appimage. I didn't test appimage so
I'm not 100% sure that works, but the others are all tested and work.

If -r, Packages shows in the Repos item as first row, which makes sense, 
packages, repos, fits. Note that in some systems getting full package counts 
takes some time so it's an -x option not default. 
If -rx, -rxx, -ra, package info moved to -r section, and if -Ix, -Ixx, or -Ia,
the following data shows:
 * -Ix or -rx: show total package counts: Packages: 2429
 * -Ixx or -rxx: shows Packages then counts by package manager located. If there
 was only one package manager with packages, the total moves from right after 
 Packages: to the package manager, like: Packages: apt: 3241 but if there were
 for example 2 or more found, it would show the total then:
 Packages 3245 apt:3241 snap: 4
 * -Ia or -ra: adds package managers with 0 packages managed, those are not
 shown with -xx, and also shows how many of those packages per package manager
 is a library type lib file. 
 Sample: 
 inxi -Iay1
Info:
  Processes: 470
  Uptime: 8d 10h 42m
  Memory: 31.38 GiB
    used: 14.43 GiB (46.0%)
  Init: systemd
    v: 245
    runlevel: 5
  Compilers: 
    gcc: 9.3.0
    alt: 5/6/7/8/9
  Packages: 
    apt: 3685
      lib: 2098
    rpm: 0 
  Shell: Elvish
    v: 0.13.1+ds1-1
    default: Bash
      v: 5.0.16
    running in: kate
  pinxi: 3.1.04-1

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 28 Jun 2020 21:07:42 -0700

================================================================================
Version: 3.1.03
Patch: 00
Date: 2020-06-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Big internal refactor!! Fully adjustable indentation logic, built in, native!

NOTE: none of these changes have any impact on normal inxi -y -1, -y, or -y xx 
operation, everything will remain exactly the same, this only changes and makes 
robust -y 1 single key: value pair per line output.

3.1.03 finishes the -y1 introduced in 3.1.02, but makes it a core part of the 
inxi logic for line printing, not a tacked on afterthought.

Because the first draft of this in 3.1.02 was really a hack tacked onto the 
existing logic, which was not very flexible or robust, and required way too much 
literal test logic in the black box print_data() subroutine, which is supposed 
to be a 'dumb' logic, that just does what you give it automatically, I added in 
key changes that hard code the indentations per key, like so:

Now: 34#0#3#key-name
Before: 34#key-name

Note that anyone using the json or XML output option may need to redo their 
code a bit to handle these extra 2 values that preface the actual key names.

--------------------------------------------------------------------------------
FIXES:

1. In order to make this work, changed a few small things internally, a few
key names were slightly altered to make them more clear.

--------------------------------------------------------------------------------
CHANGES:
  
1. For -y 1 -G will show drivers then indented one more level unloaded, FAILED, 
and alternate: to make it clear those are a subset of drivers. driver: itself 
will contain the actual driver. In cases where no driver is loaded, a note will 
show indented after driver:

2. For -y 1, driver v: versions will be indented 1, and driver will be a 
container that contains that version key: value pair.

Samples:
--------------------------------------------------------------------------------
inxi -Razy1
RAID:
  Device-1: g23-home 
    type: zfs 
    status: ONLINE 
    size: 2.69 TiB 
    free: 1.26 TiB 
    allocated: 1.43 TiB 
    Array-1: mirror 
      status: ONLINE 
      size: 1.82 TiB 
      free: 602.00 GiB 
      Components: 
        online: sdb sdc 
    Array-2: mirror 
      status: ONLINE 
      size: 888.00 GiB 
      free: 688.00 GiB 
      Components: 
        online: sdd sde

--------------------------------------------------------------------------------
sudo inxi -dazy1
Drives:
  Local Storage: 
    total: 1.98 TiB 
    used: 1.43 TiB (72.2%) 
  ID-1: /dev/sda 
    vendor: Intel 
    model: SSDSC2BW180A4 
    family: 53x and Pro 1500/2500 Series SSDs 
    size: 167.68 GiB 
    block size: 
    physical: 512 B 
    logical: 512 B 
    sata: 3.0 
    speed: 6.0 Gb/s 
    serial: <filter> 
    rev: DC32 
    temp: 37 C 
    scheme: MBR 
    SMART: yes 
      state: enabled 
      health: PASSED 
      on: 291d 17h 
      cycles: 1346 
      read: 431.94 GiB 
      written: 666.16 GiB 
  Optical-1: /dev/sr0 
    vendor: HL-DT-ST 
    model: DVDRAM GH20LS10 
    rev: FL00 
    dev-links: cdrom,cdrw,dvd,dvdrw 
    Features: 
      speed: 48 
      multisession: yes 
      audio: yes 
      dvd: yes 
      rw: cd-r,cd-rw,dvd-r,dvd-ram 
      state: running
      
--------------------------------------------------------------------------------
inxi -Aazy1
Audio:
  Device-1: NVIDIA High Definition Audio 
    vendor: Gigabyte 
    driver: snd_hda_intel 
      v: kernel 
    bus ID: 09:00.1 
    chip ID: 10de:0be3 
  Device-2: AMD Family 17h HD Audio 
    vendor: Gigabyte 
    driver: snd_hda_intel 
      v: kernel 
    bus ID: 0b:00.3 
    chip ID: 1022:1457 
  Device-3: N/A 
    type: USB 
    driver: hid-generic,snd-usb-audio,usbhid 
    bus ID: 5-1.3.4:5 
    chip ID: 21b4:0083 
    serial: <filter> 
  Sound Server: ALSA 
    v: k5.4.0-11.2-liquorix-amd64
    
--------------------------------------------------------------------------------
CODE:

1. Redo of all internal full key strings, added two new # separated items:
 xx#x#y#key-name:
  * xx remains the main 0 padded 2 digit sorter per row/block.
  * x is a new 0/1 boolean, that shows if the value is a container or not. As 
    currently implemented probably not hugely useful since it won't say when
    the following items it is a container of ends.
    Note that the following y value will always be 1 for the item contained by
    the container, so you can check that way if you want. the next item can
    also be a container, but it would have either the same indentation level
    as the previous container or be different.
    Thus, if a key is a container, it can contain either non containers, or
    other containers, but that primary container does not end until the indent
    value equals or is less than the indent value of the first container.
    If you are a programmer you should be able to figure this out.
  * y is the indentation level, 0-xx is supported, but in practical terms, only 
    4 levels are used. For single line output, these set the indentation for 
    that key.
  * key-name remains the key string ID name.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 12 Jun 2020 19:02:08 -0700

================================================================================
Version: 3.1.02
Patch: 00
Date: 2020-06-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Big change, cleanup, small bug fixes. Hot, grab it now!!

The new -y 1 feature exposed several small and larger glitches with how sets of 
data were constructed in inxi output. See RELEASE NOTES: for list of changes made to 
improve or fix these glitches.

These errors and minor output inconsistencies became very obvious when I was 
doing heavy testing of -y 1, so I decided to just fix all of them at the same 
time, plus it was very hard to make the -y 1 indenter work as expected when the 
key values were not being treated consistently.

Note that this completes the set of all possible -y results:

Full -y Options:
1. -y [no integer given] :: set width to a default of 80. this is what you 
usually want for forum posts, or for online issue reports, because it won't wrap 
and be hard to read. Help us help your users and others!! Teach them to use for 
example -Fxzy or -bay for their bug reports. Just add y to whatever collection 
of arguments you generally ask for in support forums or issue reports. Highly 
recommended, easy to type, and joins cleanly with other letters.

2. -y -1 :: removes line width limits, this can lead to very long lines in some 
cases, and removes all auto-wrapping of line widths.

3. -y 1 :: Switch to stacked key: value pairs, with primary data blocks 
separated by a blank line. Think dmidecode type output, or other command line 
sys info tools. By request, a forum support guy noted it was hard for newbies to 
understand the -G values, particularly -Ga when in lines, so this is another way 
to request data. WARNING: for lots of data, this gets really long!!! But if you 
are curious how inxi actually constructs its data internally, this sort of shows 
it.

4. -y 80-xx :: set width to 80 or greater. Note you can also set these in your 
configurations if you want using the various options supported.

--------------------------------------------------------------------------------
BUGS:

1. Once again, no real bugs found beyond a few trivial things I can't remember.

--------------------------------------------------------------------------------
FIXES:

1. When out of X, dm: showed after Console: and often said dm: N/A particularly 
on headless servers, which was silly. Now DM: only shows after Console: if a DM: 
was actually found. If regular Desktop output, either in X, or via --display out 
of X, no changes.

2. There was a pointless sudo test when sudo values are set initially, they were 
still running even if --no-sudo was used. Now they don't run in that case.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. The biggie, now inxi can output in a similar indented way as something like 
dmidecode if you use the -y 1 option. This feature was originally by request, 
though the initial request actually just wanted to see it stacked simply, but 
that was almost impossible to read for any output reasonably long, so I made the 
indentations very dynamic and deep, they go up to 4 levels in, which is roughly 
how deep in the inxi sub Categories go. This output format makes it very easy to 
see how inxi 'thinks' about its data, how it views sets, subsets, subsubsets, 
and subsubsubsets of data.

Note that each data block, as with dmidecode data, is separated by a blank line. 
You know what this means!!! Yes, that's right!!! You can parse inxi output with 
awk!!, same way legacy bash+gawk inxi used to parse its data!! Or if your brain 
just does not like lines of data, you can make it appear in indented single key: 
value pairs.

Here you can see for example that 1 Xorg Display has 1 or more Screens, and each 
Screen has one or more Monitors. Note that this -Ga data first appeared in inxi 
3.1.00.

Sample [with bug in OpenGL output!, and showing -Ga newer values as well for 
dual monitor setup, with one Xorg Screen]:

inxi -aGy1
Graphics:
  Device-1: NVIDIA GT218 [GeForce 210] 
    vendor: Gigabyte 
    driver: nouveau
    v: kernel
    bus ID: 09:00.0 
    chip ID: 10de:0a65 
  Display: x11 
    server: X.Org 1.20.8 
    driver: nouveau
    unloaded: fbdev,modesetting,vesa
    display ID: :0.0 
    screens: 1 
    Screen-1: 0 
      s-res: 2560x1024 
      s-dpi: 96 
      s-size: 677x271mm (26.7x10.7") 
      s-diag: 729mm (28.7") 
      Monitor-1: DVI-I-0 
        res: 1280x1024 
        hz: 60 
        dpi: 96 
        size: 338x270mm (13.3x10.6") 
        diag: 433mm (17") 
      Monitor-2: VGA-0 
        res: 1280x1024 
        hz: 60 
        dpi: 86 
        size: 376x301mm (14.8x11.9") 
        diag: 482mm (19") 
  OpenGL: 
    renderer: N/A 
    v: N/A 
    direct render: N/A
    
2. Refactored and cleaned up print_data(), got rid of some early testing code, 
dumped some unnecessary tests, simplified old tests, and optimized the new 
indentation logic reasonably well. Hopefully the print_data() will not be quite 
as much of a black box now as it was.

3. Even more drive vendors and ID matches!!! The list never ends!! An endless 
series of new vendors and IDs of existing vendors sprout up, then float away. 
And inxi follows them to the best of its ability. Thanks again to Linux-Lite 
hardware database, which help make this ever expanding list possible, since 
their users appear to use every disk known to humankind.

--------------------------------------------------------------------------------
CHANGES:

1. When out of Display, and Console: shows, -S will not show dm: if no display 
manager is detected, and if it is detected, it shows DM: since it's not part of 
the Console: set of data. If out of X and --display is used to get Xorg data out 
of X, it will show Desktop: set of data as normal, at least it will show the 
stuff it can find. This resolves the issue where dm: appeared to be a member of 
the set of Console: data, instead of either its own thing, DM:, or a member of 
the set of Desktop: data. 

2. For RAID Devices with sub Array-x: values, Array-x: is capitalized, it used 
to be array-x: That was silly.

3. In USB, now Device-x: resets inside each Hub: so that the Device-x: are 
numbered starting at 1 within each Hub:. This makes the counter behavior act the 
same as it does in for example RAM Array-x: / Device-y:, where each Array-x: 
resets Device-y: count to 1. This changes the old default of having Device-x: 
not reset, to let you see the total number of devices plugged in or attached no 
matter which hub they were plugged into, but the output actually gets sort of 
confusing in single key: value pair mode per line.

4. The key: value syntax for weather was changed completely, now it works like 
the rest of the features, with Report:... [Forecast:...] Locale:... and Source:. 
Locale makes the source of the times and other date related features, and the 
location if shown or available, much more obvious. Before it was never clear if 
Current Time referred to your local or the remote time, now it's clearly from 
the Locale: you specified with -W, or the default -w local info. Also made 
Report 1 line if unwrapped, Forecast 1 line if not wrapped, and Locale: 1 line 
if not wrapped, which makes the output easier to read. 

NOTE: automated weather queries are NOT allowed, if you do it, you will be 
banned!! inxi is NOT a desktop weather app!! Don't confuse it with one!! Weather 
is just a small service to users who might for example want to check the weather 
on a remote system, or something like that, and is not intended to be used on a 
routine basis. 

5. Cleaned up and re-ordered the --version output. It had some pretty old 
contexts in the language, which were removed or cleaned up and brought up to 
date. If you're wondering, I roughly use rsync and nano --version as guides for 
what to show or not show there.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 11 Jun 2020 23:53:30 -0700

================================================================================
Version: 3.1.01
Patch: 00
Date: 2020-05-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New inxi, man. New information types, fixes, man updates.

--------------------------------------------------------------------------------
BUGS:

No bugs of any importance fixed or found!!

--------------------------------------------------------------------------------
FIXES:

1. Tiny fix, didn't use partition/slice assignment in help menu. BSD interest 
only since default partition is standard for Linux.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Disc Vendors: added a large number of possible disk vendors, without having 
actual detection data available for all of them, using a different source. Also 
added, as usual, more disc vendor IDs from linux-lite hardware database, always 
ready with more vendors!

2. Added groovy gorilla ID for ubuntu

3. Very nice usability change, mostly for support people, now if -y without an 
integer is supplied, it will assign default column width of 80, which is what 
you usually want for forums or issue reports, otherwise the output can wrap 
outside the post or issue report, which is hard to read. Hopefully support 
people will catch onto this one.

4. This closes issue #217 - Adds dmidecode based extra data:
 -xxx - shows CPU voltage and external clock speeds
 -a - shows CPU socket type and base/boost: speed items. These are --admin
 options because neither is particularly reliable, sometimes they are right,
 sometimes they aren't, as usual with dmi data. As far as tests show, base 
 speed, what dmidecode misleadingly calls 'Current Speed', which it isn't,
 is the actual normal non throttled speed of the CPU / motherboard setup.
 boost is what dmidecode calls 'Max Speed', which it also isn't, though
 sometimes it is, as with AMD cpus with boost, and no overclocking. With
 overclocking, sometimes base will be higher, sometimes the actual real
 current cpu speeds will be higher than all the max/boost values.
 Motherboard CPU socket type is likewise randomly correct, incorrect, empty,
 misleading, depending on the age and type of the system, and the CPU
 vendor. It appears that in general, AMD CPUs will be more or less right
 if they have this data, and Intel CPUs will sometimes be right, sometimes
 not, or empty. For > 1 CPU systems, the data is much less reliable.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 31 May 2020 14:26:37 -0700

================================================================================
Version: 3.1.00
Patch: 00
Date: 2020-04-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------
New inxi, new man. Huge update, new line types, huge graphics upgrade, new 
switches, bug fixes, glitch fixes, enhancements, you name it, this has got it!!

Note that since this features a new primary line item (-j / --swap Swap:), the 
version number has been bumped to 3.1.0, making this a major version upgrade, 
the first since the new Perl inxi rewrite was launched, though of course 3.0.0 
contained many new line items as well, but this is the first actually new line 
item since then.

--------------------------------------------------------------------------------
BUGS:

1. Big bug fix: if -z used, and -p, and user had partitions mounted in $HOME 
directory, the partitions would buggily duplicate in the output.

2. See Fix 1, inxi was reporting the wrong (or no in some cases) Xorg driver 
because it was using the wrong Xorg log, it was only searcing in the original 
/var/log/Xorg.0.log file, not the newer alternative path locations.

--------------------------------------------------------------------------------
FIXES:

1. Both an enhancement and a fix, users reported Xorg log file location changes. 
Fix is that now inxi uses wildcard searches of all readable locations that can 
contain the log files, then collects a list of them, and uses the last modified 
one. This ensures that the best possible guess is made about which actual log 
file is current, which should lead to significantly more reliable Xorg driver 
reports overall. 

Note that this fix works for user level and root level, it will always use the 
most recent readable file no matter what. For root, that should translate to the 
most recent on an absolute level Xorg log file. This issue was caused by gdm 
moving from Xorg.0.log to Xorg.1.log on some systems, but not all, and also, the 
location is often but not always now: ~/.local/share/xorg/Xorg.[01234..].log 
[except for root, which is why root has to search for all user Xorg log files to 
find the most recent one. 

There were many red-herrings in this issue report, so it took some research to 
dig through those to the real data sources.

2. Now that the compositor detection is out of early testing mode, enabled 
always on compositor detection for Wayland systems. Since the compositor is the 
Wayland display server, it makes sense to always show it if Wayland. Note that 
there is still no known way to actually reliably get Wayland data beyond simple 
environmental variables that let inxi detect Wayland is running the desktop. 
Lack of reliable logs or debugging tools across Wayland compositors makes this 
entire process about 10-50x more difficult than it should have been.

3. In keeping with 2., also moved compositor: item to be right after server: 
item.

4. Debian bug:
https://bugs.debian.org/cgi-bin/pkgreport.cgi?dist=unstable;package=inxi 
requested that HTTP::Tiny be set to default always check SSL certificates. Now 
inxi does that, and --no-ssl flag disables this, which makes the Perl http 
downloader now work roughly the same as wget, curl, etc.

5. Man page fixes, added pointer placeholders for out of alphabetical order 
options, so you can find anything by looking down the alpha sorted lists, like: 
--swap - See -j. Since inxi is running out of single letters that match new 
features, it's easier to point man readers to the right item without them having 
to already know it to find it. Also added --dbg [2-xx] pointer to github 
inxi-perl/docs/inxi-values.txt so people interested can learn how to trip the 
various per feature screen debuggers.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. updated ubuntu ids, added 'focal LTS'.

2. USB Graphic devices added. This will add support for USB graphics adapters, 
an uncommon but existing category, often used in SOC boards, for example, but 
also on desktops, and things like USB webcams. Leaving these off was really just 
an oversight, the programming internally had the data, it just wasn't using it. 

3. Support added for TV card type multimedia devices in Graphics. That was 
actually a long term oversight, I'd simply missed that in the device ID 
documentation, one of the multimedia device subtypes is Video device.

4. Huge, massive, internal upgrade to allow for -Ga output, which gives a 
technically accurate Xorg > Display > Screen > Monitor breakdown. Note that 
Display and Screen data come from xdpyinfo, and Monitor info comes from xrandr, 
but if xrandr is missing, the Screen information shows. 

Technically for -G, -Gxx, end users see very little difference except the per 
Screen / per Monitor resolutions are listed with a 1: type counter per item. 

Note that Xorg Screens are NOT Monitors, they are a virtual space Xorg 
constructs out of the pieces of hardware that make up the Screen space. In many 
cases, 1 Xorg Screen contains only 1 Monitor, but the dimensions or dpi are 
frequenty different.

New output items: 
Display: ... display ID: [Xorg Screen identifier, like :0.0]; screens: [Total 
Xorg Screens in current Display]; [s-default: [if > 1 Screens, default Screen 
number]]

Screen-x: [Screen number]; s-res: [Xorg Screen resolution];
s-dpi: [Xorg Screen dpi]; s-size: [Xorg Screen mm (inch) size; 
s-diag: [diagonal of Xorg Screen size] 

Monitor-x: [Monitor Xorg ID]; res: [Actual monitor pixel dimensions]; 
hz: [actual monitor reported frequency]; dpi: [actual monitor dpi as calculated
from actual monitor resolution/size; size: [actual monitor size in mm (inch); 
diag: [actual diagonal size in mm (inch).

4a. -Gxx now shows Xorg s-dpi: for the Screen as well, after the main resolution 
section for -G.

5. Big improvement in error messages and logging for Xorg driver detections, 
this logic is much more robust now, but after the main driver fix, also much 
less likely to ever be seen.

6. Almost not visible to users, but major internal graphics refactor allows now 
for more modular treatment, and eventual Wayland data sourcing. Currently most 
Wayland data sourcing is in stub form, or only logically possible, but as it 
grows possible (if ever, since Wayland protocal appears to have totally 
neglected enforcing single location logging, and single tool debugging for the 
entire Wayland protocol of compositors, a massive oversight in my view). The -Ga 
refactors internally made this much more possible, and I integrated switches and 
tests, and fallbacks, and stubs in some locations, so it was clear where current 
Xorg specific logic is, and where future Wayland logic will fit in, sort of 
anyway.

7. Debugger tools added for new features, or most of them.

8. New primary line item: --swap / -j. This moves all swap data to a dedicated 
Swap: line, which looks roughly the same as Partition: lines, but when -j/--swap 
is used, all swap types, not only physical partition swaps, show. This should 
make some users happy.

9. Added more cpu family IDs for Zen 2 series of cpu, tweaked some later Intel 
cpu family ids in terms of cpu arch name tool.

10. By request, added ability filter out all UUID or Partition Label strings in 
-j, -o, -Sa, -p, -P. Those are tripped by --filter-label and --filter-uuid. 
Mostly useful in fringe cases, for example, replacing label or UUID from -Sa 
kernel boot parameters with root=LABEL=<filter>, or in cases you want to show 
full -v8 output without showing UUID or Labels, whatever.

11. Added --no-dig/--dig plus configuration option NO_DIG=true. This disables 
dig in cases where dig is installed but failed due to maybe network firewall 
rules or something, and WAN IP detection fails. Normally you always want to use 
dig, it's faster, more reliable, and safer, than all the other regular 
downloader based methods, but we have seen server setups where for some reason 
those types of dig requests were blocked, thus disabling WAN IP detection.

12. Added in WAN IP failure case, if dig was used, suggestion to try again with 
--no-dig, since most users are unlikely to learn about this issue, or the 
solution to it.

13. Added single letter shortcut -J for --usb, maybe this will help people 
discover usb component of inxi, now you can request for instance: inxi -FJaz

14. Added xonsh to supported shells, that had tripped a perl undefined value for 
start client bug since xonsh uses single word for version, xonsh/234 so the 
default value, 2nd word, was undefined. 

15. More SSD and USB drive vendors from the endless fountain over at Linux 
Hardware Database (linuxliteos.com). 

--------------------------------------------------------------------------------
CHANGES:

1. Small change in how screen resolutions are output in -G non -a mode, now each 
Screen / Monitor will increment by 1 the 1: [resolution~hz] key. This helps make 
it more readable. Note that in non -a mode, the increments are just based on 
Screen, then Monitor, Monitor, Screen, and so on, counts. Most users will only 
have one Screen systems, but more advanced setups may use the Xorg > 1 Screen, 
each screen able to run > 1 monitors.

The counts in say, a 2 Screen system, with 3 monitors, would be:
1: res1 [from screen 0, monitor 1] 2: res2 [from screen 0, monitor 2] 
3: res3 [from screen 1, monitor 1.

If xrandr is not installed, it would show:
1: res1 [from screen 0] 2: res2 [from screen 1]

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 22 Apr 2020 19:33:56 -0700

================================================================================
Version: 3.0.38
Patch: 00
Date: 2020-03-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page, exciting changes!!

--------------------------------------------------------------------------------
BUGS:

1. Fixed undefined error that could happen, in rare cases, in hdd_temp logic.

--------------------------------------------------------------------------------
FIXES:

1. Fixed Elbrus cpu nazming, model 9 is 8CV, not 8CB (Cyrillic error)

2. Preventitive, was not using '-' quite correctly in all regex ranges.

3. Had wrong desktop string listed in Unity

4. Reordered Family/Drive model in usb drive reports, it's to make it more 
obvious what is what.

5. Adjusted indexing of splits to get better results in corner cases.

6. Fixed some numbering issues.

7. Added trimming n1 from nvme0 type names for nvme, this corrects some issues 
users were having.

8. Fixed a division by 0 error in smartctl data grabber.

9. Fixed a Perl issue, didn't realize perl treats 000 as a string, not 0.

10. Another Perl fix, int() only wants to get numeric values sent to it, I'd 
assumed a different behavior, non numerics get converted to 0, but that's not 
how Perl sees things. Things like this, by the way, are why Perl is so absurdly 
fast.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. More disk vendors. The list will never be complete!! We have found eternal 
churn!! Thanks to linux lite hardware database as always.

2. Big one!!! Now inxi uses smartctl data, if installed, for getting advanced 
drive information (with -a). See man and help for details. Will show failing 
drives, etc. Lots of info can be available, but sometimes data is not in 
smartctl db, so inxi can't find it, that's not an inxi bug, it's just how it is.

3. Made hours on more human readable, into days/hours, for -a smartctl disk 
report.

4. Added $test[12] for smartctl data printout, and $test[13] for disk array 
print out. Note that advanced debugger outputs can change or vary depending on 
what is being worked on so don't in general rely on these always being around. 
But they do tend to say stuck in place once I add them.

5. Added some nvme stuff, spare reserve, if you need it, you'll appreciate it, 
if not, you'll never know it's there.

6. By request from some forum issue thread: made --host only be shown onif not 
--filter or not --host. This makes -z remove hostname, but retains ability to do 
absolute overrides. Hostname should have always been filtered out like that, it 
was an oversight. I think that was Manjaro who asked that, but I forget. Note 
that this change, as usual, will not alter expected behaviors if users have 
config item for hostname set.

7. Added support for picom compositor, thanks user codebling for that, I think 
that's compiz fork, the real branch that is that is being developed.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 14 Mar 2020 22:56:32 -0700

================================================================================
Version: 3.0.37
Patch: 00
Date: 2019-11-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page, exciting changes!!

--------------------------------------------------------------------------------
BUGS:

1. issue #200 - forgot to add all variants for -p, now works with 
--partition-full and --partitions-full

2. issue #199 - another one, forgot to add --disk to -D for long version. Thanks 
adrian15 for both of these, he was testing something and discovered these were 
missing.

3. Issue #187 an issue with RAID syntax not being handled in a certain case, 
thanks EnochTheWise for following through on this one. This turned out to be a 
bad copy paste, a test pattern did not match the match pattern.

--------------------------------------------------------------------------------
FIXES:

1. Fixed some docs typos.

2. Issue #188 fixed protections and filters for some glxinfo output handlers.

3. Issue #195, for Elbrus bit detection.

4. Added filter to cpu data, was not skipping if arm, so Model string was 
treated numerically.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added rescatux to Debian system base detections. This closes issue #202, 
again from adrian15, thanks.

2. For cpu architecture, updated for latest AMD ryzen and other families, like 
Zen 3, which is just coming out re available data. Also latest Intel, which are 
trickier to ID right now, but I think I got the latest ones right, That's things 
like coffee lake, amber lake, comet lake, etc.

3. Huge one, full (hopefully out of the box) Russian Elbrus CPU support. Thanks 
to the alt-linux and the others who helped provide data and feedback to get 
support. Note that this was also part of correcting 64 bit detection for e2k 
type, which is how Elbrus IDs internally. See issue #197 which I've left open 
for the time being for more information on this CPU and how it's now handled by 
inxi. Note all available data should now work for Elbrus, including physical 
cpu/core counts etc. Elbrus do not show flag information, nor do they use 
min/max speed, so that data isn't available, but everything else seems to work 
well.

4. Eternal disk vendors. Thanks linux lite hardware database, you continue to 
help make the disk vendor feature work by supplying every known vendor ever 
seen.

5. To close debian bug report 
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=942194 Note that the fix is 
simply to give the user the option to disable this behavior with the new 
--no-sudo and NO_SUDO configuration file options. This issue should never have 
been filed as a bug since even the poster admitted it was a wishlist item, but 
because of how debian bug tracker works, it's hard to get rid of invalid bugs. 
Note that this is the internal use of sudo for hddtemp and file, not starting 
inxi with sudo, so using this option or configuration item just removes sudo 
from the command. Note that because the user did not do as requested, and never 
actually filed a github wishlist issue, and since his request was vague and 
basically pointless, the fix is just to let you switch off sudo, that's all.

Note that another user had commented on sudo firing off admin emails on servers, 
and that was in a different context, some time ago, that's what this option 
really is useful for, if you want to just disable sudo fires internally to avoid 
admin server email alerts, basically. 

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 19 Nov 2019 20:18:15 -0800

================================================================================
Version: 3.0.36
Patch: 00
Date: 2019-08-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------
New version, many small fixes. 

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Issue #187 EnochTheWise (?) did not supply the required debugger data so 
there is a RAID ZFS issue that will not get fixed until the required debugger 
data is supplied. 

Note that a key way we get issues here is from Perl errors on the screen, which 
are a frequent cause of someone realizing something is wrong. This is why I'm 
not going to do a hack fix for the RAID ZFS issue, then the error messages will 
go away, and it will likely never get handled. 

--------------------------------------------------------------------------------
BUGS:

1. Issue #188 exposed a situation in glxinfo where the required opengl fields 
are present but contain null data. This happens when a system does not have the 
required opengl drivers, which was the case here. inxi failed to handle that. 
Thanks LinuxMonger for posting the required data to figure this corner case out.

2. Fixed a long time bug in Disk vendor ID, there was an eq (string equals) 
where it was supposed to use regex pattern match. Oops. Would have led to disk 
vendor id failures in several cases.

--------------------------------------------------------------------------------
FIXES:

1. help, man updates for RAM/Memory data, more clarifications.

2. Refactored RepoData class/package, to make it easier to handle repo string 
data, and make it all overall cleaner internally, and enable future extensions 
to certain features in inxi that may or may not one day become active.

3. Added to some regex compares \Q$VAR\E to disable regex characters in strings. 
I should have used that a long time ago, oh well, better late than never!

4. Found a horrible case were xdpyinfo uses 'preferred' instead of the actual 
pixel dimensions, shame on whoever allowed that output!!! shame! Had to add a 
workaround to make sure numeric values are present, if not, then use the 
fallback, which means, 2x more data parsing to get data that should not require 
that, but in this example, it did (an Arch derivative, but it could be xdpyinfo 
itself, don't know).

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. More fixes on issue #185. Thanks tubecleaner for finding and provding 
required data to really solve a set of RAM issues that apply particularly in 
production systems. This issue report led to 2 new options: --memory-short, 
which only shows a basic RAM report.

Memory:    RAM: total: 31.43 GiB used: 14.98 GiB (47.7%) 
           Report: arrays: 1 slots: 4 modules: 2 type: DDR4

And a 2nd, --memory-modules, only shows the occupied slots. This can be useful 
in situations where it's a server or vm with a lot of slots, most empty:

Memory:    RAM: total: 31.43 GiB used: 15.44 GiB (49.1%) 
           Array-1: capacity: 256 GiB slots: 4 EC: None 
           Device-1: DIMM 1 size: 16 GiB speed: 2400 MT/s 
           Device-2: DIMM 1 size: 16 GiB speed: 2400 MT/s

Note that both of these options trigger -m, so -m itself is not required.

2. More disk vendors!! The list never ends! Thanks linux-lite hardware database 
and users for supplying, and buying/obtaining, apparently every disk known to 
mankind.

3. Added fallback XFCE detection, in cases were the system does not have xprop 
installed, it's still possible to do a full detection of xfce, including 
toolkit, so now inxi does that, one less dependency to detect one more desktop.

4. Added vmwgfx driver to xorg drivers list. Note, I've never actually seen this 
in the wild, but I did see it as the kernel reported driver from lspci, so it 
may exist.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 14 Aug 2019 10:47:47 -0700

================================================================================
Version: 3.0.35
Patch: 00
Date: 2019-07-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Bug fixes, updates.

--------------------------------------------------------------------------------
BUGS:

1. Issue #185 exposed a small long standing bug in ram max module size logic. 
Was not retaining the value each loop iteration, which could lead to way off max 
module size guesses. Note that this could lead to a VERY wrong max module size 
report.

2. Issue #185 also exposed a rarely seen undefined value for ram reports, was 
not tested for undefined, now is.

--------------------------------------------------------------------------------
FIXES:

1. cleanup of comments in start client debugger that made it unclear.

2. Got rid of all the legacy development modules that were in inxi-perl/modules. 
These were totally out of date and pointless to retain.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added eoan ubuntu 19-10 release name

2. Added zen cpu model ID.

3. Disk vendors and new vendor IDs added. Thanks linuxlite hardware database.

4. Made a backend tool to check for new unhandled disks, this makes updating 
disk/vendor IDs a lot easier. 

5. Updated inxi-perl/docs with new links etc.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 15 Jul 2019 19:48:45 -0700

================================================================================
Version: 3.0.34
Patch: 00
Date: 2019-04-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man, new feature!! Bug fixes!

--------------------------------------------------------------------------------
BUGS:

1. issue #182 - in freeBSD, there was an oversight in the pciconf parser, it was 
using unfiltered strings as regex pattern, and of course, a string flipped an 
error. Fix was to add the regex cleaner to the string before it's used in test.

2. NOTE: issue #182 had a second bug, but the issue poster didn't follow up with 
data or output so it couldn't be fixed. This was related to a syntax change in 
usbdevs -v output in FreeBSD. Such changes are too common, but it might also 
simply be a variant I have not seen or handled, but so far no data, so can't 
fix. Don't blame me if you get this bug, but do post requested debugger data if 
you want it fixed!

--------------------------------------------------------------------------------
FIXES:

1. Updated man for weather, explained more clearly how to use country codes for 
weather output. More clarifying in general about weather location, and weather 
restrictions. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added avx/avx2 to default flag list in -C short form. Thanks damentz from 
liquorix for clarifying why that was a good idea. Note the initial issue came up 
in a Debian issue report, not here. People!! please post issues here, and don't 
bug maintainers with feature requests! Maintainers aren't in a position to add a 
feature, so you should go straight to the source. 

1.a. Created in inxi-perl/docs new doc file: cpu-flags.txt, which explains all 
the flags, and also covers the short form flags and explains why they are used.

2. To resolve another issue, I made a new documentation file: 
inxi-perl/docs/inxi-custom-recommends.txt This is instructions for maintainers 
of distros who do not use rpm/apt/pacman but still want the --recommends feature 
to output their package pool package names for missing packages. I decided to 
not allow more than the default 3 package managers because no matter what people 
say, if I allow in more, the maintainer will vanish or lose interest, and I'll 
be stuck having to maintain their package lists forever.

Also, it's silly to even include that package list for any distro that does not 
use rpm/apt/pacman, since the list is just wasted lines. Instructions in doc 
file show what to change, and how, and has an example to make it clear. Odds of 
this actually being used? Not high, lol, but that's fine, if people want it 
done, they can do it, if not, nothing bad happens, it just won't show any 
suggested install package, no big deal.

3. Using the new disk vendor method, added even more disk vendors. Thanks linux 
lite hardware database!!

4. EXCITING!! A new --admin/-a option, suggested by a user on 
techpatterns.com/forums/ Now -S or -b or -F with -a option for GNU/Linux shows 
the kernel boot parameters, from /proc/cmdline. Didn't find anything comparable 
for BSDs, if you can tell me where to look, I'll add it for those too, but 
wasn't anywhere I looked. Do the BSDs even use that method? Don't know, but the 
logic is there, waiting to be used if someone shows me how to get it cleanly. 
The 'parameters:' item shows in the main 'System:' -S output, and will just show 
the entire kernel parameters used to boot.

This could be very helpful to distros who often have to determine if for example 
graphics blacklists are correctly applied for non free drivers, like nomodeset 
etc, or if the opposite is present. 

For forum/distro support, they just have to ask for: inxi -ba and they will see 
the relevant graphics info, for instance, or -SGaxxx, or -Faxxx, whatever is 
used to trigger in this case the graphics and system lines.

5. Updated man/help for 4 as well, now explains what they will see with --admin/ 
-a options and -S. Good user suggestion, I wish all new features were this easy, 
heh.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 30 Apr 2019 17:37:10 -0700

================================================================================
Version: 3.0.33
Patch: 00
Date: 2019-03-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Weather explanations, disks, bugs!!

--------------------------------------------------------------------------------
BUGS:

1. For sensors, in some cases, gpu failed to show correctly. This fixed issue 
#175

--------------------------------------------------------------------------------
FIXES:

1. Made help/man explanations of weather changes more clear. Particularly in 
regards to no automated query info. But also for supported location syntaxes.

2. Some corner cases of null weather data return null and tripped a null data 
error. This is corrected.

3. Added city duplicate filter to weather output, this hopefully will in some 
cases avoid printing city name twice, depends on weather source.

4. Removed --weather-source option 0, that no longer works so all code was 
removed.

5. More deb822 fixes, loosened up even more syntax. That's a poorly designed 
config syntax, hard to work with.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Lots of new disk vendors. So many!! Thanks linux-lite hardware database! 
switched to a new method of getting disk name/vendor data, now it's a lot easier 
to check for new ones.

2. Added fancybar to desktop info.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 29 Mar 2019 14:03:51 -0700

================================================================================
Version: 3.0.32
Patch: 00
Date: 2019-02-07
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. A few more modifications to weather.

--------------------------------------------------------------------------------
FIXES:

1. In case with zero wind speed, it now shows zero, not N/A, as expected.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Depending on weather source used:
  * Shows precipitation, not rain/snow.
  * Adds Sunrise/sunset (most sources do not have this)

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 07 Feb 2019 20:50:18 -0800

================================================================================
Version: 3.0.31
Patch: 00
Date: 2019-02-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------
New version, new man page. Big update! Get it in before your freeze!!

--------------------------------------------------------------------------------
BUGS:

1. Maybe the vendor/product regex, which when + was used, would put out errors.

2. Maybe Fix 4, since that could lead to incorrect behavior when sudo is 
involved depending on sudo configuration.

3. BIG: current inxi weather will probably fail if not updated to this or newer 
versions!! Not an inxi bug per se, but your users will see it as one.

--------------------------------------------------------------------------------
FIXES:

1. Fixed Patriot disk ID.

2. Fixes for PPC board handling. 

3. Regex cleaner fixes, this could lead to error in special cases of product 
vendor names.

4. crazy from frugalware pointed out that $b_root detection was flawed, and 
relied on a bad assumption, particularly for sudo. As usual, he's right, that is 
now corrected, and uses $< Perl native to determine UID.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added septor to Debian system base.

2. Removed quiet filters for downloaders when using --dbg 1, now you see the 
entire download action for curl/wget downloads. This went along with issue # 174

3. New feature: --wan-ip-url. This closed issue #174. Also has user config 
option: WAN_IP_URL as well to make changes permanent.

4. Added --dbg 1 to man and help. The other --dbg options are random and can 
change, but --dbg 1 is always for downloading, so might as well tell people 
about it.

5. To anticipate the loss of a major weather API, inxi is redone to use smxi.org 
based robust API. This also allows for a new switch, --weather-source (or --ws 
for shorter version), options 0-9, which will trigger different APIs on 
smxi.org. Added WEATHER_SOURCE configuration option as well. Note that 4-9 are 
not currently active. Also added in better error handling for weather. The main 
benefit here is that inxi is now largely agnostic to the weather APIs used, and 
those can be changed with no impact to inxi users who are running frozen pool 
inxi's, or who have not updated their inxi versions.

NOTE: all inxi versions older than 3.0.31 will probably fail for weather quite 
soon. So update your inxi version in your repos!!

6. More disk vendors IDs and matches. Thanks linuxlite hardware database. 

7. Going along with weather changes, added, if present, cloud cover, rain, and 
snow reports. Those are for previously observed hour.

8. Small change to Intel CPU architecture, taking a guess on stepping for 
skylake/Cascade lake ID. Guessing if stepping is > 4, it's cascade lake. But 
could not find this documented, so it's a guess. At worst, it means that 
Cascade lake, which must be a later steppingi than 4, will not be ID'ed as 
skylake.

9. Documentation updates for data sources.

--------------------------------------------------------------------------------
CHANGES:

1. inxi now uses a new system to get weather data. There is no longer a risk of 
weather failing if the API used locally in inxi fails or goes away. This change 
should be largely invisible to casual users.

2. In weather, moved dewpoint to be after humidity, which makes a little more 
sense.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 06 Feb 2019 18:09:53 -0800

================================================================================
Version: 3.0.30
Patch: 00
Date: 2018-12-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. 

--------------------------------------------------------------------------------
BUGS:

1. Both a fix and a bug, in that inxi had an out of date list of Xorg drivers. 
This led to all the newer Intel devices failing to show their drivers in the 
Xorg driver lines, like i915, i965, and so on. Updated to full current list of 
Xorg drivers. This is not technically a bug since it's simply things that came 
into existence after that logic was last updated. But it looks like a bug.

--------------------------------------------------------------------------------
FIXES:

1. Issues #170 and #168 showed a problem with inxi believing it was running in 
IRC when Ansible or MOTD started inxi. This is because they are not tty so trip 
the non tty flag, which assumes it's in IRC in that case. The fix was to add a 
whitelist of known clients based on the parent name inxi discovers while running 
inside that parent. MOTD confirmed fixed, Ansible not confirmed. Why do people 
file issue reports then not follow up on them? Who knows.

Note that this issue is easy to trip by simply doing this: echo 'fred' | inxi 
which disables the tty test as well. To handle that scenario, that is, when inxi 
is not first in the pipe, I added many known terminal client names to the 
whitelists. This works in my tests, though the set of possible terminals, or 
programs with embedded terminals, is quite large, but inxi handles most of them 
automatically. When it doesn't, file an issue and I'll add your client ID to the 
whitelist, and use --tty in the meantime.

2. Issue #171 by Vascom finally pinned down the wide character issue which 
manifests in some character sets, like greek or russian utf8. The fix was more 
of a work-around than a true fix, but inxi now simply checks the weather local 
time output for wide characters, and if detected, switches the local date/time 
format to iso standard, which does not contain non ascii characters as far as I 
can tell. This seemed to fix the issue.

3. Added iso9660 from excluded file systems for partitions, not sure how inxi 
missed that one for so long.

4. See bug 1, expanded and made current supported intel drivers, and a few other 
drivers, so now inxi has all the supported xorg drivers again. Updated docs as 
well to indicate where to get that data.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. As usual, more disk vendor/product ID matches, thanks to linuxlite hardware 
database, which never stops providing new or previously unseen disk ids. Latest 
favorite? Swissarmy knife maker victorinox Swissflash usb device.

2. Added Elive system base ID.

3. Added Nutyx CARDS repo type.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 31 Dec 2018 20:54:08 -0800

================================================================================
Version: 3.0.29
Patch: 00
Date: 2018-12-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, fixes, updates, missing specs.

--------------------------------------------------------------------------------
BUGS: 

1. See fix 4, incorrect positioning of Trinity desktop detection logic.

--------------------------------------------------------------------------------
FIXES:

1. Vascom reports in issue #169 that some systems are making the /sys cpu 
vulnerability data root read only. Added <root required> test and output.

2. A while back, they added several chassis types in the smbios specifications. 
I used an older specification pdf file, this is now corrected. Note that 
realworld use of the new types exists, like tablet, mini pc, and so on. This 
missing data caused Machine report to list N/A as machine type when it was 
actually known. I'd been using an older specification PDF, and had failed to 
look at the actual spec download page, where you could clearly see the newer 
spec file. Corrected this in the inxi docs as well.

3. Made gentoo repo reader check for case insensitive values for enabled. Also 
extended that to other repo readers that use similar syntax, they are all now 
case insensitive (Yes/yes/YES, that is)

4. Fixed incorrect handling of Trinity desktop ID, that needed to happen in the 
kde ID block, as first test, not after it. Caused failure in Q4OS trinity, and 
maybe others. I'm not sure why inxi had the detection where it was, it made no 
real sense, so that's now nicely integrated, so these types of failures should 
not happen again. Thanks Q4OS for exposing that issue.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added TDM and CDM display managers. Never seen either (Q4OS uses TDM), TDM 
corrected. CDM not confirmed, don't know if it's still around, but if it is 
similar to TDM re cdm.pid in /run, it should be detected fine.

2. Added more disk vendors/ids, the list never stops!! Thanks LinuxLite Hardware 
database, your users seem to use every disk known to humanity.

3. Added Debian derived Q4OS distro ID and system base handler.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 10 Dec 2018 11:08:47 -0800

================================================================================
Version: 3.0.28
Patch: 00
Date: 2018-11-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Fixes, enhancements.

--------------------------------------------------------------------------------
BUGS:

1. ARM fix, odroid > 1 cpu speeds not showing correctly. 

2. Ansible start fixes.

3. Fringe Battery failures, see Pinebook.

--------------------------------------------------------------------------------
FIXES:

1. Removed null data message 'old system' since that's not always the case.

2. Added support for > 1 CPU speeds in systems with > 1 CPU.

3. Added is_numeric test for sudo version tests, that was tripping errors in 
rare cases.

4. Fine tuned terminal size setting to check that is int to correct the Ansible 
problem.

5. ARM Pinebook fixes, battery, cpu. This also fixes corner cases where the 
battery charge state is missing but it is a systme battery.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added more disk ID matches/vendors. Thanks LinuxLite Hardware database!!

2. UKUI, ukwm, ukui-panel added to desktop data.

3. Added PopOS to system base.

4. Ansible/Chef user noted that inxi believes that it is running in IRC when 
started by Ansible / Chef (not sure about Chef but assuming it's the same). 
Added flag --tty flag to force inxi to believe it's running in shell no matter 
what starts it. Note that this fix is not confirmed because the person didn't 
confirm the fix. Annoying.

5. Added Ubuntu disco to ubuntu_id.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 29 Nov 2018 21:12:14 -0800

================================================================================
Version: 3.0.27
Patch: 00
Date: 2018-10-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Fixes, stitches, and returns!!

--------------------------------------------------------------------------------
BUGS:

1. As a fix (3), failure to handle spaces in mount source names. More of a fix 
than a bug, since it was an old issue #63.

2. OSX errors, BSD errors, but not really inxi errors or bugs, more weird data 
tripping null data or unreadable file errors, but I'll call those bugs since 
they look like bugs to end users. See Fixes for more.

3. See Fix 4, this is sort of a bug, inxi failed to return expected values on 
success/failure.

--------------------------------------------------------------------------------
FIXES:

1. One of the documented config items, COLS_MAX_NO_DISPLAY had not been 
implemented internally. This is now corrected.

2. Apple OSX was returning errors, those were fixed.

3. Finally handled ancient issue #63, support now there for spaces in remote 
source name. This means that both spaces in source block name, and mount point 
name, are in theory both handled now. This was also to fix an osx issue #164 
despite the fact that technically I do not support osx beyond fixing errors, but 
since in this case the issue was a long standing one, I fixed it for everything.

4. Big fix, I'd completely left undone proper unix type error number returns in 
inxi, oops. Thanks Unit193 for noticing that and prompting me to fix it. Now 
inxi returns integer success/error numbers as expected.

5. OSX xml based version info broke, of course, naturally it would, so I added 
in an osx fallback where if no distro version detected, use fallback unix 
method, which is what all the other unices use.

6. Along with space in source name, fixed mapped handling a bit more too for 
partitions.

6. Added cifs remote file system to disk size used blacklist, and iso9660. Not 
sure how I'd missed those for so long.

7. OpenBSD vmstat in 6.3 changed the column order for avm/fre, and changed to a, 
sigh, human readable default format, in M, so to handle this for all BSDs, I had 
to make a dynamic column detection for avm and fre, and use those after, and 
also i had to add in a M detection, if found, *1024 and strip out M, sigh. 

8. OpenBSD, another alternate ordering/syntax issue, the dmesg.boot data for 
disks does not always use the same order in comma separated list, saw user case 
where the first item after : was the MB size, not the second. Made detection 
dynamic.

9. Due to Android case, found types where no cpu speed data was found, no max 
speed at least, which tripped an error due to null data for ARM, this is now 
handled, now cpu speed min/max read permissions in /sys are checked first before 
trying to read, and default failures are better handled.

10. On man page, added in clarification of the moving of Memory: item from Info: 
line to ram Memory: line, explaining when it appears where. I am ambivalent 
about removing the item from -I, I may revert that change, I find it 
non-intuitive to move the Memory report around.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added display manager Ly, plus Ly version number. Thanks NamedKitten, this 
closes issues #166 #165 #162

2. Improved documentation a bit to avoid ambiguity re how to get colors in 
output. That handles issue #161, thanks fugo for the nudge to improve the 
documentation.

3. First inxi on Android tests, using termux, which has a debian based apt type 
installer, got inxi running on at least two devices, including pixel2, but 
discovered that apparently as of android 5, /sys is now locked up in terms of 
wildcard reads, but further analysis is required, but as of now, inxi works in 
termux, but fails to get any Device data for A, G, or N. Thus it also fails to 
match IF to Device, so none of the IP data shows up. The latter will probably be 
fixed since Android has ip and ifconfig already, or termux does, but so far I 
found no way to get device data for ARM in Android 5.x and greater (checked on 
android 7 and 9 in real phones).

4. More disk vendors!! thanks linuxlite / linux hardware database for offering 
an apparently never ending list of obscure and not so obscure disk vendors and 
products.

5. While I was unable to get confirmation or documentation on file names for tce 
repo files, I guessed that localmirrors would be used, but this may be any 
random text file in /opt at all, no extensions, I'd have to test to confirm or 
deny possible values.

6. To handle more complex debugger failures, added --debug-no-proc, 
--debug-no-exit, to skip or enable completion where proc or sys debugger is 
hanging.

--------------------------------------------------------------------------------
CHANGES:

1. Changed vendor in A, G, and N to -x, not -xxx, this data seems much more 
useful and reliable than I'd first expected when I made the feature, the -xxx 
was more an indication of my lack of trust in the method and source, but so far 
it seems pretty good, so I bumped it up to an -x option. Note that also, it's 
quite useful to know the vendor of, say, your network or graphics card, not just 
the actual device internal data, which is all inxi has ever shown previously.

2. Small change, if no partition type data is found, dev, remote, mapped, 
default now says 'source:' instead of 'dev:' which makes more sense. Note that 
df calls that column 'source', so I decided to go with their language for the 
default not found case. Also changed mapped to say mapped. This was part of a 
bit of a refactor of the partition type logic, enhanced by adding mapped to 
existing types, and moved the entire type detection block into the main data 
generator, and out of the data line constructor.

--------------------------------------------------------------------------------
CODE: 

1. Optimizations: Tested, and dumped, List::Util first() as a possible way to 
speed up grep searches of arrays, where the goal is just to see if something is 
in an array. My expectation was that first(), returning the first found instance 
of the search term, would of course be faster since it will always exit the 
search loop was met with the sad fact that first() is about 2 to 4 times SLOWER 
than grep() native builtin.

I tested this fairly carefully, and used NYTProf optimizer tool and the results 
were totally consistent, first() was always much slower than grep(), no matter 
what size the array is. I assume this means the core C programming that makes 
grep is simply much better than the File::Util module programming that makes 
first(). Removed first() and now know that nothing will be faster than grep so 
no need to look there for speed improvements.

The moral of the story: just because something should in theory be faster, does 
sadly not mean it will be faster, for there are bigger things at work, skill of 
the programmers who made the logic, how perl handles external vs internal tools, 
and so on. As an aside, this forms a fairly consistent pattern where I've found 
Perl by itself to be faster than modules in many cases, that is, it's faster to 
write the code out than to use a module in many cases that I have tested, so I 
will always test such ideas and dump every one that is in fact slower than 
native Perl builtins.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 14 Oct 2018 15:24:34 -0700

================================================================================
Version: 3.0.26
Patch: 00
Date: 2018-09-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man.

--------------------------------------------------------------------------------
BUGS:

1. If you consider failure to identify a mounted yet hidden partition a bug, 
then that bug is fixed, but I consider that as more of a fix than a bug.

--------------------------------------------------------------------------------
FIXES:

1. Added more device pattern ID for odroid C1 and C2, these are now pretty well 
supported.

2. inxi failed to handle a certain type of hidden partition, so far only seen 
with udiskctl mounted TimeShift partitions, but this may be a more general udisk 
issue, but so far not enough information. The fix is to use the lsblk data to 
build up missing partitions, so this fix is for non legacy Linux systems only. 
The fix works pretty well, but it's hard to know until we get a lot more real 
world data, but given so far I've received only one issue report on it, I 
suspect this is not a common situation, but you never know, it would never have 
shown up in datasets unless I had looked specifically for it, so it may be more 
common than I think.

3. Cleaned up and simplified new --admin -p and -d logic.

4. Refactored deb822 apt handling due to utter randomness of syntax allowed.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. For debugging, renamed all user debugger switches to have prefix --debug. 
These options are to help debug debugger failures, and so far have been tested 
and solved the failures, so I'm adding them all to the main man and help menu, 
thus raising them to the level of supported tools. These were enormously helpful 
in solving proc or sys debugger hangs.
 * --debug-proc
 * --debug-proc-print
 * --debug-no-sys
 * --debug-sys
 * --debug-sys-print
 
2. Added findmnt output to debugger, that may be useful in the future. Also 
added df -kTPa to also catch hidden partitions in debugger.

3. Added in another user level debugger, triggered with --debug-test-1 flag. 
This will do whatever operation is needed at the time for that user. Some issues 
can only be resolved by the user on their machine.

4. More disk vendors and matches!!! Thanks linuxlite/linux hardware database!

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 28 Sep 2018 13:47:03 -0700

================================================================================
Version: 3.0.25
Patch: 00
Date: 2018-09-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Huge set of changes. Excitement!! Thrills! Spills?

--------------------------------------------------------------------------------
BUGS:

1. There was a missing main::is_int test that in some instances triggered 
error. This is corrected.
2. More of a fix, but legacy devices were not matching NIC to IF because 
the /sys path was not a link as it is now. I made a separate function to
handle that match test so it could be more readily worked with.

--------------------------------------------------------------------------------
FIXES:

1. Arch/Manjaro presented yet another Xorg.wrapper path, this time /usr/lib. 
Why? who knows. That to me is a bug, but since if it's not handled in inxi, it 
makes it look like inxi has a server: -G bug, I worked around it. Again. This 
creates the bug when you do not use the actual true path of Xorg where 
Xorg.wrapper complains and will not show -version data. Why move this? why use 
that wrapper thing? I don't know, makes no sense to me.

2. More MIPS data, thanks manjaro ARM people. This made MIPS much better, though 
it will certainly need more work.

3. Better ARM support, added in devicetree strings, which helps pad out the 
Devices IDs, albeit with very little data, but at least the devices are 
detected. Thanks Manjaro ARM people there again.

4. Removed Upstart init test for arm/mips/sparc devices. This test made MIPS 
device totally puke and die, killed networking, so since very few upstart 
running systems will be arm/mips devices, I decided there better safe than 
sorry.

5. Found another uptime syntax case, MIPS as root does not have the users item.

6. Many tweaks to SOC data generators, will catch more categories, but the lists 
will never be done since each device can be, and often is, random re the syntax. 
SOC types are now filtered through a function to create consistent device type 
strings for the per device tool to use to assign each to its proper 
@device_<type> array.

7. USB networking failed to test usb type for 'network', which led to failed ids 
on some device strings. 

8. For pciconf/FreeBSD, cleaned up device class strings to get rid of 0x and 
trailing subsubclass values, this converts it into the same hex 4 item string 
that is used by GNU/Linux/lspci so I can apply consistent rules to all pci 
types, no matter what the generator source is, lspci, pcidump, pciconf, and 
eventually pcictl if I can get netBSD running.

9. Fixed internal --dbg counts for various features, and updated docs for that.

10. Fixed ARM / MIPS missing data messages, they were redundant.

11. Ongoing, moving excessive source comments to inxi-values.txt and 
inxi-data.txt.

12. Added unity-system-compositor as mir detection, who knew? I guess that was 
its production application name all along? Oh well.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added basic support for OpenIndiana/Solaris/SunOS as a BSD type. Just enough 
to make errors not happen.

2. Future proofed unix/BSD detections just to avoid the unset $BSD_type of non 
BSD unix.

3. Added S6 init system to init tool.

4. Added OpenBSD pcidump to new DeviceData feature. Includes now <root required> 
message on Device-x: lines if not root. All working.

5. Fully refactored the old pci stuff to DeviceData package/class, due to adding 
so many types to that, it made sense to make it a single class.

6. Did the same to USBData, because of lsusb, usbdevs, and /sys usb, made sense 
to integrate the data grabber into one package/class

7. Added speed: item to USB:, it shows in Mb/s or Gb/s

8. Added Odroid C1/C2 handling, which is one big reason I opted to refactor the 
devices data logic into DeviceData.

9. Added ash shell, not sure if that detection will work, but if it does, it 
will show.

10. As part of the overall DeviceData refactor, I moved all per type data into 
dedicated arrays, like @device_graphics, @device_audio, @device_network, etc, 
which lets me totally dump all the per device item tests, and just check the 
arrays, which have already been tested for on the construction of the primary 
DeviceData set. Moved all per type detections into DeviceData so that is now one 
complete logic block, and the per type data generators don't need to know about 
any of that logic at all anymore.

11. Added sway, swaybar, way-cooler as window managers, info items. Not 100% 
positive about the --version, their docs weren't very consistent, but I think 
the guess should be right if their docs weren't incorrect.

12. Added vendor: item to network, not sure why I kept that off when I added 
vendor: to audio and graphics. It made sense at the time, but not now, so now 
-GNA all have vendor: if detected.

13. More device vendors!! The list never ends. Thanks linuxlite/linux hardware 
database, somehow you have users that manage to use every obscure usb/ssd/hdd 
known to humanity.

14. Big update to --admin, now has the following:
 A: partitions: shows 'raw size: ' of partition, this lets users see the amount 
 of file system overhead, along with the available size as usual.
 B: partitions: show percent of raw in size:
 C: partitions: show if root, block size of partition file system. Uses
 blockdev --getbsz <part>
 D: partition: swap: show swappiness and vfs cache pressure, with (default)
 or (default [default value]) added. This apparently can help debugging some 
 kernel issues etc. Whatever, I'll take someone's word for that.
 E: Disks: show block size: logical: physical: 
 
15. New option and configuration item: --partition-sort / PARTITION_SORT 
This lets users change default mount point sort order to any available ordering
in the partition item. Man page and help menu show options.

16. Going along with the MIPS fixes, added basic support for OpenWRT, which uses
an immensely stripped down busybox (no ps aux, for example), maybe because it
only runs as root user/ not sure, anyway, took many fixes.

17. Added Void Linux xbps repos to Repos section.

--------------------------------------------------------------------------------
CHANGES:

1. Changed usb: 1.1 to rev: 1.1 because for linux, we have the USB revision 
number, like 3.1. Note that this is going to be wrong for BSDs, but that's fine.

2. Changed slightly the output of Memory item, now it follows the following 
rules:
 A: if -m/--memory is triggered (> -v4, or -m) Memory line always shows in 
 Memory:  item, which makes sense. Note that -m overrides all other options of 
 where Memory minireport could be located.
 B: if -tm is triggered, and -I is not triggered, Memory shows in in -tm
 C: if -I is triggered, and -m is not triggered, Memory: shows in -I line.
 D: no change in short form inxi no arg output, Memory is there.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 24 Sep 2018 15:58:00 -0700

================================================================================
Version: 3.0.24
Patch: 00
Date: 2018-09-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. Bug fix, enhancements, fixes.

--------------------------------------------------------------------------------
BUGS:

1. Big bug found on certain systems, they use non system memory memory arrays, 
inxi failed to anticipate that situation, and would exit with error when run as 
root for -m when it hit those array types. These arrays did not have modules 
listed, so the module array was undefined, which caused the failure. Thanks 
Manjaro anonymous debugger dataset 'loki' for finding this failure. This is 
literally the first dataset I've seen that had this issue, but who knows how 
many other system boards will show something like that as well.

--------------------------------------------------------------------------------
FIXES:

1. Related to bug 1, do not show the max module size item if not system memory 
and size is less than 10 MiB. Assuming there that it's one of these odd boards.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. For bug 1, extended Memory: report to include array type if not system 
memory. That instance had Video Memory, Flash Memory, and Cache Memory arrays 
along with the regular System Memory array. Now shows: use: Video Memory for 
example if not System Memory to make it clear what is going on. 

2. Added basic Parrot system base, but for some inexplicable reason, Parrot 
changed the /etc/debian_version file to show 'stable' instead of the release 
number. Why? Who knows, it would be so much easier if people making these 
derived distros would be consistent and not change things for no good reason. 

3. Added a few more pattern matches to existing vendors for disks. As usual, 
thanks linuxlite/linux hardware database for the endless lists of disk data.

4. Added internal dmidecode debugger switches, that makes it much easier to 
inject test dmidecode data from text files using debugger switches internally. 

5. Added -Cxx item, which will run if root and -C are used, now grabs L1 and L3 
cache data from dmidecode and shows it. I didn't realize that data was there, 
not sure how I'd missed it all these years, I guess pinxi really is much easier 
to work on! This only runs if user has dmidecode permissions from root or sudo.

6. Brought cpu architectures up to date, new intel, new amd. Note there's a 
slight confusion about what is coffee lake and what is kaby lake.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 10 Sep 2018 15:00:17 -0700

================================================================================
Version: 3.0.23
Patch: 00
Date: 2018-09-07
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. Fixes, enhancements, changes.

Thanks: 
1. AntiX forums, for testing -C --admin, suggestions, always helpful.

--------------------------------------------------------------------------------
KNOWN ISSUES:

1. Unable to detect Nomad desktop. As far as I can tell, Nomad is only a theme 
applied to KDE Plasma, there is no program by that name detectable, only a 
reference in ps aux to a theme called nomad. 

2. Nitrux system base ID will not work until they correct their /etc/os-release 
file.

3. Tails live cd for some inexplicable reason uses non standard /etc/os-release 
field names, which forces me to either do a custom detection just for them, or 
for them to fix this bug. I opted for ignoring it, if I let each distro break 
standard formats then try to work around it, the distro ID will grow to be a 
1000 lines long easily. Will file distro bug reports when I find these from now 
on.

Samples:

This shows the corrected, cleaned up, consistent usb output:

inxi -y80 --usb 
USB:
  Hub: 1-0:1 info: Full speed (or root) Hub ports: 14 usb: 2.0 
  Hub: 1-3:2 info: Atmel 4-Port Hub ports: 4 usb: 1.1 
  Device-1: 1-3.2:4 info: C-Media Audio Adapter (Planet UP-100 Genius G-Talk) 
  type: Audio,HID usb: 1.1 
  Device-2: 1-4:3 info: Wacom Graphire 2 4x5 type: Mouse usb: 1.1 
  Device-3: 1-10:5 info: Tangtop HID Keyboard type: Keyboard,Mouse usb: 1.1 
  Device-4: 1-13:7 info: Canon CanoScan LiDE 110 type: <vendor specific> 
  usb: 2.0 
  Device-5: 1-14:8 info: Apple Ethernet Adapter [A1277] type: Network usb: 2.0 
  Hub: 2-0:1 info: Full speed (or root) Hub ports: 8 usb: 3.1 
  Hub: 3-0:1 info: Full speed (or root) Hub ports: 2 usb: 2.0 
  Hub: 4-0:1 info: Full speed (or root) Hub ports: 2 usb: 3.1 
  Hub: 5-0:1 info: Full speed (or root) Hub ports: 4 usb: 2.0 
  Hub: 6-0:1 info: Full speed (or root) Hub ports: 4 usb: 3.0

inxi -y80 --usb -xxxz
USB:
  Hub: 1-0:1 info: Full speed (or root) Hub ports: 14 usb: 2.0 
  chip ID: 1d6b:0002 
  Hub: 1-3:2 info: Atmel 4-Port Hub ports: 4 usb: 1.1 chip ID: 03eb:0902 
  Device-1: 1-3.2:4 info: C-Media Audio Adapter (Planet UP-100 Genius G-Talk) 
  type: Audio,HID driver: cm109,snd-usb-audio interfaces: 4 usb: 1.1 
  chip ID: 0d8c:000e 
  Device-2: 1-4:3 info: Wacom Graphire 2 4x5 type: Mouse driver: usbhid,wacom 
  interfaces: 1 usb: 1.1 chip ID: 056a:0011 
  Device-3: 1-10:5 info: Tangtop HID Keyboard type: Keyboard,Mouse 
  driver: hid-generic,usbhid interfaces: 2 usb: 1.1 chip ID: 0d3d:0001 
  Device-4: 1-13:7 info: Canon CanoScan LiDE 110 type: <vendor specific> 
  driver: N/A interfaces: 1 usb: 2.0 chip ID: 04a9:1909 
  Device-5: 1-14:8 info: Apple Ethernet Adapter [A1277] type: Network 
  driver: asix interfaces: 1 usb: 2.0 chip ID: 05ac:1402 serial: <filter> 
  Hub: 2-0:1 info: Full speed (or root) Hub ports: 8 usb: 3.1 
  chip ID: 1d6b:0003 
  Hub: 3-0:1 info: Full speed (or root) Hub ports: 2 usb: 2.0 
  chip ID: 1d6b:0002 
  Hub: 4-0:1 info: Full speed (or root) Hub ports: 2 usb: 3.1 
  chip ID: 1d6b:0003 
  Hub: 5-0:1 info: Full speed (or root) Hub ports: 4 usb: 2.0 
  chip ID: 1d6b:0002 
  Hub: 6-0:1 info: Full speed (or root) Hub ports: 4 usb: 3.0 
  chip ID: 1d6b:0003

--------------------------------------------------------------------------------
BUGS:

1. Added switch to set @ps_gui, I forgot case where info block was only thing 
that used ps_gui (Nitrux kde nomad latte case). This led to no info: data if 
other ps_gui switches not activated. Now each block that can use it activates 
it.

--------------------------------------------------------------------------------
FIXES:

1. To clarify issue #161 added help/man explanation on how to get colors in 
cases where you want to preserve colors for piped or redirected output. Thanks 
fugo.

2. LMDE 3.0 released, slightly different system base handling, so refactored to 
add Debian version, see enhancement 2. Tested on some old vm instances, improved 
old system Debian system base id, but it's empirical, distro by distro, there is 
no rule I can use to automatically do it, sadly.

3. 'Motherboard' sensors field name added, a few small tweaks to sensors. This 
was in response to issue #159, which also raised a problem I was not really 
aware of, user generated sensor config files, that can have totally random field 
names. Longer term solution, start getting data from sys to pad out lm-sensors 
data, or to handle cases where no lm-sensors installed. 

4. Fixed kwin_11 and kwin_wayland compositor print names, I'd left out the _, 
which made it look strange, like there were two compositors or something.

5. Fixed latte-dock ID, I thought the program name when running was latte, not 
latte-dock. inxi checks for both now. Thanks Nitrux for exposing that in vm 
test.

6. Sensors: added in a small filter to motherboard temp, avoid values that are 
too high, like SYSTIN: 118 C, filters out to only use < 90 C. Very unlikely a 
mobo would be more than 90C unless it's a mistake or about to melt. This may 
correct anoymous debugger dataset report from rakasunka.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added --admin to -v 8 and to --debugger 2x

2. Added -a to trigger --admin. This lets you run something like -Fxxxaz

3. Expanded system base to use Debian version tool, like the ubuntu one, that 
lets me match version number to codename. The ubuntu one matches code names to 
release dates. Added Neptune, PureOS, Sparky, Tails, to new Debian system base 
handler.

4. Big enhancement: --admin -C now shows a nice report on cpu vulnerabilities, 
and has a good error message if no data found. Report shows: Vulnerabilities: 
Type: [e.g. meltdown] status/mitigation: text explanation. Note: 'status' is for 
when no mitigation, either not applicable,  or is vulnerable. 'mitigation' is 
when it's handled, and how. Thanks issue #160 Vascom from Fedora for that 
request.

5. The never-ending saga of disk vendor IDs continues. More obscure vendors,
more matches to existing vendors. Thanks linuxlite/linux hardware database

--------------------------------------------------------------------------------
CHANGES:

1. Reordered usb output, I don't know why I had Hubs and Devices use different 
ordering and different -x switch priorities, that was silly, and made it hard to 
read.
Now shows: 
Device/Hub: bus-id-port-id[.port-id]:device-id info: [product info] 
type/ports: [devices/hubs] usb: [type, speed]
-x adds drivers for devices, and usb: speed is now default for devices, same as 
Hubs. Why I had those different is beyond me.
The USB ordering is now more sensible, the various components of each matching 
whether hub or device.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 07 Sep 2018 13:01:40 -0700

================================================================================
Version: 3.0.22
Patch: 00
Date: 2018-08-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. Bug fixes, enhancements.

--------------------------------------------------------------------------------
BUGS:

1. A long standing bug was finally identified and fixed. -n/-i would fail to 
match a Device to the right IF in cases where they had the same chip / vendor 
IDs. Added busID for non Soc type devices to fix that. I hope. This fix has been 
tested on a machine that had this bug, and it is now corrected. Thanks skynet 
for the dataset.

2. deepin-wm was failing to get listed correctly with new fixes, this is 
corrected.

--------------------------------------------------------------------------------
FIXES:

1. mate version was depending on two tools, mate-about and mate-session, which 
somewhat randomly vary in which has the actual highest version number. Fix was 
to run both in MATE for version, and run those through a new version compare 
tool. Thanks mint/gm10 for reporting that bug.

2. -Gxx compositors: added some missing ones that were being checked for in- 
correctly.

3. For distro id, fixed a glitch in the parser for files, now correctly removes 
empty () with or without spaces in it.

4. Got rid of ' SOC?' part of no data for ram or slots, that also triggers in 
non SOC cases, so best to not guess if I can't get it right.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. More disk vendor ID matches, also, somehow missed QEMU as vendor, thanks to 
linux hardware database (linuxlite) for great samples of vendor/product strings.

2. Added a bunch of compositors, found a new source that listed a lot inxi did 
not have already. 

3. Added version v: for some compositors in -Gxxx.

4. New program_data() tool provides an easier to use simple program 
version/print name generator, including extra level tests, to get rid of some 
code that repeats.

5. Found some useful QEMU virtual machines for ARM, MIPS, PPC, and SPARC, so 
made initial debugging for each type, so basic working error free support is 
well on its way for all 4 architectures, which was unexpected. More fine tunings 
to all of them to avoid bugs, and to catch more devices, as well. Note that QEMU 
images are hard to make, and they were not complete in terms of what you would 
see on physical hardware, so I don't know what features will work or not work, 
there may be further variants in audio/network/graphics IDs that remain 
unhandled, new datasets always welcome for such platforms!

6. Found yet another desktop! Added Manokwari support, which is at this point a 
reworking of gnome, but it was identifiable, minus a version number.

7. Added deepin and blankon to system base supported list, these hide their 
debian roots, so I had to use the manual method to provide system base.

8. Extended -Sxxx info: item to include system trays, and a few more bars and 
panels. So this product now shows bars, panels, trays, and docks. And that's I 
think good enough, since those are the basic tools most desktop/wm's will use.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 28 Aug 2018 15:08:16 -0700

================================================================================
Version: 3.0.21
Patch: 00
Date: 2018-08-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. Big set of changes. Full USB refactor, plus added 
features.

--------------------------------------------------------------------------------
BUGS:

1. A result of the issue #156 USB refactor, I discovered that the --usb sort 
order, which was based on Bus+DeviceID, in fact is wrong, pure and simple. This 
was exposed by using a second USB hub on a bus, the Device IDs are not really 
related in any clearly logical way to the actual position on the bus. The 
solution was to fully refactor the entire USB logic and then use generated alpha 
sorters based on the full bus-port[.port] ID. Device ID is now printed last in 
the ID string, like so: 1-4:1. Note that Device IDs start at 1 for each bus, 
regardless of how many hubs you have attached to that port.

2. Certain situations triggered a bug in Optical devices, I'd forgotten to 
change $_ to $key in two places. Since that part didn't normally get triggered, 
I'd never noticed that bug before. Thanks TinyCore for exposing that glitch!

--------------------------------------------------------------------------------
FIXES:

1. On legacy systems, fluxbox --version does not work, -v does. Corrected.

2. for --usb, network devices should now show the correct 'type: Network'. For 
some weird reason, the people who made the usb types didn't seem to consider 
many key devices, scanners, wifi/ethernet adapters, and those are almost always 
"Vendor defined class".

3. A really big fix, for instances where system is using only Busybox, like 
TinyCore, or booting into any system running busybox for whatever reason, now 
avoids the various errors when using busybox ps, which only for example outputs

3, not 11, default columns for ps aux, and which does not support ps -j, which 
is used in the start/shell client information. This gets rid of a huge spray of 
errors, and actually allows for pretty complete output from systems that only 
have busybox tools installed. This should cover everything from TinyCore to MIPS 
to ARM systems that run minimalist Linux. Note that this fix goes along with the 
/sys based USB parser, since such systems may have USB, but are unlikely to have 
lsusb installed, but do have /sys USB data.

4. In some cases, strings /sbin/init would trigger a false version result, fixed 
that logic so now it rarely will do that.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added Moksha desktop, that's a Bodhi fork of Enlightenment E17; added qtile 
window manager (no version info).

2. Added Bodhi detection; Salix + base slackware; kde neon system base;

3. Added support for slaptget repos, basic, it may not be perfecct.

4. More disk vendors, and matches for existing vendors.

5. Full rewrite of USB data, in --usb, -A, and -N, along with core usb data 
engines. This makes lsusb optional, though recommended (because it has a better 
vendor/product ID to string internal database than /sys data). This was in 
response to a second set of issues in #156 by gm10, USB drivers.

Depending on the system, using only /sys data, while slightly less informative,
is between 20 and 2000 milliseconds faster, so if you want speed, either use the 
new --usb-sys option, or the configuration file USB_SYS=[true|false] option.
 1. switched to cleaner more efficient data structures
 2. added ports count to hub report, linux and BSD.
 3. added [--usb|-A|-N] -xxx serial for Device items, if present.
 4. added --usb -xx drivers, per interface, can be 1 or more drivers. 
 5. fully refactored -A and -N usb device logic, far cleaner and simple now,
 much easier to work with, no more hacks to find things and match them.
 6. USB type: now comes from /sys, and is in general going to be more accurate
 than the lsusb -v based method, which was always an ugly and incomplete hack.
 As with drivers, it also now lists all the interface types found per device, 
 not just the first one as with the previous method. Note that HID means the 
 more verbose: Human Interface Device, but I shortened it. Now that the type: 
 data is created by inxi reading the class/subclass/protocal IDs, and then 
 figuring out what to do itself, I can have quite a bit more flexibility in 
 terms of how type is generated.
 7. added --usb -xxx interfaces: [count] for devices, which lists the device 
 interface count. This can be useful to determine if say, a usb/keyboard adapter 
 is a 2 interface device. Note that Audio devices generally have many interfaces, 
 since they do more than 1 thing (audio output, microphone input, etc.).
 8. Support for user configuration file item: USB_SYS=[true|false]. This is 
 useful if you want to see only the /sys version of the data, or if you want the 
 significant speed boost not using lsusb offers, particularly on older systems 
 with a complex  USB setup, many buses, many devices, etc. 
 New option --usb-tool overrides USB_SYS value, and forces lsusb use.
 9. New options: --usb-sys - forces all usb items to use /sys data, and skip 
 lsusb. Note that you still have to use the feature options, like --usb, -A, or 
 -N. This can lead to a significant improvement in execution time for inxi.
 10. Rather than the previous bus:device ID string, to go along with the 
 internal sorting strings used, inxi now shows the real Bus / port /port ids, 
 like:
 1-3.2.1:3 - Bus-Port[.port]:device id.
 
6. Added support for Xvesa display server. Thanks for exposing that one, 
TinyCore! 

7. Added tce package manager to repos. That's the tinycore package manager.

--------------------------------------------------------------------------------
CHANGES:

1. big one, after 10 plus years, the venerable 'Card-x:' for -A,-N, and -G has 
been replaced by the more neutral 'Device-x:'.  This was a suggestion by gm10 
from Mint in issue #156 

This makes sense because for a long time, most of these devices are not cards, 
they are SOC, motherboard builtin, USB devices, etc, so the one thing they all 
are is some form of a device, and the one thing that they are all not is a Card. 
Along with the recent change from HDD: to Local Storage in Disks: this brings 
inxi terminology out of the ancient times and into the present. Thanks for the 
nudge gm10.

--------------------------------------------------------------------------------
CODE:

See inxi-perl/docs/inxi-fragments.txt for removed blocks.

1. Entire parser for lsusb -v, now it all runs either usbdevs or lsusb, and if 
Linux and not lsusb, it will use /sys exclusively, otherwise it uses /sys data 
to complete the lsusb vendor/product strings.

2. Two functions that were used by -A and -N to match usb devices and get their 
/sys data, that became redundant since it all now goes through the /sys parser 
already, so those features can get the data pre-parsed from the @usb arrays.

Output Examples:

Sort by DeviceID failures in 3.0.20 using Device ID:

inxi --usb
USB:
  Hub: 1:1 usb: 2.0 type: Full speed (or root) hub 
  Device-1: Wacom Graphire 2 4x5 bus ID: 1:2 type: Mouse 
  Device-2: Tangtop HID Keyboard bus ID: 1:3 type: Keyboard 
  Device-3: Verbatim bus ID: 1:11 type: Mass Storage 
  Device-4: Apple Ethernet Adapter [A1277] bus ID: 1:13 
  type: Vendor Specific Class 
  Hub: 1:85 usb: 1.1 type: Atmel 4-Port Hub 
  Device-5: C-Media Audio Adapter (Planet UP-100 Genius G-Talk) bus ID: 1:86 
  type: Audio 
  Device-6: Canon CanoScan LiDE 110 bus ID: 1:112 
  type: Vendor Specific Protocol 
  Device-7: ALi M5621 High-Speed IDE Controller bus ID: 1:113 
  type: Mass Storage 
  Hub: 2:1 usb: 3.1 type: Full speed (or root) hub 
  Hub: 3:1 usb: 2.0 type: Full speed (or root) hub 
  Hub: 4:1 usb: 3.1 type: Full speed (or root) hub 
  Hub: 5:1 usb: 2.0 type: Full speed (or root) hub 
  Hub: 6:1 usb: 3.0 type: Full speed (or root) hub
           
Corrected: sort by BusID in 3.0.21:

inxi --usb
USB:
  Hub: 1-0:1 usb: 2.0 type: Full speed (or root) Hub ports: 14 
  Hub: 1-3:85 usb: 1.1 type: Atmel 4-Port Hub ports: 4 
  Device-1: C-Media Audio Adapter (Planet UP-100 Genius G-Talk) 
  type: Audio,HID bus ID: 1-3.2:86 
  Device-2: ALi M5621 High-Speed IDE Controller type: Mass Storage 
  bus ID: 1-3.4:113 
  Device-3: Wacom Graphire 2 4x5 type: Mouse bus ID: 1-4:2 
  Device-4: Verbatim type: Mass Storage bus ID: 1-7:11 
  Device-5: Tangtop HID Keyboard type: Keyboard,Mouse bus ID: 1-10:3 
  Device-6: Canon CanoScan LiDE 110 type: <vendor specific> bus ID: 1-13:112 
  Device-7: Apple Ethernet Adapter [A1277] type: Network bus ID: 1-14:13 
  Hub: 2-0:1 usb: 3.1 type: Full speed (or root) Hub ports: 8 
  Hub: 3-0:1 usb: 2.0 type: Full speed (or root) Hub ports: 2 
  Hub: 4-0:1 usb: 3.1 type: Full speed (or root) Hub ports: 2 
  Hub: 5-0:1 usb: 2.0 type: Full speed (or root) Hub ports: 4 
  Hub: 6-0:1 usb: 3.0 type: Full speed (or root) Hub ports: 4
  
--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 Aug 2018 14:07:01 -0700

================================================================================
Version: 3.0.20
Patch: 00
Date: 2018-07-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. ARM enhancements and updates, -S data ongoing 
enhancements.

--------------------------------------------------------------------------------
FIXES:

1. Added support for new ARM SOC types, including chromebook ARM. Note that so 
far I have been unable to find a way to detect MMC networking, at least in a 
meaningful way. I know where the data is, but I can't figure out how to 
reasonably integrate it into the main ARM soc/device generator logic because 
it's fundamentally different from most platform or devicetree data.

2. Added alternate battery tests, this should cover a wide range of alternate 
battery IDs, while still preserving the distinction between system power 
batteries, and device batteries. The detection is now far more dynamic, and can 
handle unknown syntax for battery ID, while not losing the ability to correctly 
identify device batteries (like mice, keyboards, etc).

3. Trying a somewhat unreliable hack to get cpu variant for arm devices where 
the current method fails. this may be removed if it causes false ID in the 
future.

4. Excluded all /driver/ paths from ARM SOC @pci generation, those give read 
errors even as root.

5. Fixed a few defective wm version detections.

--------------------------------------------------------------------------------
ENHANCEMENTS:

The -S line continues to see many improvements.

1. Greatly expanded the set of info: items, now it covers all the toolbars, 
panels, and docks that I could find, plus a few things like icewmtray, where the 
wm has a built in panel. While there are probably more bar/panel/dock tools out 
there, and more will get added if or when they are encountered, now info: shows 
far more variants than ever before, and covers the range of options simpler wm 
users have for bars, trays, and panels. If I missed one that is detectable, by 
all means show how to detect it!

2. Fine tuned and added a few more window managers, and added version for some 
that were not showing versions.

3. Added 3 more dm version handlers, slim, gdm, gdm3, and refactored that code 
to use the same program_values/program_version logic that the other tools use.

4. A few more obscure and usb stick vendor IDs added.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 30 Jul 2018 18:06:11 -0700

================================================================================
Version: 3.0.19
Patch: 00
Date: 2018-07-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Fixes, glitches, and stitches!

Fixed some subtle and not subtle issues that I've noticed recently.

--------------------------------------------------------------------------------
BUGS:

1. The color scheme selector failed to remove the global value when a non global 
setting was used. This led to global values never getting removed, even though 
the text output said it would be, which is confusing, obviously, and always 
overriding the color selected. Thanks CentOS for helping find that one.

--------------------------------------------------------------------------------
FIXES:

1. Fixed possible corrupted user inxi.conf values. Now skips null values, and 
fully validates as integer integer values.

2. Fixed fvwm-crystal detections, integrated it into new refactored desktop 
logic.

3. For systems without glxinfo or running inxi out of gui/desktop, Xorg was in 
many cases failing to show version, which made it not show anything for server: 
except N/A. This is caused by a relatively recent change in behaviors in xorg, 
where you have to run it directly from it's true path, which is something like 
/usr/lib/xorg or /usr/lib/server-xorg at which point the error:

/usr/lib/xorg-server/Xorg.wrap: Only console users are allowed to run the X 
server

Figuring this out was tricky, and who the heck knows why Xorg -version would 
even return such a silly error in the first place, but there you have it. Next 
time you wonder why inxi is so long, this is why, endless churn in basic and 
complex things! The fix is injecting the optional xorg paths into @paths right 
before, and removing them right after, which avoids adding clutter to the 
@paths.

4. A ZFS fix, I'd noticed this one a while back, but after looking at the zfs 
Ubuntu tutorial page, I realized that this is the norm now, which is building 
zfs with /dev/sda (no partitions). This lead to failing to detect the zfs 
components, and reporting a bunch of partitions as unmounted which were part of 
that /dev/sdb type component array. By allowing /dev/sd[a-z] I fixed both errors 
at the same time, but I don't know if this syntax extends to say, nvme zfs as 
well. Note that when you build zfs arrays with say, /dev/sdb /dev/sdc you'll see 
two partitions per disk, /dev/sdx1 which is the main data, and /dev/sdx2, which 
is a tiny 8mB partition, no idea what it's for. 

5. Fixed missing konversation and hexchat version numbers in -I, finally found 
what was going on there. Note that hexchat --version used to pop up a gui, but I 
guess he finally fixed that, I am hoping.

6. Fixed some gentoo repo detections, but also found more variants. Not sure 
what exactly is going on with repos there, will wait for gentoo user issue 
reports to really lock those down.

7. BSD fixes, turns out FreeBSD uses that same map ... syntax in df -kT as 
OSX... Also made sure to load sysctl data for -S row, I'd forgotten about the 
compiler test there which needs that data.

8. Fixed herbstluftwm version detection, turns out it's another one of those 
that passes the entire path to the version program, so it shows: 
/sbin/herbsuftwm 0.22.0 which broke the regex, easy fix.

9. Completed refactoring of DesktopData, now it's all data array driven for most 
wm, desktops, etc, which makes adding/removing one very easy. All core data is 
now in program_values to allow for automated detections.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. With fix 1, added check_int and check_number utilities, these validate that 
inxi internal numeric or integer values actually are what they are supposed to 
be. This uses a neat Perl trick that makse the checks super fast and super 
accurate. Moved all internal int/numeric test regex to use these.

2. Added file based version number detection, that was done for Deepin, which 
uses /etc/deepin-version for its version number, but it can be used for 
anything.

3. Added Deepin and deepin window managers, Lumina, added bspwm wm, fixed muffin 
detections. Note that lumina has a weird behavior where when run outside of 
pinxi, it outputs to stdout, but inside of pinxi, to stderr, who the heck knows 
how that happens! 

4. Added zorin to supported base: distros. 

5. Even more disk vendors added! The list of no-name off brand chinese ssd 
vendors appears to be endless! Added some more specific ids to capture unique 
strings that can be linked to a vendor.

6. Added /usr/home to default -P paths, that's used instead of /home in the real 
world, so why not show it?

7. Because qt detection is possible, I've extended qt toolkit detection, but 
it's also not super accurate, but it's far better than gtk tk was, so I'm 
leaving that in. I also extended it to more wm/desktops since more are using qt 
now. Note: budgie 11 is going to be qt, but there's no way to distinguish 
between 11 and gtk 10 without doing a bunch of hacks so I'm leaving that alone.

8. Found a possible distro id source, added /etc/calamares detections to 
debugger, I'll see if that shows some consistent patterns before I implement a 
last fallback test for distro IDs. It may work.

--------------------------------------------------------------------------------
CHANGES:

1. Giving up on fake/slow/inaccurate GTK toolkit detections, removed the entire 
codeblock and stored in docs/inxi-fragments.txt, but I'm not going to do package 
manager type version tests anymore, if we can't get the data directly from a 
program or file, it's not going to happen, plus the gtk installed on the system 
means nothing in relation to the gtk version used to build the desktop.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 23 Jul 2018 12:57:38 -0700

================================================================================
Version: 3.0.18
Patch: 00
Date: 2018-07-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Fixes, a few changes, enhancements.

--------------------------------------------------------------------------------
FIXES:

1. Removed /dev/zram type data from swap partitions, since that's ram, it's not 
a partition, obviously.

2. More alternate IPMI syntax found, that's clearly going to take a while to 
have most syntaxes handled.

3. Small lm-sensors adjustment, fringe cases might scramble up hwmon and gpu 
temps, this is now handled.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added disk vendors, udinfo.

2. Exciting! New Architecture: MIPS! First datasets, confirmed working. This led 
to more abstracting of the previously ARM specific logic to be for SOC in 
general.

3. Related to 2, added in fallback busybox cases for partition data without fs.

4. Added window managers, xmonad, ratpoison, 9dm, gala (for Pantheon), notion, 
windowlab

5. Added Pantheon desktop detection. Note, unable to find a way to get version 
number.

6. IMPI sensors: added in psu fans, dimm temp.

7. New -Cxxx option: cpu boost (aka turbo), state enabled / disabled, only shows 
if system has that option.

--------------------------------------------------------------------------------
CHANGES:

1. Made toolkit for -S be -xx instead of -x, only Trinity/KDE and XFCE have that 
data.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 16 Jul 2018 17:31:30 -0700

================================================================================
Version: 3.0.17
Patch: 00
Date: 2018-07-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Changes, bug fixes, enhancements! Don't delay!

--------------------------------------------------------------------------------
BUGS:

1. A real bug, the detection for true path of /dev/root had a mistake in it and 
would only have worked in half the cases. This was an easy fix, but a 
significant one since it also would lead to the actual root / partition showing 
in Unmounted.

2. Related to the item Fixes-2, if two USB networking devices were attached, 
the second one's bus and chip ID would go on the wrong line of data if -n or -i 
option were used. Since that would be the line belonging to the previous device, 
that obviously was weird and wrong.

3. NEW: latest kernel can show hwmon data in sensors, for example from wifi 
chip. This broke CPU temp detection and showed way too high cpu temp, so this 
fix is fairly important since new kernels may have this new sensors hwmon 
syntax.

4. Sensors: IPMI alternate syntax found, also case with no data in expected 
columns, just N/A, so now the ipmi sensor logic skips all lines with non numeric 
values in the values column. This is what it should have done all along, it was 
trusting that values would always exist for the field names it looks for.

--------------------------------------------------------------------------------
FIXES:

1. ARM networking fix. ARM devices like rasberry pi that use usb bus for 
networking showed the no data message even though usb networking was right below 
it. This is corrected, and now that only shows if both main and usb networking 
failed for ARM.

2. Big repo fix: while testing distro and Trinity live cds, I discovered that 
apt is sometimes used with rpms, which made PCLinuxOS and ALT-Linux Repos item 
show the apt files but no data since the pattern was looking for start with deb. 
Added rpm to pattern, so all distros that use apt running rpms should now 'just 
work'.

3. Fixed more distro id things, PCLinuxOS should now show its full distro 
string.

4. Debugger: Filtered out more blocks of /proc, that data is bloated and messy, 
found another case where it collected a vast amount of junk system data from zfs 
in that case, just blocked the entire range. I had no idea /proc had so much 
junk data in it!

5. As noted above, IPMI, yet another alternate syntax for field names. My hope 
that IPMI software and sensors will be more logical and consistent than 
lm-sensors output is proving to be merely wishful thinking, I think now out of 3 
datasets I've gotten, I've seen 3 variants for syntax, not to mention the 
ipmi-tool vs ipmi-sensors differences. So IPMI will be like all sensors stuff, a 
work in progress, to be updated with every newly discovered alternate syntax and 
data set.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Disk vendors, added some, improved pattern detections for others. This 
feature is getting better all the time. Thanks linuxlite hw db, easy to scan for 
missing vendors in their inxi data.

2. Added more wm, budgie-wm, mwm, variants of kwin and Trinity's Twin, several 
others, more refactoring of core wm/desktop code. 

3. Added gpu ram and reworked memory logic for rasberry pi, which is the only 
SBC I am aware of that uses that tool. Now reports the actual total, and also 
gpu: for ram data, so you can tell that the gpu is using part of the total. 
Again, this comes from issue #153. Also added that info to man page for -I part.

4. Added more ARM and PCI cleaners for neater and more concise ARM/PCI output.

5. Added Trinity support to Desktop section, this had at least two different 
detection methods, but since the first just shows KDE original data, only the 
second one proved to be Trinity specific. Happily, the full data is available, 
toolkit, desktop version, and wm (Twin).

6. New -G,-A,-R -xxx feature: vendor:. Note that vendor data is very bloated and 
messy so it's trimmed down substantially, using a series of filters and rules, 
and thus it can contain the following: the actual vendor, like Dell, nothing, 
the motherboard vendor/product for board based PCI items, or a complete 
vendor/product string if it's unique. I couldn't think of a clean field name 
that meant: vendor OR vendor + basic product info OR motherboard + board version 
OR full product name, including vendor, so in the end, I just used vendor: but 
it's not quite the right term, but nothing else seemed to work better. Testers 
responded 
very enthusiastically about this feature so I guess the vendor: feature is ok.

--------------------------------------------------------------------------------
CHANGES:

1. Biggest change: Drives: HDD: total: the HDD: is now changed to: Local 
Storage: This was part of issue #153 and is a good suggestion because HDD 
generally was used to refer to hard disks, spinning, but with nvme, m.2, ssd, 
mmc, etc, that term is a bit dated. 'Local' is because inxi does not include 
detected remote storage in the totals.

2. The recent --wm option which forced ps as data source for window manager 
detection has been reversed, now --wm forces wmctrl and ps aux is preferred. 
Still falls back to wmctrl in case the ps test is null, this is better because I 
have to add the wm data manually for each one, whereas wmctrl has an unknown set 
and probably variable set of wm. Note that I reversed this because I saw several 
cases where wmctrl was wrong, and reported a generic source wm instead of the 
real one. Since most users are not going to even be aware of the wm: feature as 
enhanced with --wm switch, this should have no impact on users in general. Since 
the detected wm name needs to be known and handled to get assigned to wm: and wm 
version data, I think it will work better to have the known variants match with 
the wm data values, then just fallback to unknown ones that can get filled in 
over time as we find wm that people actually use and that you can get version 
info on and detect.

3. Moved help menu debugging options to bottom of help, which makes the option 
set more logical as you go down the list:

Output Control Options:
Additional Options:
Advanced Options:
Debugging Options:

4. Got rid of tests for GTK compiled with version for many desktops, that test 
was always wrong because it did not have any necessary relation to the actual 
gtk version the desktop was built out of, and it also almost always returned no 
data. Since this is an expensive and slow test, and is always going to be wrong 
or empty anyway, I've removed it. My tests showed it taking about 300ms or so to 
generate no data, heh. That's the tk: feature in -S. Note I also found that 
gnome-shell takes an absurdly long time to give --version info, the slowest of 
all such things, 300ms again, just to show version? Someone should fix that, 
there's no possible reason why it should take 300 milliseconds to give a simple 
version string. Note that this returns tk: to only returning real data, which in 
this case means only xfce, kde, and trinity, which are the only desktops that 
actually report their toolkit data. I'll probably remove that code in the future 
unless I can think of some real use for gtk version elsewhere, but it's just 
junk data which doesn't even work.

In the future, I will not try to emulate or guess at desktop toolkits, either 
they show the data in a direct form like XFCE or Trinity or KDE do, or I won't 
waste resources and execution time making bad guesses using inefficient code and 
logic. QT desktops like LXQt I'm leaving in because I believe those will tend to 
track more closely the QT version on the system, and the tests for QT version 
aren't huge ugly hacks the way they are for GTK, so they aren't as slow or 
intrusive, but those may also get removed since they almost never work either. 
But they are also slowing down the -Sx process so maybe they should be removed 
as well, I'll think about it. Since they only are used on LXQt and razer-qt, it 
probably isn't a big deal overall.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 12 Jul 2018 13:44:34 -0700

================================================================================
Version: 3.0.16
Patch: 00
Date: 2018-07-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Several bug fixes, enhancements, options.

--------------------------------------------------------------------------------
BUGS:

1. In some cases, -S Desktop showed xfce when it wasn't xfce. This should be 
largely corrected now.

2. Big bug: using lxqt-about for lxqt --version, now opens a dialog box, gui, so 
removed that, and now checking lxqt-session for version info instead.

--------------------------------------------------------------------------------
FIXES:

1. Now calling hitachi hgst drives vendor: HGST (Hitachi) to differentiate 
between regular Hitachi and HGST hitachi. Added a few more disk vendors.

2. Distro base and core: added linuxlite, elementary. Some distros use: 
/etc/upstream-release/lsb-release so testing for that and os-release now too.

3. Extended qt detections, may catch a few stray ones now in non kde qt 
desktops.

4. Complete refactor of desktop, desktop info, wm, and -G compositor, now much 
easier to extend each feature and add detections, move order around, etc. Also 
moved wm to -Sxx now that I use fallback ps aux tests, which were themselves 
also totally refactored and optimized. Fixed WindowMaker id, which is made more 
annoying because they are the only upper/lower case program name, but in at 
least debian, the actual program name is wmaker internally. 

Also tightened in particular gnome-shell, which was failing to show due to too 
restrictive filtering of desktop/vm repeats. Most wm do not contain the desktop 
name in the string, gnome-shell does, only one I'm aware of.

5. Removed N/A from wmctrl output, which just means null, which is what we want.

6. Removed gnome-shell from info: since it will now appear in wm: if found. 
Added a few -panel items to info:

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Showing type: network bridge for -N when it's type 0680, which is an odd pci 
type, generally it's a network bridge, but I figured it's best to show that 
explicitly to avoid confusion. This extends the 'type:' from just USB.

2. Added more window managers to wm, matchbox, flwm, fvwm2 (used to just use 
fvwm, this was wrong, it's its own thing), a few others.

3. Added a few more compositors to -Gxx. kwin_x11 should be the most noticeable, 
but added some more obscure ones too. This feature requires more work.

4. Extended ARM syntax to support a new one, path to /sys/device... has an extra 
/soc/ in it, that is now handled, all are tested for. Confirmed working. Note 
that ARM has to be confirmed fixed on a device by device basis, since there are 
key syntax differences in the paths, but it will get easier the more variants 
that are discovered. Added another trimmer to cut off \x00|01|02|03 special non 
printing characters which show as weird jibbberish in output, for model/serial 
number.

5. Refactored wm, info, desktop, compositor, now all use @ps_gui, which is all 
that is tested against, not the entire ps_cmd array. This drops the possible 
tests down massively since the only things in ps_gui will be the actual stuff 
found that matches all the patterns required for that system, not all ps items. 
Added marco, muffin fixes. Was showing wm: Metacity (Marco) that is not correct, 
now shows marco, which then allows to get version too. 

6. -Sxxx now shows wm: version as well, which can be of use now and then.

7. --wm added to trip force using of ps data for wm, this can be useful because 
I don't know all variants of wmctrl output, so that makes it easier to test.

8. Added finally support for --debug 3, which now shows timers, functions, and 
args printed to screen.

9. Added qmake --version to fallback qt detection. 

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 08 Jul 2018 15:57:58 -0700

================================================================================
Version: 3.0.15
Patch: 00
Date: 2018-07-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Big bug fix, new features.

--------------------------------------------------------------------------------
BUGS:

1. Finally tracked down and solved the Xorg drivers bug which was caused by Xorg 
checking its list of defaults 2 times, not 1, which resulted in failed status on 
second try since it was already loaded. Secondary bug was found that resulted in 
failing to show the failed, and only showing unloaded, which was also wrong. 
This finally fixes issue #134 item 5. Thanks Mint users for the help on that 
one.

2. Small bug in Openbox version detection, typo.

3. fixed a small glitch in the dm: detection that on systems where /var/run 
exists but is not linked to /run, the dm would fail to get detected.

--------------------------------------------------------------------------------
FIXES:

1. Xfce when defaulting to no version found goes to 4, this is a bad idea, it's 
better to not show any version, since xfce could one day be 5.

2. Fixed Blackbox fallback detection, there were cases where Blackbox not found 
in xprop -root, now it falls back to ps aux detection.

3. For wm: tested all known variants, added support for things like Mutter 
(Marco) syntax. Note that bunsenlab uses XDG_CURRENT_DESKTOP=XFCE to work around 
some glitches, but it's actually Openbox. If run as root, it will show openbox 
correctly, otherwise -Sxxx will show wm: openbox, but that's due to bunsenlabs 
choices there.

4. Rewrote a lot of DistroData to handle more dynamic testing of values, it's 
sad that at almost 2020 we are still stumbling around trying to find a 
consistent way to identify distros, and derived distros.

5. Added more debugger data collectors in the logging, some data was not being 
tracked well during log process which made debugging harder.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New feature, -Gxx now shows for Xorg drivers alternate: which are drivers 
that Xorg auto checks but which are not installed. Those were ignored in the 
past. This can be useful to see for example that there are other driver install 
options available. Thanks gm10 for that suggestion.

2. Tested and added the following explicit handlers for Distros: and base: in 
some cases: grml, peppermint, kali, siduction, aptosid, arco, manjaro, chakra, 
antergos, bunsenlabs, and a few others. These are a pain to add and test, 
basically I have to boot a live cd of each one, then test the files and ID 
methods, but the ID methods must also be as dynamic as possible because you 
never know when a distro is going to change how they use os-release vs issue vs 
lsb-release vs <name>-release. I would have tested a few more but their livecds 
failed to properly run on vbox.

3. Added a few more disk vendor IDs.

4. Added some more programs to debugger data collector for future feature vdpau, 
but that needs more data because we don't really know the variants for example 
for dual card systems.

5. Man page: changed extra options to use only one option name per list of 
options for that feature, each separate item is started as a new paragraph with 
- This makes it a bit more consistent and maybe slightly easier to read the man. 
Added -Gxx item, updated -Sx item.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 03 Jul 2018 14:13:32 -0700

================================================================================
Version: 3.0.14
Patch: 00
Date: 2018-06-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Tiny bug fix, Ubuntu based distros only.

The 3.0.13 system base feature had a small bug in the logic that was supposed to 
get the version id from codename, the bug made it never work. This is only 
relevant for Ubuntu based distros, so if you are on some other base like Debian 
or Arch, you can ignore this one, 3.0.13 will work fine.

No other changes, this was mainly for Mint, and other Ubuntu derived distros in 
the future.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Jun 2018 16:50:30 -0700

================================================================================
Version: 3.0.13
Patch: 00
Date: 2018-06-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. New features and fixes!

--------------------------------------------------------------------------------
BUGS:

1. -I line, sometimes running in showed sudo. This is hopefully now corrected.

--------------------------------------------------------------------------------
FIXES:

1. CPU architectures, small reordering based on hopefully more reliable data 
source, but these are hard to find conclusively.

2. -S Distro id: switched ordering of prefered os-release sources, PRETTY_NAME 
is not being used consistently, too many distros leave out the distro id found 
in VERSION, so now it uses NAME + VERSION if both are there, then PRETTY_NAME as 
a fallback. That reverses how it was, but it will provide better results for 
most distros. Distros that did this properly to begin with should see no change.

3. Now that inxi is basically debugged and working, I've removed the output of 
'inxi' from the -t lines. It remains for the pinxi branch however so you can see 
how many resources pinxi uses to run.

4. ipmi sensors data are proving to be as random as lm-sensors. Added another 
alternate syntax for sensors.

5. CPU: found an alternate syntax, again, for IPMI and sensors data, added 
support, I hope, for that.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added /proc debugger tool to debugger. Due to oddities with how the /proc 
file system is created, it will only run as user, not root, unless the --proc 
flag is used. More programs added to debugger commands.

2. More disk vendor strings added, fine tuning of vendor detections. There is a 
tendency in NVMe disk names to put the vendor name in the middle of the string. 
That is now handled for a few key vendors.

3. Added basic ARM SOC and server support. This will require more work in the 
future because the syntax used varies significantly device to device, but the 
featuers are now in place to add that support. Most SBC ARM devices should now 
at least show the model and details data in machine data, and some will show -G 
-A -N data as well.

4. ARM CPU: added first attempt to show the cpu variant as well as the more 
generic ARM data. This shows 1 or more variants, some ARM devices have two 
different cpu cores running at different speeds. Odroid for example.

5. Added system 'base:' data for -Sx, that modifies Distro: in supported cases. 
Currently only Mint and MX/AntiX supported because each specific distro must be 
handled explicitly using empirical file based data tests. I decided against 
showing this for rolling release, since really everyone knows that Antergos is 
made from Arch Linux, so showing that does not provide much useful information, 
whereas showing the Ubuntu version Mint was made from does.

Note that several derived distros are changing how they use os-release, so the 
tools had to be revised to be more dynamic, which is a pain, and makes it even 
more empirical and less predictable to print what should be trivially easy to 
gather distro and derived source data.

If your distro is not in this list and you want the base data to be present, 
please supply a --debug 22 dataset so I can check all the files required to make 
the detection work. If your distro has changed methods, please note which 
methods were used in the past, and which are used now.

6. Added Armbian distro detection, that's tricky. Added Rasbpian detections. 
Added improved Antergos, Arco, and maybe Chakra, Arch detections.

7. Big one: Hardware RAID basic support added. Note that each vendor, and 
unfortunatley, often each product line, has its own raid status and drive 
reporting tools, which makes adding the actual drive/raid/status report part 
very time consuming to add. I may only support this if a certain software 
maker's raid tools are installed because they are much simpler to parse, but for 
now, it only shows the presence of the raid device itself, not disks, raid 
status, etc.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 23 Jun 2018 10:24:30 -0700

================================================================================
Version: 3.0.12
Patch: 00
Date: 2018-06-05
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version

--------------------------------------------------------------------------------
BUGS:

1. debugger when run as root hangs on proc traverse.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 05 Jun 2018 01:18:18 -0700

================================================================================
Version: 3.0.11
Patch: 00
Date: 2018-06-04
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page.  Features, bugs, fixes!

--------------------------------------------------------------------------------
BUGS:

1. Color selector accepted '' as a value, which it would then write to config 
file, creating errors since it's not an integer value. 

2. Corrected distro id error for last fallback case, making the distro ID out of 
the filename itself, that was missing the assignment to $distro.

3. mmcblk0 was showing up as an unmounted partition, due to failing to filter 
mmcblk[0-9] in unmounted. 

--------------------------------------------------------------------------------
FIXES:

1. Added missing compositor kwin_wayland to compositor detections

2. For -M, on laptops, sometimes Type: would duplicate in Chassis: type: which 
looks silly, so now it checks to make sure the two values are different before 
using the Chassis: type: data.

3. -D disk vendor, added GALAX, fixed Toshiba, which sometimes occurs other than 
start of disk id string, so now it checks the whole string. This seems 
particularly common in nvme devices from Toshiba. This is the only vendor I have 
found that puts the vendor string later in the device id string.

4. Added protection against unreadable but present /etc/issue. This was caused 
by a now fixed bug in OpenSuSe, which symbolically linked to create /etc/issue 
from /var/run/issue, but with 600 permissions, root read only, that is. Note 
that this bug has since been fixed (now has the correct 644 permissions), but I 
figured better safe than sorry in case anyone else decides that's a good idea in 
the future. Now only sends to reader if readable. 

5. Related to 4, made reader not exit on failure, now just prints error message 
and keeps going.

6. Upped maximum distro string length to 60, from 50. AntiX for example was 
coming in at 48, so I decided to add some safe room now that inxi does dynamic 
sizing, it is not a big problem having very long distro id strings.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added basic /proc data parser to debugger. Can't get all the data or files 
because it's simply too big, but grabs the basics.

2. Added vcgencmd for some ARM rasberry pi debugging.

3. ARM: add model if not found in /proc/cpuinfo, or if different. 

4. Added Tdie cpu sensor type, this is coming soon in latest kernels, so 
catching it early. Tdie will replace k10-temp sensor item temp1.

5. Added --admin extra data option, and first set of extra data, -C, which will 
show CPU Errata (bugs), family, model-id, stepping (as hex (decimal) or hex if 
less than or equal to 9), microcode (as hex). 

6. Battery: added with -x option, if found, attached battery driven devices, 
like wifi keyboard, mouse. If upower is present, will also try to show battery 
charge percent for those devices. Note that -B only shows the Device-X items if 
-x is used, and will not show anything in -F unless there is a system, not 
device, battery present, or if -Fx is used and there is a Device battery 
detected. Added upower to recommends.

7. Basic -Dxxx disk rotation speeds added. Requires udevadm. Not all spinning 
disks show rotation speeds, and it depends on udevadm, so if no rotation found, 
it shows nothing.

8. Added explicit Arco Linux and Antergos distro ID support. This requires more 
checks, but in theory, both should now show Arco Linux or Antergos instead of 
default 'Arch Linux' as before, plus extra data if found, like version.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 04 Jun 2018 16:48:53 -0700

================================================================================
Version: 3.0.10
Patch: 00
Date: 2018-05-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page.

This version is very peaceful, no big changes, just a few fixes and small new 
features added. 

This version corrects a few small glitches reported by users, and adds basic 
support for disk speed report. Note that this is not as accurate as I'd like, it 
tries, but there is not a lot of data to be had. Limits of disk speed seems to 
be, roughly:

1. most speed is reported as max board can do, not max drive can support
2. usually when speed is reported as lower than max board speed, it's correct, 
but, as usual, exceptions to this were found during testing.
3. usually if drive is faster than board speed, it reports board speed, but, 
again, exceptions to this rule were found during testing.

However, with this said, it's usually more or less right, at least right in 
terms of the fastest speed you can expect to get with your board. NVMe was also 
supported, that's much more complicated because NVMe has >= 1 lane, and each 
lane has up and down data. The reported speed is max in one direction, and is a 
function of the PCIe 1,2 20% overhead, and PCIe 3,4,5 ~1.5% overhead. inxi shows 
the actual usable data rate, not the GT/s rate, which is the total transfers per 
second the unit supports. 

So due to the unreliable nature of the data, this is only a -xx option. There is 
also in general no data for USB, and none for mmcblk (sd cards usually).

This feature may be enhanced with a C Perl XS library in the future, we'll see 
how that goes.

--------------------------------------------------------------------------------
FIXES:

1. corrected an issue where a networking card of type Bridge failed to be 
detected. This is now handled. This was a PCI type I'd never seen before, but it 
exists, and a user had it, so now it will work as expected for this type.

2. changed the default units in weather to be m (metric) imperial (i). While 
this is not very intuitive for me, it's easier to explain I think. The previous 
c / f syntax is supported internally, and inxi will just translate c to m and f 
to i, so it doesn't matter which is or was used on a config file or with the 
--weather-unit option.

3. BSD uptime had a parsing glitch, there was a spelling variant I'd never seen 
in GNU/Linux that broke the regex. This is corrected now.

4. Fixed a few small man page glitches, some ordering stuff, nothing major.

5. Fixed BSD hostname issues. There was a case where a setup could have no 
hostname, inxi did not handle that correctly. This fix would have applied to 
gnu/linux as well.

6. Fixed a few BSD, openBSD mostly, dm detections, there is a secondary path in 
OpenBSD that was not checked. This also went along with refactoring the dm logic 
to be much more efficient and optimized.

7. Fine tuned dmidecode error message.

8. Fixed PCI ID issue, it was failing to catch a certain bridged network type.

9. A more global fix for unhandled tmpfs types, in this case, shm, but added a 
global test that will handle all tmpfs from now on, and exclude that data from 
-p reports.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. First attempt to add basic disk speed (Gb/s). Supported types: ATA, NVMe. No 
speed data so far handled or found: mmcblk; USB. Also possibly older /dev/hda 
type devices (IDE bus) may not get handled in all cases. This may get more work 
in the future, but that's a long ways off. This case oddly was one where BSDs 
had support for basic disk speed reports before GNU/Linux, but that was really 
just because it was part of a single data line that inxi parsed for disk data 
anyway with BSDs.

2. Man items added for -Dxx disk speed options.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 21 May 2018 14:25:53 -0700

================================================================================
Version: 3.0.09
Patch: 00
Date: 2018-05-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Bug fixes, feature updates.

The main reason to release this earlier than I had hoped was because of the /sys 
permission change for serial/uuid file data. The earlier we can get this fix 
out, the better for end users, otherwise they will think they have no serial 
data when they really do. 

--------------------------------------------------------------------------------
BUGS:

1. A weather bug could result in odd or wrong data showing in weather output, 
this was due to a mistake in how the weather data was assembled internally. This 
error could lead to large datastore files, and odd output that is not all 
correct.

2. More of an enhancement, but due to the way 'v' is used in version numbers, 
the program_version tool in some cases could have sliced out a 'v' in the wrong 
place in the version string, and also could have sliced out legitimate v values.

This v issue also appeared in bios version, so now the new rule for 
program_version and certain other version results is to trim off starting v if 
and only if it is followed by a number. 

--------------------------------------------------------------------------------
FIXES:

1. this bug just came to my attention, apparently the (I assume) kernel people 
decided for us that we don't need to see our serial numbers in /sys unless we 
are root. This is an unfortunate but sadly predictable event. To work around 
this recent change (somewhere between 4.14 and 4.15 as far as I can tell), inxi 
-M and -B now check for root read-only and show <root required> if the file 
exists but is not user readable. I wish, I really wish, that people could stop 
changing stuff for no good reason, but that's out of my control, all I can do is 
adjust inxi to this reality. But shame on whoever decided that was a good idea.

This is not technically an inxi bug, but rather a regression, since it's caused 
by a change in /sys permissions, but users would see it as a bug so I consider 
this an important fix.

Note that the new /sys/class/dmi/id permissions result in various possible 
things:
1. serial/uuid file is empty but exists and is not readable by user 
2. serial/uuid file is not empty and exists and is not readable by user
3. serial/uuid file does not exist
4. serial/uuid file exists, is not empty, and is readable by root

Does this change make your life better? It doesn't make mine better, it makes it 
worse. Consider filing a bug report against whoever allowed this regression is 
my suggestion. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added in OpenBSD support for showing machine data without having to use 
dmidecode. This is a combination of systcl -a and dmesg.boot data, not very good 
quality data sources, but it is available as user, and it does work. Note that 
BIOS systems are the only ones tested, I don't know what the syntax for UEFI is 
for the field names and strings. Coming soon is Battery and Sensors data, from 
the same sources.

Sadly as far as I know, OpenBSD is the only BSD that has such nice, usable 
(well, ok, dmesg.boot data is low quality strings, not really machine safe) 
data. I have no new datasets from the other BSDs so I don't know if they have 
decided to copy/emulate this method.

2. By request, and this was listed in issue #134, item no. 1, added in weather 
switchable metric/imperial output. Also added an option, --weather-unit and 
configuration item: WEATHER_UNIT with possible values: cf|fc|c|f. The 2nd of two 
in cf/fc goes in () in the output. Note that windspeed is m/s or km/h as metric, 
inxi shows m/s as default for metric and (km/h as secondary). Also fixed -w 
observation date to use local time formatting. That does not work in -W so it 
shows the default value.

3. Updated man to show new WEATHER_UNIT config option, and new --weather-unit 
option. Also fixed some other small man glitches that I had missed.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 11 May 2018 13:29:06 -0700

================================================================================
Version: 3.0.08
Patch: 00
Date: 2018-05-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. New features, bug fixes.

This is a big one.

--------------------------------------------------------------------------------
BUGS:

1. CRITICAL: /sys/block/xxx/device/model is in some cases truncating the disk 
model name to 16 characters. This is not an inxi bug, it's a bug with /sys 
itself.

To fix this, inxi now uses for GNU/Linux /dev/disk/by-id data which does not 
ever do this truncation. It's also faster I believe to read that directory once, 
filter the results, then use the data for vendor/model/serial.

this was also part of the disk vendor data feature.

2. OpenBSD networking fix. Was not showing IF data, now it does.

3. Fixed bug with unmounted where sometimes md0 type partitions would show even 
though they are in a raid array.

4. Fixed disk rev, now it searches for 3 different files in /sys to get that 
data.

5. Fixed bug with very old systems, with sudo 1.6 or older, for some reason that 
error did not get redirected to /dev/null, so now only using sudo -n after 
explicit version test, only if 1.7 or newer.

6. Fixed a few null results in fringe cases for graphics. Resolution now shows 
NA for Hz if no hz data found. This was only present on a fringe user case which 
is unlikely to ever impact normal X installations.

7. Fixed BSD L2 cache, was showing MiB instead of KiB, wrong math.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. By Request: Disk vendor is now generally going to be shown. Since this uses 
empirical data to grab the vendor name, from the model string, it will not 
always find anything. When it fails to find vendor data, no vendor: item will 
show.

Note that some MMC devices will probably not show vendor data, but that's due to 
there being no data that reveals that.

2. Extended -sx volts to also show voltage from lm-sensors if present. Many 
systems show no voltage data with lm-sensors, but now if any is found, it will 
show, same as impi.

3. Moved to lsblk as primary source for partition/unmounted filesystem, uuid, 
and label data.

Falls back to previous methods if lsblk does not return data. Some lsblk do not 
show complete data unless super user as well.

4. Refactored code to be more logical and clear. 

5. Added for OpenBSD -r: /etc/installurl file.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 06 May 2018 20:23:30 -0700

================================================================================
Version: 3.0.07
Patch: 00
Date: 2018-04-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Bug fixes. BSD fixes.

--------------------------------------------------------------------------------
BUGS:

1. CPU: MT/HT was wrong for old xeon, made mt detection more robust and 
hopefully more reliable, removed all explicit b_xeon based tests.

--------------------------------------------------------------------------------
FIXES:

1. fixed /dev/mapper glitch, that make /dev/mapper links fail to get id'ed.

2. openBSD: fixed memory handler; fixed cpu flags, fixed partitions handling.

3. freeBSD: fixed similar partition bugs, these were caused by the darwin patch.

4. man page: fixed top synopis syntax, thanks ESR. 

5. partitions fs: fixed possible failures with lsblk fs. lsblk: added debuggers 
so we can track down this failure in the future. 

6. added sshfs filter for disk used output, note, there is a possible syntax for 
remote fs that isn't handled: AAA:BBB that is, no :/, only the :. This makes 
explicit detection of still unknown remote fs very difficult since : is a legal 
nix filename character.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 18 Apr 2018 19:29:02 -0700

================================================================================
Version: 3.0.06
Patch: 00
Date: 2018-04-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. 2 bug fixes.

--------------------------------------------------------------------------------
FIXES:

1. -xtm was showing memory %, not cpu % in cpu item

2. -G compat-v was showing for nvidia, it's not supposed to, and was also wrong 
for nvidia, they forgot to update one of their gl string numbers.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 17 Apr 2018 16:52:05 -0700

================================================================================
Version: 3.0.05
Patch: 00
Date: 2018-04-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Small new enhancements. 

--------------------------------------------------------------------------------
FIXES:

1. basic apple osx fixes to keep it from crashing, but I'm not spending any more 
time on apple junk unless someone pays me for my time, I can't stand the product 
or company, it's the total antitheses of freedom or free software, or even 
openness.

2. openBSD/BSD FIXES: openBSD was failing to get cpu flags due to a small 
oversight 

3. -C now shows bits: for the true bits of cpu, not the kernel bits. This is not 
a reliable measurement but should be right about 95+ percent of the time, and 
basically all of the time for GNU/Linux on Intel/AMD, most of the time for ARM. 
When it doesn't know it does not guess, and shows N/A.

4. BSD fix for usb, was running numeric action on string value

5. fixed stderr tool for program_version, now it's hard-coded in program_values 
which removes an unneeded regex search for every program version test.

6. Mate detection, switched to using mate-sesssion instead of mate-about, the 
latter is not getting updated and has the wrong version number on it.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added to -s for ipmi, with -x: voltage 12v,5v,3.3v,vbat; for -xx, dimm/soc 
p1/p2 voltages

2. enhanced wm: feature, needed more filters and protection against redundant 
data 

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 17 Apr 2018 13:17:14 -0700

================================================================================
Version: 3.0.04
Patch: 00
Date: 2018-04-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Fixes several issues.

--------------------------------------------------------------------------------
FIXES:

1. issue #145 - corrects case with vm xeon where phys id skips numbers, creating 
bad array looping error.

2. for issue #143, added user PATH to static list of paths, this works around 
distros that have chosen to abandon the FSH standard, sigh... This adds to 
number of paths that have to be checked, but there was no clean way to handle it 
otherwise.

3. For MATE, added new version source, mate-session, because mate-about was 
reporting a non-matching version number for current MATE.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 14 Apr 2018 17:52:33 -0700

================================================================================
Version: 3.0.03
Patch: 00
Date: 2018-04-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------
New version. NBD network block device fixes 

--------------------------------------------------------------------------------
BUGS:

1. inxi did not have support for network block devices /dev/nbd0 type syntax in 
disks.

2. this caused a slight failure in lsblk output, so I switched to using lsblk -P 
to force paired key values, which are then put into an array of hashes.

These both appeared on an ARM server system, but surprisingly, there were no ARM 
specific issues at all on that system.

Both issues/enhancements tested and working fine.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 12 Apr 2018 19:22:27 -0700

================================================================================
Version: 3.0.02
Patch: 00
Date: 2018-04-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man.

Rolls up a few changes from the latest features:

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. For -Dxxx, if root, will use fdisk to try to find partition table scheme 
(mbr/gpt)

2. For Display: <protocol> server: will try to use loginctl if out of X and 
using --display flag to force display data and not root.

This completes more or less the very last minute features added pre 3.0.0 
version.

I wanted to get these in because the features were not super useful since they 
only worked on a few systems, particulary the scheme: 

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 12 Apr 2018 15:26:00 -0700

================================================================================
Version: 3.0.01
Patch: 00
Date: 2018-04-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Fine tunings.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. for a very few systems that have wmctrl installed, shows with  -xxxS, wm if 
present 

2. an attempt to get display protocol from out of X, using --display and 
loginctl

3. made xorg display server and protocols show more consistently with other 
layout:
Display: x11 server: X.org 1.9.12 drivers: loaded: ...

if no display protocol found: 
Display: server: X.org 1.9.12 drivers: loaded: ...

This brings the -G in line with the other lines, of not putting different data 
types inside of parentheses as much as possible. -I still has two of these, but 
so far it's not clear how to otherwise show SSH or su/sudo/login in their 
respective spaces.

Debugger data collector also has something I should have added ages ago, gz 
filename now includes the basic 2 digit inxi version number, like 3.0 at end, so 
I can readily determine the debugger inxi version, and thus avoid having to root 
through lots of versions to find new stuff.

These are all largely cosmetic improvements, or debugger adjustments, except for 
-Sxxx now offering wm: if present.

Also changed Desktop: name... (toolkit data) to: Desktop: name... tk: toolkit 
data to be more consistent, while not adding great length to the output.

These two changes should also help export to json/xml since that puts unique 
key/values back into key value pairs, not merging two together.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 12 Apr 2018 13:17:26 -0700

================================================================================
Version: 3.0.00
Patch: 00
Date: 2018-04-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Beta / 2.9 testing completed.

inxi 3.0 is now ready for prime time. No substantial issues have been found over 
the past week. All outstanding issues and bugs have been corrected. The man page 
and help page have been edited fairly heavily to improve usability and 
readablity.

All work and development and support for inxi 2.3.56 is ended. No issues for 
2.3.56 will be accepted since there is no way to support that version, it being 
in a different set of languages (Gawk/Bash) than inxi 2.9/3.0 (Perl 5). So the 
sooner you move your distro package pool to new inxi, the sooner your users can 
get support for any issues with current inxi.

Beta and 2.9 prerelease testing is completed, and has resulted in a much better 
inxi than I could have hoped for.

There are so many new features and enhancements in the new inxi that it's hard 
to list them all. See previous commits for a more in depth record.

Anyway, the changelog will show better all the new features etc, I can't 
remember them all.

All current issues and glitches have been fixed, any remaining are simply new 
issues, just as they would be in old inxi.

Note that in the second and third weeks of beta testing a significant number of 
bugs that are in inxi 2.3.56 were fixed. 2.3.56 has been moth-balled into the 
inxi-legacy branch as binxi, to avoid mixing it up with inxi. The development 
branch is now permanently inxi-perl, aka, pinxi, since that worked so well for 
beta and pre-3.0 2.9 testing and development.

This ends the pinxi/inxi development stage. All future development will proceed 
using the inxi-perl branch, and will be the same in terms of new features as pre 
inxi 2.9 was, they will be added, enhanced, as seems appropriate. 

Remember, inxi is a rolling release program, like Arch Linux, Gentoo, Debian 
Testing/Sid, and has no frozen release points, so this is simply the beginning 
of the 3.0 line of Perl inxi.

Thanks to everyone who contributed time, energy, effort, ideas, testing, 
debugging, patience - inxi would not work without you. 

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. New options: --slots (PCI Slots); --usb 

2. Exports to json/xml with --output options

3. Every line has been enhanced, with tighter output control, better key / value 
pairings, more accurate values.

4. Line wrapping is now fully dynamic, which means inxi works down to 80 columns 
and should basically never wrap (except for very long repo lines, but that's not 
really fixable).

5. More controls, more user configuration options (see man page).

6. So many small new features that it's hard to list them all. Shows SSH in -I 
if SSH. Shows sudo/su/login in -I if relevant and detectable. Shows disk 
partioning scheme in some cases (more coming). Removes color codes if piped or 
redirected to file. 

7. All sizes are now shown in standardized KiB/MiB/GiB/TiB/PiB format, to avoid 
ambiguity about whether M or MB or MiB is meant. All internal size math is done 
using KiB, which further avoids confusion and error. Note that many disk makers 
like using MB or GB instead of MiB or GiB because it makes their disks seem 
'bigger'.

8. Sensors -s now supports IPMI sensors, in tandem with lm-sensors.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 09 Apr 2018 01:01:03 -0700

================================================================================
Version: 2.9.12
Patch: 00
Date: 2018-04-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. Finished up main man edits. Set new defaults for some 
options, like --sleep and -t.

Edits to layout and language, removed some legacy options and language from man 
and inxi.

Added partition table detections, rough initial stage. Only works on systems 
with udev present currently, will be expanded as we find fast tools. Since the 
systemd method is literally up to 25x slower than the udev method, it's not 
being considered except maybe as a last, last resort, and probably will never be 
used.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 06 Apr 2018 15:49:02 -0700

================================================================================
Version: 2.9.11
Patch: 00
Date: 2018-04-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Completed man edits.

Many small bugs fixed.

--------------------------------------------------------------------------------
ENHANCEMENTS: 

1. in some cases, will detect partition table type (GTP,MBR) either 
with or without root. Uses fast method, which is not available on all systems.

2. Added IPMI sensors tools ipmitool and ipmi-sensors to -s for systems that 
use IPMI.

3. Finished man page edits and corrections. Thanks Pete.

4. Added doubled word filter for main -NGA lines, only for Card items.

5. Gave more granular uptime output: like: uptime: 23d 5h 34m

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 03 Apr 2018 23:34:56 -0700

================================================================================
Version: 2.9.10
Patch: 00
Date: 2018-03-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page. Major man page edits. Bug fixes.

--------------------------------------------------------------------------------
BUGS:

1. RAID - both mdraid and zfs bugs corrected. Issue #135

2. EPYC cpu wrong die count corrected, and also added support for the EPYC type.
   Issue #135
   
3. Possible ARM data glitch that made reader fail on a non-existent file.

--------------------------------------------------------------------------------
DOCUMENTATION:

Ongoing updates and edits and corrections and cleanup of man page. Slowly but 
surely.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 30 Mar 2018 20:07:40 -0700

================================================================================
Version: 2.9.09
Patch: 00
Date: 2018-03-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Bug fixes, new features, enhancements 

--------------------------------------------------------------------------------
BUGS:

1. Bug: cause unknown, but crashes on null file sent to reader, but all those 
files have been checked. For now added return if file null.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Features: with -Ixxx: show Shell: csh (sudo|su|login) status; show 
running in: xfce-terminal (SSH) 
ssh session active on remote system.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Various help and man cleanups and additions.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 28 Mar 2018 20:48:22 -0700

================================================================================
Version: 2.9.08
Patch: 00
Date: 2018-03-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. Bug fixes, feature/output tweaks.

--------------------------------------------------------------------------------
BUGS:

1. stray undefined value corrected 

2. fixed BSD no pkg server case, now shows correctly that no pkg server files 
were found, not that the OS is not supported.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. -t c and m headers cleaned up and simplified

2. man page edits. 

3. more standarization of key names for fields, some spelling and upper/lower 
case corrections.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 26 Mar 2018 14:59:11 -0700

================================================================================
Version: 2.9.07
Patch: 00
Date: 2018-03-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Bug fixes, feature tweaks.

--------------------------------------------------------------------------------
BUGS:

1. json/xml outputter had a bug in it that made it validate path wrong.

2. -G -xx option: compositor: for gnome-shell had a bug that would make it show 
as running when it wasn't, other strings were tripping the match on systems with 
gnome-shell installed but not running, 

3. Finally fixed bug with manjaro full version distro string, and tweaked output 
to show Manjaro Linux instead of given string.

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. --no-man - this lets users turn off man installs. Only really useful for -U 
from master, since default is off for pinxi and dev 3 branch.

Man page/help updated to add this option.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 25 Mar 2018 18:34:54 -0700

================================================================================
Version: 2.9.06
Patch: 0
Date: 2018-03-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Very new man.

Special thanks to Manjaro for being as far as I know the first to package Perl 
inxi.

Or was AntiX first? Well, it was close, thanks to both.

--------------------------------------------------------------------------------
BUGS:

1. removed a few stray debuggers that were creating debugging output 

2. fixed a usb driver bug that would create warning messages from Perl (thanks 
Manjaro for finding that one)

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. Added: --indent-min - goes with the user configuration option: INDENT_MIN and 
allows users to experiment with different indent settings. This is what trips 
the auto line wrap of line starters. This may be revisited, and this switch will 
make it easier for users to see for themselves which they prefer, what trip 
point, etc.

This will help determine pre 3.0.0 what the default auto wrap trip point, if 
any, will be.

Added more data to debugger tool, more lsblk, which is going to need a lot more 
data to solve a new issue with dm/encrypt/lvm, initial $MANPAGE data, to see if 
anyone actually ever uses that environmental variable.

--------------------------------------------------------------------------------
DOCUMENTATION:

1. Man features new section, configuration options, which lists the main config 
options users would be likely to use. 

This should help users who will never check the actual documentation web page 
realize that there are many internal configuration options available.

2. Many edits in man, more to come I suspect.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 24 Mar 2018 18:06:33 -0700

================================================================================
Version: 2.9.05
Patch: 00
Date: 2018-03-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Options changes 

To get rid of some non-intuitive options, I've changed some of the --alt values 
to more obvious argument names; --dmidecode --no-ssl --no-host --host

This makes them easier to remember, hopefully. 

Updated help, man pages to cover this change as well.

Added some more lsblk debugger output to try to start building enough 
information to really figure out dm/encrypted/lvm and how those are actually 
handled internally in the system in terms of partitions, filesystems, etc.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 24 Mar 2018 02:08:42 -0700

================================================================================
Version: 2.9.04
Patch: 00
Date: 2018-03-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man. Big update

--------------------------------------------------------------------------------
ENHANCEMENTS:

1. now does not require root or 'file' to get unmounted fs type. Also, for many 
mounted partitions, rather than showing the meaningless fuseblock it will 
usually get the filesystem right.

2. -U now works with optional --man option to download man page for pinxi and -U 
3 dev server updates. This gets around the fact I had to remove the gz files 
from master to get the size small enough to make maintainers happy. Non branch 
inxi master works as before, updates both from github or from dev server, 
depending on your selection.

So now inxi and pinxi will grab the inxi.1 or pinxi.1 man file and install it on 
systems that do not have -U blocked. The -U block of course remains the same.

3. Thanks very much to the people who have been contributing in a positve way, 
helping to make inxi better. The untold number of small and large new features, 
small glitches, etc, that have been fixed this week are simply too many too 
list. Many to most were inxi bugs or weaknesses, now corrected.

4. binxi branch has now been made fully operational, though I do not plan on 
doing any work beyond the mothballing of that venerable program (gawk->bash 
inxi), it's fully operational, it updates, it gets its man page, but all as 
binxi, so you can, as with pinxi, run all of them separately. This officially 
terminates my support for Gawk/Bash inxi, which can be found as binxi in the 
inxi-legacy branch.

5. pinxi has been promoted to permanent development branch, where bug fixes, new 
features, etc, will be tested, along with man page updates etc. This will help 
reduce the number of commits to master branch.

6. Audio / Network usb cards now show the true driver(s). There are often more 
than one for audio, that's a nice enancement.

7. inxi outputs to json / xml, which will probably interest some developers 
eventually, well it already did, that was going to wait, but someone wanted it.

8. Apt repo handler now supports DEB822 format, which is not an easy format to 
parse.

================================================================================

MAINTAINERS:

Note the following: despite my strong dislike for tags, every commit that 
touches either inxi or inxi.1 man page will be tagged if I think they would be 
something relevant to distro packagers. While github insists on calling my tags 
releases, I want to be crystal clear: inxi has one and only one 'release', the 
current master branch version. The tagged commits that github calls releases are 
NOT releases, they are just tagged commits. The version I release tomorrow will 
be the current master, and all previous versions will be obsolete and will not 
be supported.

The .gz files have been removed from the master branch history, thus shrinking 
it a lot. I have removed for this reason the master-plain branch, which mirrored 
master and provided a gz free branch, but apparently this was simply ignored so 
there's no reason to keep it going. If you insist on grabbing all the branches 
and find more data in there, then please correct your practices, you are only 
getting the data from the master branch.

inxi is rolling release software and has no releases, so the tags are supposed 
to create some illusion that a tag actually means something. Since it doesn't, I 
decided to take the path of least resistance and just add an auto tagging tool 
to my commit scripts and use it when it seems appropriate, like on this commit.

All development work now will happen via the pinxi branch, so that makes the 
process a lot cleaner, since I can now basically beta test all new commmits to 
master. pinxi and binxi are both standalone versions of inxi, they have their 
own config and data directories, config files, man pages, etc.

--------------------------------------------------------------------------------

New Perl inxi is already way ahead of Gawk/Bash inxi, more features, more 
accurate, and most bugs being fixed now are because a lot of people are 
contributing eyes and testing, and are finding stuff that was wrong, or simply 
missing, on old inxi as well as on Perl inxi. Fixes to Perl inxi (>2.9) will not 
be rolled into to binxi since the entire reason I spent over 4 months on this 
project was to never have to touch Gawk/Bash inxi again.

Most imporant, however, is that the simple fact was, Gawk/Bash inxi has been 
nearly impossible to work on despite my following rigorous practices in coding, 
and I simply won't work with that type of stuff anymore. Perl 5.x is a true 
delight in comparison, and makes adding new features, enhancing others, far 
easier, or even possible, where it wasn't before.

On a technical level, I have tested Perl inxi heavily, and it will run on all 
Perl 5.x versions back to 5.008, which is the cutoff point. This was not that 
hard to do, which is why I picked Perl 5.x as the language. This means that you 
can drop, just as with binxi, Perl inxi onto a 10 year old system, or older, and 
it will run fine, albeit a touch slowly, but much faster than binxi.

--------------------------------------------------------------------------------

So far users are really liking the new one, it's usually faster in most cases, 
the output is cleaner, there's more data, more options, and basically it's 
gotten the thumbs up from all the testers, and there have been a LOT, who have 
helped. I want to give a special thanks to the following distros for their 
exceptional support and testing:

0. the people who hang out on irc.oftc.net #smxi. Very patient, will test things 
with astounding patience, so thanks to them. Archerseven, iotaka and KittyKatt 
have been been incredibly helpful when it comes to testing and debugging, and 
finding corner cases that I would never have found.

1. AntiX: they were the first to beta test pinxi, and found massive numbers of 
bugs, and stuck with the testing for a long time. They made testing possible for 
the next wave of testers, my hats off to them, I've always liked them.

2. Manjaro also was very helpful, and found more issues and enhancements.

3. Ubuntu forums users found more, and helped enhance many features

4. Mint users have been very helpful, and were the impetus for some nifty new 
features, ilke switching all color codes off when output is piped or sent to 
file. They have reminded me of how valuable people's views can be who may not 
share the same tech world view as you, but are still very talented and observant 
individuals.

5. Slackware users provided some very thoughtful feedback, which was no surprise 
but welcome nonetheless, thanks. 

6. Same with Debian forums, again, some very useful and constructive ideas and 
observations, and some very arcane and odd hardware that exposed even more 
corner case bugs.

And several other distros were also helpful, each in their own way. Solus for 
example now has their package manager added in repos.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 22 Mar 2018 22:18:24 -0700

================================================================================
Version: 2.9.03
Patch: 00
Date: 2018-03-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. Updates:

1. added tool lsblk, recommends, for -p and -o, shows better partition data than 
df does. First choice for -p and -o, -p fall back df, -o fallback file.

2. fixed a big bug with user configs, that would make the configs break every 
time the color editor was used.

3. Some smaller bugs.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 21 Mar 2018 21:44:04 -0700


================================================================================
Version: 2.9.02
Patch: 00
Date: 2018-03-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

First small patch fix, corrected a few issues, one for apt deb822 output 
formatting, and a small bug for blank files there.

Second, made the --output error message more clear for bad file structure now 
lists the 3 requirements: must be full path, must be writeable directory, and 
must have a file in it. 

Third, another subtle thing, after a lot of research, am trying the MiB GiB 
format because it's technically more accurate and less ambiguous than GB, which 
is used either to refer to 1000 bite blocks OR to 1024 blocks, depending on the 
platform etc.

So rather than hope people get it, trying that slightly more wordy format, and 
maybe if people wonder what it is.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 20 Mar 2018 22:02:39 -0700

================================================================================
Version: 2.9.01
Patch: 00
Date: 2018-03-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New inxi, new man, new tarball.

It's here! Perl inxi, first official release. So many changes, really too many
to list.

But here's a few:
1. of course, full rewrite to Perl 5.x. Supports as old as 5.008, as new as 
current.

2. Better line length nandlers. Fully dynamic, robust, shrinks and expands to 
fit either taste or viewport.

3. Long options for all options now, plus of course the short options everyone 
is used to.

4. New options: --usb; --slots (pci slot report); --sleep (change cpu sleep 
time); and many more. Check --help or man page for details.

5. Vastly improved --recommends, now does per distro package recommends, and 
shows only Linux data to Linux systems, and BSD data to BSD systems.

6. Hugely improved debugger as well.

7. Far more accurate output, most output is now in key/value pairs, because:

8. inxi now exports to json and xml! See --output/--output-file for info.

9. Enhancedd repo output, added deb822 type, solus 

10. Radically enhanced network data, now shows all IP / IF devices connected to 
each nic, not just one, both IP v4 and v6. 

11. USB audio and network device actual drivers

12. better handling of compiler data.

13. Basic ARM machine data now, if present to inxi

14. Graphics: per card driver info alongside the original xorg drivers.

15. Better integration of partitions, RAID, unmounted partitions, and HDD data.

16. Better sensors handling of free video driver sensor data, well, not better, 
it's now there, along with fan speeds for gpus.

17. RAID is enhanced, and now can show > 1 RAID type on a system, and the RAID 
is improved.

18. Much improved disk/partition/memory sizing, inxi now always works internally 
with KB units, and changes them on output to the appropriate units.

19. Fully redone man page for all the new options and the long options.

And so much more. Anyway, here it is, the first release.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 20 Mar 2018 02:54:05 -0700

================================================================================
Version: 2.3.56
Patch: 00
Date: 2018-02-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Maintainer alert: Perl inxi 2.9.01 is looking good for maybe early week of 
2018-03-19 release. I'm putting the last issue requests on the last forums, so 
assuming no real further bugs found, expect Perl inxi 2.9.01 to hit around 
Monday or Tuesday. If any bugs are found, of course, those will be fixed before 
release of the new Perl inxi.

Basically, if you want to see if you can find bugs, this is the time to do it, 
not AFTER release. I've posted on many forums, and have given the various 
distros a chance to help squash the bugs their users might see, some have been 
fantastic (AntiX, you were the best by far), others, not so much. Their loss in 
the latter case since the purpose of beta testing is to find bugs before, not 
after, release.

If you want to see the differences in recommends, and dependencies, grab pinxi 
development branch here:
wget -O pinxi https://github.com/smxi/inxi/raw/inxi-perl/pinxi
or:
git clone https://github.com/smxi/inxi --branch inxi-perl --single-branch

and run: pinxi --recommends

The main thing I'd strongly urge all maintainers to add, for long term stability 
and speed and reliability, is dig, which can be used if present to get very 
fast, reliable, WAN IP information.

All of the other recommends are pretty much the same, for graphics, xdpyinfo, 
xrandr, and glxinfo. For networking, ip or ifconfig, along with dig. For all usb 
related identification, lsusb, unfortunately, I wish I could get rid of that 
tool, it's very slow, but I can't. The --recommends output shows the complete 
set.

Obviously, Bash and Gawk are no longer recommends, nor are the tools like grep, 
sed, tr, wc, etc, all those are done with Perl, so any shell plus Perl 5.08 or 
newer Perl 5.x is all that's really required, beyond normal system reporting 
tools like lspci etc.

For json/xml export, two Perl modules are needed, again, see --recommends

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 17 Mar 2018 16:44:07 -0700

================================================================================
Version: 2.3.56
Patch: 00
Date: 2018-02-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No real changes, this will probably be the very last Gawk->Bash inxi 2.3.x 
release.

Making sure tarball etc is up to date, so it can be stored in 'tarball's branch.

MAINTAINERS:
Pinxi 2.9.00-xxx-p (inxi-perl branch) is nearing completion of its beta test 
cycle, and, barring any new issues or bugs (TEST IT NOW AND REPORT ISSUES NOW!), 
I expect to release pinxi 2.9.00 as inxi 2.9.01 shortly after I complete the 
advanced RAID feature, which should be this week.

If no real issues appear during the following week after the inxi 2.9.0 release, 
it will be moved to inxi 3.0.0, as the first stable Perl inxi release.

There will be a new branch, inxi-legacy, that will have the Gawk->Bash inxi 
2.3..56 files for historical purposes only. No further work will be done on inxi 
2.3 from now on.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 13 Mar 2018 11:29:40 -0700

================================================================================
Version: 2.3.56
Patch: 00
Date: 2018-02-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small cleanup release, no new version. New tarball, just to make sure I have any
changes included, comments, etc.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 26 Feb 2018 14:48:44 -0800

================================================================================
Version: 2.3.56
Patch: 00
Date: 2018-01-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added an important debugger output, lsusb -v

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 17 Jan 2018 11:36:09 -0800

================================================================================
Version: 2.3.55
Patch: 00
Date: 2018-01-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. this is only for Manjaro, they seem to have not done the 
/etc/os-release file pretty name correctly, so the bland name reports there.

Added manjoro-release to the lsb good list. No other changes.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 13 Jan 2018 16:28:09 -0800

================================================================================
Version: 2.3.54
Patch: 00
Date: 2018-01-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Significant albeit small fix to the debugger tool.

Without this fix, newer kernels can hang on the data parsing.


--------------------------------------------------------------------------------
-- Harald Hope - Sat, 13 Jan 2018 11:51:50 -0800

================================================================================
Version: 2.3.53
Patch: 00
Date: 2017-12-07
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. This should fix the Rizen multithreaded 
cpu output issues. Now inxi handles > 8 cores in terms of output filters, 
descriptions, correctly noting that it's multithreaded.

Because AMD has entered the Multithreading game, I've changed the trade term:
HT - HyperThreading to MT - MultiThreading to support both Intel and AMD 
variants.

Updated CPU output filters to also account for these very large core counts.

I believe this commit now adds full support for the new Ryzen series, but I'll 
have to see when it comes to other variants that may appear. I've tried to 
future proof the MT tests, but I won't know of those are fully functional and 
accurate until inxi sees the real data.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 07 Dec 2017 10:35:40 -0800

================================================================================
Version: 2.3.52
Patch: 00
Date: 2017-12-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Maintainers, you can ignore this release, it's only a 
reshuffling and renaming of internal functions.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 02 Dec 2017 17:24:43 -0800

================================================================================
Version: 2.3.51
Patch: 00
Date: 2017-11-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is an attempt at a fix for issue #129

Because I don't want to break existing cpu logic, I just added in a rizen 
switch, which will just use cpu_core_count value, then trigger HT output.

This fix may or may not work, but the issue poster vanished and has not followed 
up.

For now I'm keeping this a Ryzen specific adjustment, but it may be safe to 
extend it further, that is, if siblings > 1 && siblings = 2 * cores then it's 
HT.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 01 Dec 2017 13:21:13 -0800

================================================================================
Version: 2.3.50
Patch: 00
Date: 2017-11-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, bug fix for -R raid, zfs. Improved filters, clutter 
cleaner, more likely to somewhat work with gnu/linux zfs.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 28 Nov 2017 19:41:30 -0800

================================================================================
Version: 2.3.49
Patch: 00
Date: 2017-11-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. This is the first attempt to correct an 
issue a forum poster raised, which is the fact that despite the fact that 
GNU/Linux has had reasonably ok zfs support for years now, inxi only tested for 
zfs on BSD systems.

This has been corrected. Due to the complexity of handling software raid, inxi
will now test first for ZFS data, if none is found, it will then test for 
/proc/mdstat.

In a perfect world I'd like to have full dynamic Raid support, but I'm missing
all the key ingredients required to add that:

1. systems to test on
2. software raid, I don't use it
3. data collection for non mdraid and zfs software raid, including the values
possible to gather from all non software raid.

Basically, the only way I'd extend -R raid option is if I get direct ssh access 
to a machine that uses the alternate software raid type, otherwise it would take 
forever to figure out the options.

Since the number of people who might be actually running zfs and mdraid and 
using inxi probably numbers in the 10 globally, I figured this solution was a 
fine way to handle adding zfs without messing up mdraid, which is more common on 
linux.

It also does not break BSDs, since BSDs as far as I know don't use mdraid, and 
don't have /proc/mdraid in the first place.

Also redid the man page to add -! 41, -! 42, -! 43, -! 44 options, which bypass 
curl, fetch, wget, and all of them, respectively. Plus making the lines less 
wide.

That should make those people who actually use 80 column wide vi as an editor 
happy, lol.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 28 Nov 2017 17:17:00 -0800

================================================================================
Version: 2.3.48
Patch: 00
Date: 2017-11-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. No external changes, full reordering of internals to 
be easier and more predictable to find. Better section headers, all ordering 
alpha by subsections.

Fixed some small debugger gatherer oversights as well. 

Note that I made the debugger stuff more portable, so I could use it in another 
program.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 27 Nov 2017 12:13:05 -0800

================================================================================
Version: 2.3.47
Patch: 00
Date: 2017-11-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Bug fix for Curl, in some cases it may hit a redirect,
so I added the -L flag to follow redirects.

Make sure to update to this version or various downloader actions could fail.
--------------------------------------------------------------------------------
-- Harald Hope - Sun, 26 Nov 2017 18:30:35 -0800

================================================================================
Version: 2.3.46
Patch: 00
Date: 2017-11-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added an optional downloader: Perl HTTP::Tiny

Note that this is the last choice because it's slow, the order has been revised:

1. curl
2. wget
3. fetch
4. Perl 5 HTTP::Tiny
5. OpenBSD ftp

wget has been downgraded due to the recent 1.19-2 bug with wget -O that did not 
get resolved quickly, and which should never have been released since that's a 
basic wget action, which means they aren't testing gnu wget the way they should 
be.

All inxi downloaders can now use this option. However, in my tests it's 
signicantly slower to use HTTP::Tiny than curl or wget, so inxi will test for 
the downloaders in that order. While -i uses dig as it's primary IP tool, if dig 
is not installed, the IP will follow the same downloader priority. -U and -w/-W 
use downloaders.

Because HTTP::Tiny is optional, and is merely used if wget/curl/fetch are not 
installed, I would not consider Perl to be a real dependency yet, just an 
option, so I guess for packager maintainers, Perl should be added as a 
recommends, or a dependency if you want to fully support the debugger options 
(Core Modules).

While I'm still not sure which Perl modules I'm going to be using, I'm sticking 
for now to Core Modules, the standard, with some experimental exceptions that 
would only be used if the user had them present.

Long term the goal is to get rid of as many dependencies as possible, replacing 
them were possible with Perl tools, but this is going to take forever, if it 
ever happens, so don't hold your breath.

In the future, I expect more and more components that were gawk to be rewritten 
to Perl (Core Modules), slowly, however, very slowly.

Updated --recommends to indicate the downloader options more clearly as well.

Added new options for bypassing curl (-! 41), fetch (-! 42) wget (-! 43), or 
curl, fetch, and wget (-! 44) to disable all of them. This is in case one of 
those is broken or you want to test Perl downloader, mostly.

Also cleaned up debugger output and made debugger portable to other scripts.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 26 Nov 2017 15:14:34 -0800

================================================================================
Version: 2.3.45
Patch: 00
Date: 2017-11-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Because it's kind of hard to read the per /sys sub 
directory output, I split it into sections, and also have the full /sys tree
in case there are some subtle differences in how the paths interlink.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 21 Nov 2017 11:26:51 -0800

================================================================================
Version: 2.3.44
Patch: 00
Date: 2017-11-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added some critical debugger tools for ongoing issue # 
128 ARM data collection in /sys.

Using 'tree' now instead of ls if it is installed for debugger /sys tree 
listing. Added to recommends. Updated bluetooth recommends to note it's dev 
only. That should fix issue #127 

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 21 Nov 2017 10:35:34 -0800

================================================================================
Version: 2.3.43
Patch: 00
Date: 2017-10-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Small perl fix, nothing changes in output or function.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 31 Oct 2017 17:30:03 -0700

================================================================================
Version: 2.3.42
Patch: 00
Date: 2017-10-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Removed xiin references, fully switched to perl sys traverse tool and uploader.

Renamed debugger sys files to sys-dir-[traverse|depth-[1-6]].txt

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 30 Oct 2017 12:04:02 -0700

================================================================================
Version: 2.3.41
Patch: 00
Date: 2017-10-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Updated the inxi upater options, removed some legacy 
branches, simplified the options. This corresponds to updates on github where
I'm finally bringing the alternate location self updater back into operational
state after a long dormant period.

Also, and this may be of interest to some maintainers, please note, there is
a new branch: master-plain which does NOT have the gz files inxi.1.gz and
inxi.tar.gz

If you want to avoid the big clones, you can use that branch with this command:
git clone https://github.com/smxi/inxi --branch master-plain --single-branch

And that should only track the basic 3 files: inxi inxi.1 and inxi.changelog

This fixes issue #94 

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 29 Oct 2017 09:47:28 -0700

================================================================================
Version: 2.3.40
Patch: 00
Date: 2017-09-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. This is a small update, moved 
http://smxi.org to https://smxi.org so updated the URLs in man page and inxi. 
Note that the URLs redirect to https: so this is not a very important update.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 21 Sep 2017 17:11:23 -0700

================================================================================
Version: 2.3.39
Patch: 00
Date: 2017-09-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small patch, no new version, new tarball. Fixed issue # 124 --recommends failed 
to show sed/perl version: the first was due to a syntax change in --version for 
sed, the second was a typo in inxi. 

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 20 Sep 2017 10:11:46 -0700

================================================================================
Version: 2.3.39
Patch: 00
Date: 2017-09-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Bug fix. Debug data collector using Perl requires 
explicitly setting Passive => 1 (true) for some systems and firewall 
configurations.

This corrects a failure to upload issue I experienced for a test remote system 
that had a different firewall configuration than the dev system has.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 12 Sep 2017 17:53:11 -0700

================================================================================
Version: 2.3.38
Patch: 00
Date: 2017-09-07
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. This closes issue #122. Adds support for 
including nvme disk capacity in full disk capacity listing. Adds nvme 
name/serial/firmware revision number. The latter is a new -Dxx output option. 
Note that as far as I could tell, so far, nvme is the only disk type that has 
firmware revision data.

Added support for nvme disk temperature as well, that requires the cli tool 
nvme.

Updated AMD microarchitecture list to be more granular and complete. Added Intel 
microarch type. Note that they are releasing a few new microarchitectures soon 
but I was not able to find any model numbers for those.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 07 Sep 2017 10:00:06 -0700

================================================================================
Version: 2.3.37
Patch: 00
Date: 2017-08-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. Deprecated xiin uploader, which 
completes the deprecation of the xiin.py tool, which is going to become obsolete 
when python 3 fully replaces python 2.

Since the odds of perl being around and stable are far higher than the odds of 
xiin.py even working on python 3, I'm getting ahead of the race. Plus Perl is 
nicer to work with.

And Perl is a lot faster. I mean, a lot. Not slightly.

And it also works on much older systems, and does not have that Python version < 
2.6 failure due to changing Python syntax even between sub versions. xiin.py 
never ran on Python 2.5 even when it was relatively recent, which is one reason 
I'm removing all Python from inxi.

Basically xiin.py worked only on Python 2.6 or 2.7, period.

Oh, and also handled issue #115 by not making -B show -M data.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 23 Aug 2017 15:06:22 -0700

================================================================================
Version: 2.3.36
Patch: 00
Date: 2017-08-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes issue #119 

The issue was not so much with xiin.py as with some new values in /sys that 
would hang tree traverse, however, in order to remove the python dependency 
(except for uploading -xx@ debugger data, until I can figure out how to do it 
with Perl), I rewrote the tree traverse tool into Perl, which also makes it a 
lot faster and easier to work with.

This issue appeared on kernel 4.11 as far as I can tell, some new values in /sys 
make the traverse hang if it tries to read the values, **/parameters/** and 
**/debug/** seem to be the main culprits, but inxi doesn't need that data anyway 
for debugging purposes so it's just excluded.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 16 Aug 2017 00:34:43 -0700

================================================================================
Version: 2.3.35
Patch: 00
Date: 2017-08-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed issue #120 where -z fails to anonymize serial 
numbers.

Also fixed a FreeBSD issue where I'd failed to update -G to show driver.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 11 Aug 2017 12:07:17 -0700

================================================================================
Version: 2.3.34
Patch: 00
Date: 2017-08-04
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Added to cpu microarch lists.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 04 Aug 2017 16:11:59 -0700

================================================================================
Version: 2.3.33
Patch: 00
Date: 2017-08-04
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This should finalize the mA / Wh conversion problems 
highlighted in issue #118 

The data seems to suggest that using POWER_SUPPLY_VOLTAGE_MIN_DESIGN as the 
factor will be right more often than using POWER_SUPPLY_VOLTAGE_NOW.

Also optimized a bit more on the desktop id logic.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 04 Aug 2017 14:41:14 -0700

================================================================================
Version: 2.3.32
Patch: 00
Date: 2017-08-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This closes issue #118, inxi had failed all along to 
handle the conversion from mA hours to Wh, and had a math glitch too for charge 
(ma).

Not sure how this went undetected during testing, oh well. I assume that mA h is 
not as common internally as Wh or something.

Anyway, it should be fixed.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 03 Aug 2017 21:44:13 -0700

================================================================================
Version: 2.3.31
Patch: 00
Date: 2017-07-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. This corrects many 80 column width line wraps, 
including on: -o, -p, -l, -u, -P, -S, -G, -N, -A

Now most output should tend to not wrap, though some strings are unpredictable 
and will have to be trimmed by adding them to the min size trimmers one by one.

But it's much better than it was.

Note the following changes required to make the wraps more consistent:

-S - the gcc/bits have been made separate, like: bits: 32 gcc: 5.3
-C - the new microarchitecture -x option now is: arch: K7 [for example]
     cache wraps to next line with arch. with -f, bmips now shows on same line 
     as arch/cache

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 30 Jul 2017 14:02:33 -0700

================================================================================
Version: 2.3.30
Patch: 00
Date: 2017-07-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. More optimizations, I'm not sure these will make a big 
difference but I believe the overall collection has dropped execution time by 
around 10% or so.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 29 Jul 2017 19:36:55 -0700

================================================================================
Version: 2.3.29
Patch: 
Date: 2017-07-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. More optimizations, and fixed a bash 4 syntax 
regression that would have caused failure on older systems. Also added Bash 
version checker.

Most ps aux data is now searched using bash parameter expansion, and several 
functions that were in subshells are now printing to globals instead.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 29 Jul 2017 16:37:01 -0700

================================================================================
Version: 2.3.28
Patch: 00
Date:  2017-07-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes a subtle gawk issue that could in some 
systems make -G hang endlessly.

Also started on more optimizing, getting rid of as many subshells as possible.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 29 Jul 2017 12:37:27 -0700

================================================================================
Version: 2.3.27
Patch: 00
Date:  2017-07-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. More cpu arch fixes, and added stepping/release 
info as well so you can see which revision of the cpu microarchitecture your cpu 
has.

Also fixed a few random vm id issues, I found cases where systemd believes it's 
bochs but it is actually kvm, so now the systemd data is not fully trusted, but 
is confirmed.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 28 Jul 2017 18:39:19 -0700

================================================================================
Version: 2.3.26
Patch: 00
Date:  2017-07-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. First attempt at adding cpu 
microarchitecture support. Will need some updates to bring the family/model ids 
to fully current, but should show data for most cpus. Next release will 
hopefully include latest model/family ids and microarchitecture names.

Note that while /proc/cpuinfo has the family/model id in decimal, the values are 
actually generally found as hexadecimal, so inxi translates that interally so we 
can store the data the way it is presented.

See issue #116 for ongoing additions to this feature.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 28 Jul 2017 00:12:56 -0700

================================================================================
Version: 2.3.25
Patch: 00
Date:  2017-07-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This fixes a bug where if there is a remote filesystem 
mounted, the path would crash gawk when searching for unumounted file systems, 
eg:

12.34.2.10:/remote/file/system

Fix is to escape '/'.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 24 Jul 2017 21:10:54 -0700

================================================================================
Version: 2.3.24
Patch: 00
Date:  2017-07-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This corrects a case I'm seeing where wayland/mir are 
running desktop but Xorg has not started, which means inxi can't get the video 
driver from Xorg.0.log as with X.

Added in extra data collection from lspci -v to include the driver for graphics 
card. this is only used, for now, if the initial Xorg based driver test works.

Note that this may also work for systems that have not yet started X out of X, 
in console, I'm not sure about that, but the graphics driver reporting should be 
improved.

Note that I'm not yet linking the driver to the specific card/device, it's just 
going to show in a comma separated list, I couldn't find multi card systems 
where the card types are different, like amd gpu with nvidia card, for example.

But this should correct an issue, at least to start, with expanding wayland 
support for systems that don't use or have not started the desktop with Xorg/X11 
etc.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 23 Jul 2017 14:35:56 -0700

================================================================================
Version: 2.3.23
Patch: 00
Date:  2017-06-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. Added support for Alpine Linux apk package 
manager for the -r option. Fixed typos and glitches in man page as well.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 29 Jun 2017 12:54:21 -0700

================================================================================
Version: 2.3.22
Patch: 00
Date:  2017-06-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Bug fix for GLX/OpenGL output. There was an unhandled case 
with core profile data being null, which in turn triggered a bash oddity, where 
if the IFS is \n for an array, and if the value of one element is '', then bash 
ignores that and does not simply set an empty array key as you'd expect. The 
correction was to change the IFS to ^, which worked fine for empty array values.

However, since this bug will impact anyone with empty opengl core profile data, 
I recommend updating inxi.

Also, added support for two smaller wm, Sawfish and Afterstep.

This is a good source for lists of wm:  http://www.xwinman.org/ 
http://www.xwinman.org/others.php 

However, that does not show how to ID it, so i have to do it on a case by case, 
but I'll add an issue for showing how to get your wm of choice if it's missing 
to inxi.

Also, changed the slightly inaccurate:

GLX Renderer: .....GLX Version: .... 

to

OpenGL: renderer: ...... version: .....

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 24 Jun 2017 18:00:21 -0700

================================================================================
Version: 2.3.21
Patch: 00
Date:  2017-06-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Fix for root graphics/desktop data when not available as 
root.

Was showing in -S line N/A instead of the fallback Console: tty 1 that would 
match the -G no data for root when unavailable for root.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 13 Jun 2017 10:59:41 -0700

================================================================================
Version: 2.3.20
Patch: 00
Date:  2017-06-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. Added floppy disk support, basic, for -d. Fixed 
a long-standing issue where /dev/ram.. data shows in unmounted disks output. 
This is now properly filtered out.

Note that the floppy disk output has no information beyond it's /dev id, eg: 
/dev/fd0

I could find no meaningful data in /sys related to the floppy disk, not the 
model, etc, so I'm just showing presence of disk.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 12 Jun 2017 18:31:48 -0700

================================================================================
Version: 2.3.19
Patch: 00
Date:  2017-06-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This version has some bug/edit fixes and a new distro id, 
mx-version.

Simple.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 10 Jun 2017 21:32:55 -0700

================================================================================
Version: 2.3.18
Patch: 00
Date:  2017-06-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. New option -! 34 - skip SSL certificate check on 
wget/fetch/curl. This allows systems with for example out of date certificate 
stores to still download without error. Also a legacy system fix where tty size 
failed to show.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 09 Jun 2017 11:52:26 -0700

================================================================================
Version: 2.3.17
Patch: 00
Date:  2017-06-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. Bug fix for issue #105, had core and compat 
versions reversed.

Also cleaned up man page, slightly changed output for compat version to: 
(compat-v: 3.0)

gfx variable name fixes to make more obvious the logic as well.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 09 Jun 2017 10:00:48 -0700

================================================================================
Version: 2.3.16
Patch: 00
Date:  2017-06-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Tiny change, new version, tarball. Tumbleweed distro id fix.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 08 Jun 2017 21:02:53 -0700

================================================================================
Version: 2.3.15
Patch: 00
Date:  2017-06-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. New option -! 40 which lets you get gfx 
information out of X.

Default will get data from display :0, but if you append :[display-number] to -! 
40, it will use that display instead, for example: inxi -! 40:1 would get 
information from display 1. Note that most multi-monitor setups use :0 for both 
monitors, depending on how it's setup.

This will also let users see any desktop information based on xrop -root output, 
but it will depend how it works based on how environmental variables have been 
set. gnome and kde, which use XDG for primary detection would not work, for 
example.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 08 Jun 2017 19:25:21 -0700

================================================================================
Version: 2.3.14
Patch: 00
Date:  2017-06-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This corrects an issue I noticed a while ago, glxinfo and 
xpdyinfo used to not work as root in X, but they do now. So I've removed the 
root tests for graphics output, and now only rely on the returned data to 
determine the output when in X. Out of X behavior remains the same.

Note that at some point I'll have to see if wayland systems have usable 
reporting tools to get screen resolution, opengl info, and so on, but that will 
have to come one step at a time.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 08 Jun 2017 17:46:30 -0700

================================================================================
Version: 2.3.13
Patch: 00
Date:  2017-06-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. Shows as default OpenGL core profile version 
number. -xx option will show OpenGL compatibility version number as well, though 
that's largely useless information for most users, thus the -xx. Note that this 
reverses the default, which previously showed OpenGL version, which is actually 
the compatibility version.

This should resolve #105 pull request, though it does it differently, by 
switching the default output to what is more relevant, and offering the 
compatibility version as an optional output item.

Note that much of the glx information will probably change to more neutral terms 
once wayland support starts growing, and systems without xwayland etc libraries 
appear.

Further note that non free drivers showed the OpenGL core profile version 
numbers all along, so really this simply corrects misleading output for free 
drivers.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 08 Jun 2017 15:54:04 -0700

================================================================================
Version: 2.3.12
Patch: 00
Date:  2017-06-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, man page, tarball. ARM cpu core count bug fix. First attempt to add 
Wayland and compositor support. 

This finally implements a first try at mir/wayland detection, along with basic 
handling of actual display server type output. 

New output for Display Server:  Display Server: x11 (X.Org 1.19.0) driver: 
nvidia

Note that since almost all current Wayland systems will have X.org also 
installed, for the time being, the data in the parentheses will be from X.org 
regardless of what display server is detected running the actual desktop. Out of 
the desktop, console, the only thing that will show is x data..

No other data is available to me yet until I get way more debugger data so I can 
see what information the various implementations of wayland without x tools 
actually makes available, my guess is it won't be much.

Also experimental -xx option: -G shows compositor, but only for wayland/mir 
currently.

I have no idea if this will work at all, but it's worth giving it a try as a 
rough beginning to start handling the wide range of wayland compositors being 
created.

This feature will probably take several versions to get stable.

Also added new debugger data collector data for wayland information, but the 
pickings are slim, to put it mildly.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 06 Jun 2017 18:43:31 -0700

================================================================================
Version: 2.3.11
Patch: 00
Date:  2017-05-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. This corrects several oversights of the 
2.3.10 IPv6 update.

Now there is an -x option for -i that will show the additioanl IPv6 address data 
for scope global, temporary, and site. Also a fallback for unhandled scope: 
unknown. If the tool 'ip' is used, it will filter out the deprecated temp 
site/global addresses, ifconfig tool does not appear to offer this option.

Also changed is that now ipv6 address always shows, it's not an -x option. 
Probably about time to start rolling out ip v6 data to users now that ip v6 is 
starting, slowly, to be used more.

Another small change, the link address for ipv6 is changed from ip-v6: to 
ip-v6-link so that it's more clear which IP v6 address it is.

The last commit had a significant logic error in it that did not distinguish 
between the link address, which is what should have only shown, and the 
remaining possible addresses.

I've tried to get a basic BSD support, but it's difficult to know the variants 
of ifconfig output syntax

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 31 May 2017 14:22:21 -0700

================================================================================
Version: 2.3.10
Patch: 00
Date:  2017-05-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixes issue #78 and issue #106

Shows multiple ipv6 addresses, filters out ipv6 temp addresses and ipv6 local 
addresses.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 31 May 2017 10:39:00 -0700

================================================================================
Version: 2.3.9
Patch: 00
Date:  2017-05-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Tiny fix, due to a data bug, changing ft to m in weather 
altitude.

Note that this bug is not universal, but I believe this will make inxi more 
right than wrong as a general rule. Further note that altitude is NOT actually 
the altitude of the city/location requested, in most cases, but rather the 
altitude of the weather station data assigned to that location request.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 29 May 2017 12:40:12 -0700

================================================================================
Version: 2.3.8
Patch: 00
Date:  2017-01-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Tiny change, added sisimedia video driver to support 
list.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 14 Jan 2017 12:47:31 -0800

================================================================================
Version: 2.3.7
Patch: 00
Date:  2016-12-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes an issue where sloppy regex was removing 
the BIOS from BIOSTAR. Also fixed a few other sloppy gsub, and fixed a few 
gensub errors as well.

Since BIOSTAR is a fairly common mobo, I'm surprised I haven't gotten this bug 
report before.

This closes issue #102.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 24 Dec 2016 14:53:31 -0800

================================================================================
Version: 2.3.6
Patch: 00
Date:  2016-12-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No new version. New tarball, man. Small text changes and cleanup and updates in 
man page, but no actual meaningful changes. Feel free to ignore this one if you 
just did 2.3.6.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 20 Dec 2016 19:53:54 -0800

================================================================================
Version: 2.3.6
Patch: 00
Date:  2016-12-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is a significant change, but inxi should handle 
it smoothly.

While default configs remain in /etc/inxi.conf, the user overrides now use the 
following order of tests:

1. XDG_CONFIG_HOME / XDG_DATA_HOME for the config and log/debugger data 
respectively. 

2. Since those will often be blank, it then uses a second priority check:

$HOME/.config $HOME/.local/share to place the inxi data directory, which was 
previously here:
   
$HOME/.inxi
   
3. If neither of these cases are present, inxi will default to its legacy user 
data: $HOME/.inxi as before

In order to make this switch transparent to users, inxi will move the files from 
.inxi to the respective .config/ .local/share/inxi directories, and remove the 
.inxi directory after to cleanup.

Also, since I was fixing some path stuff, I also did issue 77, manual inxi 
install not putting man pages in /usr/local/share/man/man1, which had caused an 
issue with Arch linux inxi installer. Note that I can't help users who had a 
manual inxi install with their man page in /usr/share/man/man1 already, because 
it's too risky to guess about user or system intentions, this man location 
correction will only apply if users have never installed inxi before manually, 
and have no distro version installed, unlike the config/data directory, which 
does update neatly with output letting users know the data was moved.

Note that if users have man --path set up incorrectly, it's possible that the 
legacy man page would show up instead, which isn't good, but there was no 
perfect fix for the man issue so I just picked the easiest way, ignoring all man 
pages installed into /usr/share/man/man1 and treating them as final location, 
otherwise using if present the /usr/local/share/man/man1 location for new manual 
 install users.

Also, for users with existing man locations and an inxi manually installed, you 
have to update to inxi current, then move your man file to 
/usr/local/share/man/man1, then update man with: mandb command (as root), after 
that inxi will update to the new man location.

Also added some more XDG debugger data as well to cover this for future debugger 
data.

This closes previous issue #77 (man page for manual inxi install does not go 
into /usr/local/share/man/man1) and issue 101, which I made today just to force 
the update.

Just as a side note, I find this absurd attempt at 'simplifying by making more 
complex and convoluted' re the XDG and .config and standard nix . file to be 
sort of tragic, because really, they've just made it all way more complicated, 
and since all 3 methods can be present, all the stuff has to be tested for 
anyway, so this doesn't make matters cleaner at all, it's just pointless 
busywork that makes some people happy since now there's even more rules to 
follow, sigh.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 19 Dec 2016 18:38:57 -0800

================================================================================
Version: 2.3.5
Patch: 00
Date:  2016-12-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This will matter to some users, inxi had failed to add 
'modesetting' graphics driver, so it would not show in output, which causes 
support issues for users of that specific driver, like some cases of Intel. Also 
inxi would always have failed to show it unloaded in cases where radeon/nouveau 
were used but it had been loaded by xorg to begin with. So probably worth 
updating packages I'd say.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 02 Dec 2016 16:00:57 -0800

================================================================================
Version: 2.3.4
Patch: 00
Date:  2016-11-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No new version, just fixed some unwanted executable bits in files.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 22 Nov 2016 11:13:15 -0800

================================================================================
Version: 2.3.4
Patch: 00
Date:  2016-11-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Squeezing in a last change for 2.3.4, added to -m if valid output, and if no -I 
or -tm triggers used, will show system ram used/total, from the -I line.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 03 Nov 2016 20:20:37 -0700

================================================================================
Version: 2.3.4
Patch: 00
Date:  2016-11-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This improves -D output, now capacity is on its own 
line, and each disk is on its own line always, this makes it easier to read 
and/or parse.

Also, the lines now wrap nicely for extra data > console width, or -y 80 for 
example if you're trying to force most of the data to fit into 80 columns.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 03 Nov 2016 19:39:15 -0700

================================================================================
Version: 2.3.3
Patch: 00
Date:  2016-10-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, updated man page. 

This is a small syntax fix that will have essentially no impact on anyone. I've 
just cleaned up the man code to make it simple enough for roffit man to html 
conversion. There should be no real visible differences as far as I know.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 29 Oct 2016 15:13:40 -0700

================================================================================
Version: 2.3.3
Patch: 00
Date:  2016-10-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Extended support and tests for vm id to include better 
BSD handling, and legacy linux. VM id will remain a work in progress, and will 
probably require a few fixes for fringe cases. Nice to have would be things like 
OpenBSD's vm which is difficult to detect. However, I believe this should handle 
roughly 99% of realworld vm id cases, except for some commercial stuff that will 
require more data.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 25 Oct 2016 12:17:46 -0700

================================================================================
Version: 2.3.2
Patch: 00
Date:  2016-10-23
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Version number unchanged, just added a vm possible id, will impact few users, if 
you care, update.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 23 Oct 2016 21:27:23 -0700

================================================================================
Version: 2.3.2
Patch: 00
Date:  2016-10-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New feature, new tarball, new version number.

Now -M shows device type, like desktop, laptop, notebook, server, blade, vm (and 
tries to get vm type).

vm detection will take more work, for now I'm just going for the main ones used, 
but it will certainly miss some because it's hard to detect them in some cases 
unless you use root features. Also note, in most cases a container I believe 
will display as a vm, which is fine for now.

For BSDs, and older linux, there is a dmidecode fallback detection as well.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 20 Oct 2016 18:03:54 -0700

================================================================================
Version: 2.3.1
Patch: 00
Date:  2016-08-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Fixed typo in man page, no new version, just a fixed man page.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 09 Sep 2016 14:53:24 -0700

================================================================================
Version: 2.3.1
Patch: 00
Date:  2016-08-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. 

Basic support added for Budgie desktop detection. This is waiting more data, so 
the support will be missing the version information. Go Budgie!!

Added /var/tmp and /var/log and /opt to basic partition data: -P This will 
probably not impact more than a handful of people in the world, but that's fine.

Modified the static BIOS in -M to now show UEFI for actually UEFI booted 
systems, and, ideally, UEFI [Legacy] for UEFI booting in bios legacy mode, and 
BIOS for all others. Hopefully this will work ok, we'll see.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 25 Aug 2016 19:09:52 -0700

================================================================================
Version: 2.3.0
Patch: 00
Date:  2016-04-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New Feature, new version, new man page, new tarball. Laptop users should be 
happy, -B option now shows, if available, battery data. Quite good data for 
systems with /sys battery data, only rudimentary for systems using dmidecode 
(BSDs). dmidecode has no current voltage/charge/current supported capacity.

Main row shows charge and condition. Condition shows you have much capacity the 
battery currently has vs its design capacity. Charge shows the Wh/percent of 
current capacity of battery (NOT the rated design capacity).

-x adds battery vendor/model info, and battery status (like, charging, 
discharging, full).

-xx adds battery serial number and voltage information. Note that voltage 
information is presented as Current Voltage / Designed minimum voltage.

-xxx adds battery chemistry (like Li-ion), cycles (note: there's a bug somewhere 
in that makes the cycle count always be 0, I don't know if that's in the 
batteries, the linux kernel, but it's not inxi, just FYI, the data is simply 0 
always in all my datasets so far.

For dmidecode output, the location of the batter is also shown in -xxx

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 18 Apr 2016 16:55:12 -0700

================================================================================
Version: 2.2.38
Patch: 00
Date:  2016-03-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

URGENT BUG FIX! This fixes a bug introduced in 2.2.36 2016-03-21. New version, 
new tarball.

A sloppy unescaped / triggered a failure I didn't notice in partition info.

Please update your inxi packages immediately if your version is 2016-03-21 or 
newer.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 31 Mar 2016 15:08:54 -0700

================================================================================
Version: 2.2.37
Patch: 00
Date:  2016-03-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Tiny fix in distro detection, will now default in 
sequence on /etc/issue step to first test for os release and not mint, then lsb 
verison and not mint, then /etc/issue. This should keep the mint detection 
working well, as long as they keep mint string in the /etc/issue file, that is, 
but that's out of our control.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 30 Mar 2016 13:28:40 -0700

================================================================================
Version: 2.2.36
Patch: 00
Date:  2016-03-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. A tiny bug fix for kfreeBSD, I know, right, nobody 
uses that.

Also added in some more script color options however, which might be of use. 
These are aimed more at light terminal backgrounds.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 21 Mar 2016 16:04:33 -0700

================================================================================
Version: 2.2.35
Patch: 00
Date:  2016-02-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. A tiny, but meaningful, fix. inxi had not been updated 
to test for the non deprecated battery test, /sys/class/power_supply/BAT0 
existence.

This resulted in failure to indicate 'portable' where applicable.

I may also now add battery information where applicable since that's easy to get 
from /sys

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 29 Feb 2016 12:21:09 -0800

================================================================================
Version: 2.2.34
Patch: 00
Date:  2016-02-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This closes two issues:

1. Add amdgpu to possible xorg drivers list (and gpu sensors data)

2. switch to default dig command to get WAN ip. This is usually but not always 
faster than the http method. Because the IP source is not truly trustworthy (run 
by cisco), I'm keeping a fallback mode on 1 second time out failure of the 
previous http based methods. Added dig to recommended tools list.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 21 Feb 2016 11:18:54 -0800

================================================================================
Version: 2.2.33
Patch: 00
Date:  2016-01-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, new tarball. Someone spotted a small glitch in -W help menu.

Says latitude/longtitude instead of latitude,longtitude

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 09 Feb 2016 11:20:03 -0800

================================================================================
Version: 2.2.33
Patch: 00
Date:  2016-01-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Bug fix: added basic support for NVMe M2 disk storage 
type. 

NOTE: missing product name/serial info, because it's not being treated by linux 
kernel as a standard disk. Could not find that data anywhere in the system 
debugger dump. 

If you know how to find the model name/number and or serial, let me know.

Also small fix, as noted: ip: should be ip-v4 to match with ip-v6, thanks 
mikaela.

Also some debugger fixes and updates.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 30 Jan 2016 17:07:42 -0800


================================================================================
Version: 2.2.32
Patch: 00
Date:  2016-01-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Finalized the * expansion fix for arrays. This is a 
significant bug fix, so while the bug almost never appears, if it does, the inxi 
output can get completely corrupted.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 03 Jan 2016 14:08:04 -0800

================================================================================
Version: 2.2.31
Patch: 00
Date:  2015-12-29
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, new tarball.

Cleaned up some logging glitches.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 29 Dec 2015 14:01:07 -0800

================================================================================
Version: 2.2.31
Patch: 00
Date:  2015-11-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Try 2 at mmcblk support. I had mmcblock, thats not how 
it's reported to the system.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 15 Nov 2015 17:25:10 -0800

================================================================================
Version: 2.2.30
Patch: 00
Date:  2015-11-13
--------------------------------------------------------------------------------
RELEASE NOTES: 
--------------------------------------------------------------------------------

New version, new tarball. Added tentative support for /dev/blcmmc0p12 type 
partitions and drive identifiers. This will probably require more fixes.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 13 Nov 2015 11:58:17 -0800

================================================================================
Version: 2.2.29
Patch: 00
Date:  2015-11-09
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. A subtle issue pointed out by a user, inxi is limited 
to 26 drives, and fails to handle the linux > 26 options:

https://rwmj.wordpress.com/2011/01/09/how-are-linux-drives-named-beyond-drive-\
26-devsdz/

That article explains the failing well.

Note that because I have neither user data sets or > 26 hdd systems available, I 
cannot verify that my fix works. It may work, that's all I can say.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 09 Nov 2015 19:00:08 -0800

================================================================================
Version: 2.2.28
Patch: 00
Date:  2015-08-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, new tarball. Man page link fixes, that's all.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 28 Aug 2015 12:44:43 -0700

================================================================================
Version: 2.2.28
Patch: 00
Date:  2015-08-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball:
RELEASE NOTES: updated inxi updaters to use github locations.

I will do this commit once for googlecode, and once for github, after that, 
all commits will go only to github.

inxi moves to github, despite my dislike of for profit source repos, and git, I 
decided that I just don't have the time or energy to do it right, so I'm going 
to use github.

The project is already moved, though I have left inxi up for the time being on 
code.google.com/p/inxi until I move the wiki to http://smxi.org

Everything is pretty much the same, the project url is:

https://github.com/smxi/inxi

The direct download link for the gz is: 

https://github.com/smxi/inxi/raw/master/inxi.tar.gz

git pull is:

git pull https://github.com/smxi/inxi master

svn checkout url:

https://github.com/smxi/inxi

And that's about it.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 20 Aug 2015 16:01:32 -0700

================================================================================
Version: 2.2.27
Patch: 00
Date:  2015-08-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Trivial wget/curl change, nothing else. No need to upgrade 
packages.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 02 Aug 2015 14:18:45 -0700

================================================================================
Version: 2.2.26
Patch: 00
Date:  2015-07-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes a bug with the last fix for KDE Plasma 
version. It was showing Frameworks version, which is apparently NOT the same as 
the plasma version.

Also added debugger kde versioning to make this stuff less of an ordeal for data 
collection.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 06 Jul 2015 15:51:51 -0700


================================================================================
Version: 2.2.25
Patch: 00
Date:  2015-06-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Same version, new tarball, I'm tossing this in with the other release, changing 
for kde >= 4, changing simple KDE to KDE Plasma, which keeps it clear and 
simple.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 15 Jun 2015 18:00:42 -0700

================================================================================
Version: 2.2.25
Patch: 00
Date:  2015-06-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Got a good fix for the kde version issue from the lads 
at #kde-devel, now using kf5-config --version which gives similar output to 
kded4 --version

I use this for both 4 and 5, but since 4 has worked fine for years, I'll just 
use this for 5 and later.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 15 Jun 2015 17:49:56 -0700

================================================================================
Version: 2.2.24
Patch: 00
Date:  2015-06-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Adapted to deal with yet another silly pointless 
change from normal, in this case, sddm decided that using a .pid or .lock file 
in /run was too easy so they changed to some session id type string in the 
/run/sddm/ directory.

Speaking for myself, I find such pointless changes from anything resembling 
normal behaviors to the reason that gnu freedesktop systems will never achieve 
significant desktop use globally.

Also, in the same vein, added debuggers to try to figure out what plasma5/kde 5 
is using internally to give command line version information. Again, something 
pointless internally was changed, thus breaking something that had faintly 
resembled an api, which is of course why desktop gnu linux will never actually 
take off, developers in the real world have no interest in chasing after such 
pointless and never ending churn in even the most trivial areas of the OS, let 
alone the core.

inxi remains however as a log of this ongoing churn and lack of discipline, and 
so remains an interesting process of observation, and a way for users to try to 
avoid the constant changes in simple system queries that should really never 
change, so I can see a reason to keep it going since it's obvious that the 
actual foss ecosystem itself will not and apparently cannot grasp that it is the 
lack of stable apis, methods, etc, that has kept desktop gnu linux from 
achieving any actual real world success or popularity, and that is the actual 
problem that should be fixed, not some pointless internal change to something.

On the source repo front, maintainers, I still can't find an acceptable 
alternative to the impending shutdown of googlecode. github is a for profit 
venture that people who seem totally void of any sense of history believe is 
actually going to be around longer than say, sourceforge, or googlecode, as a 
legitimate source hosting site.

I'd welcome any suggestions. So far all the options are bad that I can find.

Top preference is svn, but if git is the absolute only other choice for an 
otherwise good option, I'd consider git, but it's a horrible option for inxi 
because of how inxi development and debugging works, vs how git works. ie, svn 
branches are perfect, git branches are totally wrong.

I may end up just hosting the svn on my own servers to avoid having to move yet 
again when the next for profit flakey site decides to close up or monetize the 
source hosting.

The original idea of googlecode was for google to 'pay its dues to the foss 
community', but apparently they got bored with that idea, plus of course, the 
ongoing total failure of google to deal with automated spam, which has always 
been a huge bug in the core google corporate culture. But googlecode was by far 
the best option I've come across, it was done by a deep pocketed corporation not 
for profit for pretty good reasons, and was never intended to be a profit 
center, which is the closest I could see for a non free option. 

Setting up svn gui stuff however is a royal pain and requires ongoing 
maintainance for the life of the software, which is NOT fun, nor will I sign up 
for that obligation.

I may end up moving to github anyway, even though git truly sucks for inxi and 
myself, but it's an idea I find fairly vile, apparently free software (sic) 
authors seem to have no grasp of the concept of fredom when it comes to source 
code hosting, judging by the absurd popularity of github as the default go to 
source repo. Their website is pathetic as well, which isn't very promising.

So we'll see where it goes, I think I have until august to decide what to do for 
source hosting.

Since I'm old enough to have seen sourceforge and now googlecode do the same 
thing, along with a lot of other options, to say github won't do this too is 
delusional, what you can almost certainly say is it will do it, the only 
question is when. But, just as Linus did with his non free linux kernel version 
control, people will stick with the non free stuff until you realize you can't 
use it anymore, because it is non free. Free software hosted on non free source 
repos is to me one of the most absurd and stupid things I've ever heard of to be 
honest.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 15 Jun 2015 15:19:02 -0700

================================================================================
Version: 2.2.23
Patch: 00
Date:  2015-06-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Tiny change. Added /etc/devuan_version file to distro id 
to handle the switched file name. Kudos to anyone out there fighting to create a 
working alternative to the unreliable and buggy and windows emulating systemd, I 
wish devuan luck. Maybe between devuan and gentoo and slackware we can save the 
free software core systems before it's too late.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 08 Jun 2015 15:43:52 -0700

================================================================================
Version: 2.2.22
Patch: 00
Date:  2015-05-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page, new tarball. Modified slightly -tc and -tm output to 
fix a pet peeve of mine. Now, if -I, -b, -F, or anything that can trigger the 
memory: used/total in Information line is not used, -tm will always show the 
system used/total ram data on the first line of the Memory item of -t output.

Also, if -xtc (trigger ram data in cpu output) is used, and -I is not triggered, 
and -tm is not triggered, will also show system used/total ram data on the cpu 
first line.

I'd found it odd that this data did not appear when -tcm or -tm or -xtc were 
used, so this is now fixed. I used the -t option a fair amount to find 
memory/cpu use issues, and usually I don't use the option with other options, so 
the lack of total system ram data was odd.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 30 May 2015 11:50:56 -0700

================================================================================
Version: 2.2.21
Patch: 00
Date:  2015-05-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. A desktop id fix, Mate id failed, mate moved to a more 
long term solution to identify itself, so the hack I had in place fails on new 
MATE.

We'll see if this does it for various glitches, now quassel and mate latest 
should again be working.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 13 May 2015 13:15:59 -0700

================================================================================
Version: 2.2.20
Patch: 00
Date:  2015-05-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This fixes a qt5 glitch with Quassel id, hopefully anyway.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 11 May 2015 15:08:30 -0700

================================================================================
Version: 2.2.19
Patch: 00
Date:  2015-02-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, new tarball. Fixed the repo error message to be more 
accurate, since a system could be supported but have no repo data, like on some 
livecds etc. Also made it better for BSD or GNU/linux.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 15 Feb 2015 19:13:25 -0800

================================================================================
Version: 2.2.19
Patch: 00
Date:  2015-02-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, updated man page, new tarball. Updated -r to for portage gentoo 
sources. This should work fine for all derived distros like Sabayon as well. The 
test looks for:

/etc/portage/repos.conf/ and type -p emerge

if found will then grab the repos from the source files found.

Note that the logic for this was almost identical to that used for rpm so it was 
an easy addon. Please let us know if you have an issue and provide data samples 
of relevant files.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 15 Feb 2015 18:02:16 -0800

================================================================================
Version: 2.2.18
Patch: 00
Date:  2015-01-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Two great bug report, issues. 

1. Tightened runit init detection to use proc, note that if runit works on BSDs 
inxi will require more data to properly detect it on BSDs..
   
2. Use openrc runlevel tests natively if openrc detected.

3. Fixed subtle issue with alias to inxi file and paths.

4. Added rc-status data collection for debugger, improved debugger data 
collector handling of BSD and other tests to note absent if not there in file 
names.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 24 Jan 2015 10:25:43 -0800

================================================================================
Version: 2.2.17
Patch: 00
Date:  2015-01-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New Version, new tarball.

Fixed bugs in Epoch init system detection, caused false positives in systems 
booted on SysVinit, but with Epoch installed. Epoch turns out to be in PID 1 == 
epoch (/proc/1/comm) so that's easy to fix.

Also fixed spacing isxue with OpenRC output in -I line.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 14 Jan 2015 12:28:00 -0800

================================================================================
Version: 2.2.16
Patch: 00
Date:  2014-11-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Very small update, added sddm id to dm detecfion. Because 
Arch linux, at least on the system I got data from, is not using .pid/.lock 
extensions, but other systems are, I'm adding sddm AND sddm.pid detection. This 
required changing the id to use explicit -f for test, not the previous -e, which 
will force only files, not directories, to trigger yes case.

No other changes, but it's worth updating to this because distros may start 
using sddm in the not so distant future, it's beta currently though.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 03 Nov 2014 19:26:22 -0800

================================================================================
Version: 2.2.15
Patch: 00
Date:  2014-10-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Debian has for some reason broken procps / uptime support, 
for as of yet unknown reasons, so rather than wait to see the bug resolved, I'm 
just removing uptime as a depenendency, though this is a short term hack only 
because we don't know why it was removed from procps or if that was just a 
mistake, or if other things as well might be vanishing from procps. Am leaving 
in however uname as dependency because inxi cannot determine what platform it is 
when it starts without that.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 12 Oct 2014 12:07:03 -0700

================================================================================
Version: 2.2.14
Patch: 00
Date:  2014-09-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Bug fix for regression introduced in last versions. 
Double output for apt repos. Also refactored duplicated code into a function, no 
other changes.

Note that this version features the repo debugger tool as well, which is very 
helpful in particularly non apt systems to fix issues with its handling of repo 
formats etc.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 27 Sep 2014 00:09:07 -0700

================================================================================
Version: 2.2.13
Patch: 00
Date:  2014-09-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added slackpkgplus support, added freeBSD pkg servers, 
added netBSD pkg servers, all to -r.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 25 Sep 2014 21:39:07 -0700

================================================================================
Version: 2.2.12
Patch: 00
Date:  2014-09-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. For some weird reason rpm query didn't work with gawk 
all on one line, moved to separate lines. Who knows why? This only impacts rpm 
distros.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 25 Sep 2014 00:19:06 -0700

================================================================================
Version: 2.2.11
Patch: 00
Date:  2014-09-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes broken slackpkg handling in -r, and, using 
the same fix, fixes a single scenario with apt, where there is only 
sources.list, no .d/*.list files. I was assuming that the file name would print 
out in the output of single file grep, but that only happens with multiple 
files.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 24 Sep 2014 13:18:41 -0700

================================================================================
Version: 2.2.10
Patch: 00
Date:  2014-09-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added slackpkg support -R; added rpm support for gtk 
version (-Sx). 

BSDs: removed dragonly specific used mem hack, now will work for any BSD, if avm 
in vmstat is 0 adds a flag to value, and removes it when used.

Nothing else of note. 

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 24 Sep 2014 10:23:31 -0700

================================================================================
Version: 2.2.9
Patch: 00
Date:  2014-09-22
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is only for BSDs. Added hack to get dragonfly 
used ram, added dragonfly/freeBSD repos full support.

Added sort of drives order to get around gawk pseudo array hash issues.

And that's that.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 22 Sep 2014 16:06:00 -0700

================================================================================
Version: 2.2.8
Patch: 00
Date:  2014-09-21
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added lxqt desktop id that is not dependent on openbox 
detection.

Fixed some bugs. Added a pciconf class for audio. Added support for BSDs running 
lspci, which lets openBSD show card info for -A,-G,-N

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 21 Sep 2014 17:37:23 -0700

================================================================================
Version: 2.2.7
Patch: 00
Date:  2014-09-19
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Mostly BSD fixes, a few for linux disk info.

Added support, basic, for BSD hard disks, and optical disks.

Added hard disk total/percent used for BSDs, sort of.

These are mostly just hacks since the data isn't easily available from system 
standard tools, though I could on freeBSD use gpart I guess but that's another 
tool needed, and another method, too much work imo for small results.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 19 Sep 2014 19:52:10 -0700

================================================================================
Version: 2.2.6
Patch: 00
Date:  2014-09-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Cleaned up and made more consistent the cpu max/min 
output.

Now the short form, the -b/-v1 form, and the -C forms are all similar.

Also, added a few hacks to try to extract cpu max speed from cpu model string in 
either sysctl -a OR /var/run/dmesg.boot data in freeBSD/openBSD. Sometimes it 
may work if that data was in the model string. It's a hack, but will do until we 
get better data sources or they update their sources to list more data.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 17 Sep 2014 21:24:41 -0700

================================================================================
Version: 2.2.5
Patch: 00
Date:  2014-09-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball, same version. This adds UP support for -Cxx, showing min cpu speed 
as well.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 16 Sep 2014 21:35:06 -0700

================================================================================
Version: 2.2.5
Patch: 00
Date:  2014-09-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes a long standing weakness with min/max cpu 
speed handling. Or rather, non handling, since that data only showed in rare 
cases on short form (inxi no args) output. Now it uses /sys query to determine 
min/max speed of cpu, and uses that data to override any other min/max data 
discovered.

Still uses /proc/cpuinfo for actual speeds per core. The assumption in this is 
that all cares will have the same min/max speeds, which is generally going to be 
a safe assumption.

Now in short form, inxi, output, it will show actual speed then (max speed) or 
just (max) if actual speed matches max speed. Same for -b short CPU output.

For long, -C output, shows max speed before the actual cpu core speeds per 
core. 

With -xx, and in multi cpu/core systems only, shows if available min/max speeds.

Note that not all /sys have this data, so it doesn't show any N/A if it's 
missing.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 16 Sep 2014 20:26:19 -0700

================================================================================
Version: 2.2.4
Patch: 00
Date:  2014-09-10
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Mostly BSD changes, except for downloader options, 
which now permit wget/curl/(openBSD ftp)/(BSD fetch) interchangeably.

This lets more standard downloader defaults in BSDs, as well as curl on 
gnu/linux systems without triggering an error of missing wget.

1. Fixed cpu core issues on BSDs, now shows core count + if > 1, cpus total.

2. Now shows OS instead of Distro on short/long output, since each BSD is an OS.

3. fixed vmstat issues for used memory outputs

Also fixed potential failures with cpu core count array by making it a ',' 
separated array.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 11 Sep 2014 18:15:10 -0700

================================================================================
Version: 2.2.3
Patch: 00
Date:  2014-09-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Contains a major bug fix for a regression introduced 
in 2.2.2

-m/-M would always show requires root for dmidecode no matter what. Also 
improved dmidecode error messages/handling.

Also, a fix for no display card data, now shows as expected no card data

Most other fixes are for BSD, mostly openBSD.

1. Added a class for network devices in freeBSD pciconf

2. Added -r support for openBSD

3. Fixed some cpu issues for openBSD

4. Fixed an issue in openBSD/freeBSD where client version data failed to get 
cleaned

5. Changed inxi short form output for BSDs to show OS data instead of kernel 
data.

6. BSDs, maybe all, different syntax in xorg.0.log made unloaded gfx drivers not 
show, that is fixed now.
   
-p fixed file system type in -p/-P for openBSD, now shows.

-I / inxi short - fixed used memory, did not show in openBSD, now does.

-f fixed cpu flags in openBSD, now works

-C corrected corrupted cpu data outputs, in openBSD at least, maybe also freeBSD

-C added an openBSD hack to sometimes show cpu L2 cache

-m/-M fixed/improved dmidecode error handling for all systems

modified handling of dmesg.boot data, synched so gawk can parse better.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 03 Sep 2014 12:00:04 -0700

================================================================================
Version: 2.2.2
Patch: 00
Date:  2014-09-01
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This version fixes an issue with a white space at the 
end of lines.

Now all lines are stripped of ending whitespaces automatically.

Also a dmidecode error handler correction, that was not working right in BSD 
systems.

Added some debuggers for BSD systems.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 01 Sep 2014 16:09:23 -0700

================================================================================
Version: 2.2.1
Patch: 00
Date:  2014-08-20
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Some systems are showing a new xfce syntax in the xrop 
-root output, like so, instead of the old quotes "XFCE4" it shows like this:

XFCE_DESKTOP_WINDOW(WINDOW): window id # 0x1000003

Updated and added a much less strict fallback test case.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 20 Aug 2014 19:43:59 -0700

================================================================================
Version: 2.2.00
Patch: 00
Date:  2014-08-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, man page. Maintainers, this is the official release of -m 
feature.

I have collected enough datasamples to allow for reasonably fine grained 
corrections, estimates, warnings about unreliable capacity now, and have fixed 
all major failures. 

Also, because this stuff is filled out by people somewhere, or not, some fields 
often are just empty, or contain the default values, ie, they are worthless. 
inxi shows N/A for those situations, it means there is really no actual data to 
show you.

This feature, sadly, well never be totally reliable, because dmi data is frankly 
junk, especially dmi type 5 and 16, which is what is supposed to tell you total 
capacity of memory array, and the maximum module size (type 5). However, this 
data is totally random, often it is right, sometimes it is wrong. Sometimes type 
5 is right and type 16 is wrong, sometimes the other way. And since type 5 is 
only present in some systems, it's not reliable anyway.

What is reliable and always right is the actually installed memory per device, 
ie, sticks. I have not seen any errors in that, so that seems to be actually 
coming from the system itself. type 5 / 16 sadly are clearly entered in manually 
by some poorly paid engineers out there in the world, and are often total 
fictions, either far too small, or far too big, or whatever.

inxi will attempt to correct all clear logic errors, and whenever it changes the 
listed data from type 5/16, it notes either (est) or (check). (est) means it is 
a good guess, one I am comfortable making, (check) means it is either an 
unreliable guess, or that what the system is reporting is so unlikely that even 
though inxi is showing it, it doubts it could actually be true, or at least, it 
thinks you should check this yourself. 

-m has 3 extra data options, -x prints the part number, if found, and the max 
module size, if type 5 is present. inxi does NOT attempt to guess at max module 
size based on what is installed, it only will correct a listed max module size 
if installed modules are > than listed max size. Usually part numbers, if 
present, are all you need to order a new stick.

-xx shows serial number, manufacturer (often empty, or just random alphanumeric 
identifiers, but sometimes they list the actual company name, which is helpful. 
It also shows, if type 5 data is present, single/double bank.

-xxx as usual shows largely useless data that may be of interest to soemone, 
like if ram type is synchronous, memory bus width data, and module voltage (type 
5 data).

This feature will never be reliable I am sad to say because the source data 
itself is random and much has been filled out, or not filled out, by engineering 
drones somewhere out there in the underpaid world. The ranges of errors are so 
wide that inxi just has to check what is possible, reasonable, unlikely, etc, to 
generate its numbers. In other words, this is NOT just parsing dmidecode output, 
that is the raw material only, sad to say.

So this is it, for better or worse. All bug / issue reports with this MUST come 
with a full:
inxi -xx@14 
hardware data upload, run as root. 

Also, much to my annoyance, this feature requires root, since /dev/mem needs 
root to be read, and I assume the dmi table, so that is a departure from normal 
inxi standards, as is the low quality input, and thus, output, data, though I 
can guarantee that what inxi tells you is in most cases on average more accurate 
than what dmidecode tells you, since dmidecode simply prints out what it finds 
in the dmi table, and nothing else, in whatever order it finds it, from what I 
can see, ie, you also cannot trust the order of dmidecode output.

I had been hoping that /sys would start to contain memory data like it does 
mobo/system data, but it never happened so I finally decided to just do the ram 
thing, require dmidecode, require root/sudo, and that's that.

There will be issue reports, you can help them by looking up the mobo 
stats/specs yourself and listing them in the issue, so I don't have to do it. I 
use the tool at crucial.com which is very accurate and also very complete in 
terms of all possible hardware out there. 

I would trust that tool before trusting the companies that have the least 
reliable data, like ASUS.

Much thanks to everyone who is contributing datasets, and the distros, 
particularly siduction, that really were very helpful in this process, by 
finding more and more failure cases that helped me start to tighten the logic, 
and make it more and more robust. Special thanks to Mikaela, of #smxi 
irc.oftc.net, who came up with two systems that both required a full redo of the 
logic, and thus who helped a lot in this process.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 18 Aug 2014 15:07:36 -0700

================================================================================
Version: 2.1.98
Patch: 01
Date:  2014-08-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New patch version, new tarball. Another error case dataset, wrong cap, wrong max 
mod size, derived mod size 2gb, listed cap 8, but 2 slots, ie, 2gb x 2 == 4. 
Made this retain the listed size, but adds (check) to it because either max mod 
size is wrong or cap is wrong.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 17 Aug 2014 19:40:46 -0700

================================================================================
Version: 2.1.98
Patch: 00
Date:  2014-08-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed bad assumption, DMI type 0 is not always before 
other types, in at least one case, it is last, so can't use that as trigger to 
start loop.

Now using: Table at .. which is always at start of dmi output.

Also, changed size output per module to be in MB GB TB instead of all mB, since 
modules are sold by GB or MB, the data should show that as well. Also shortens 
output.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 17 Aug 2014 12:01:38 -0700

================================================================================
Version: 2.1.97
Patch: 00
Date:  2014-08-16
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Another logic redo to handle a fringe case (dmidecode 
places type 17 in front of type 16), now each array is created as a 
multidimenstional, 2x array, and each device is a 3 dimensional array. This 
seems to clean up the problems with bad ordering of dmidecode data.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 16 Aug 2014 16:22:17 -0700

================================================================================
Version: 2.1.96
Patch: 02
Date:  2014-08-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Forgot to remove debugger on switch.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 15 Aug 2014 16:55:04 -0700

================================================================================
Version: 2.1.96
Patch: 01
Date:  2014-08-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small change, forgot to add -m to the debugger inxi output.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 15 Aug 2014 16:43:47 -0700

================================================================================
Version: 2.1.96
Patch: 00
Date:  2014-08-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. This version hopefully brings inxi 
closer to at least making good guesses when the data is bad for ram, and 
hopefully will not break too many cases where it was actually right but seemed 
wrong.

Unfortunately, dmidecode data simply cannot be relied on, and is FAR inferior to 
the type of data inxi tries in general to present users, ie, taken directly from 
the system, and, ideally, more accurate than most other tools. But in this case, 
there is just no way to get the data truly accurate no matter how many hacks I 
add.

But if you have bad data, then submit: inxi -xx@ 14 so I can take a look at the 
system, and see if I can modify the hacks to improve that data.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 14 Aug 2014 17:41:42 -0700

================================================================================
Version: 2.1.95
Patch: 04
Date:  2014-08-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New patch version, tarball. Fixed a few small oversights, more debugging added.

Will next try to handle the remaining corner cases if possible.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 14 Aug 2014 12:23:38 -0700

================================================================================
Version: 2.1.95
Patch: 01
Date:  2014-08-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Patch version, trying to fix a small glitch with gawk wanting to change integers 
to strings.

Forcing int() on relevant items.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 13 Aug 2014 21:28:46 -0700

================================================================================
Version: 2.1.95
Patch: 00
Date:  2014-08-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Attempting to handle bad extra data for max module 
size, sometimes it is too big, and sometimes too small. Changed data gathering 
to use arrays, then print/process the arrays once they are assembled.

Now it will get rid of any max module size if it's greater than the calculated 
capacity, and it will generate an estimated capacity/max module size if they are 
clearly wrong because actual module sizes are greater than listed max size, or 
capacity is less than greatest module sizes times number of devices.

Not perfect, but it never is, this covers more cases now correctly than before.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 13 Aug 2014 20:42:00 -0700

================================================================================
Version: 2.1.94
Patch: 00
Date:  2014-08-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page, new tarball. Realized that I can on some systems also 
add maximum supported module size, and module voltage. Most systems do not have 
this data, but some do. It's Type 5 item in dmidecode.

Getting the type 6 data however is too hard, and even using type 5 assumes that 
the system only has one physical memory array, but that's fine given how few 
systems probably will have this information in the first place.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 13 Aug 2014 14:03:03 -0700

================================================================================
Version: 2.1.93
Patch: 00
Date:  2014-08-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. Fixed man page errors, improved man page explanations 
of -m features. Changed output syntax to be more consistent, now each main array 
line starts with:

Array-X capacity: (where X is an integer, counting from 1)

and each device line starts with:

Device-X: (where X is an integer incremented by 1 for each device, and starting 
at 1 for each array. I have no data sets that contain > 1 physical memory array, 
if one appears, I may need to patch the output to link the array handles with 
the device handles explicitly.

Made memory bus width output more clear, and added in a hack to correct 
dmidecode output errors, sometimes total width > data width, and sometimes data 
width is > total width, so using always greatest value for total if not equal to 
other width.

I think this will be close to it barring any user feedback or bugs, if nothing 
comes to mind within a few days, I'll move the number to the new major version, 
2.2.0

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 13 Aug 2014 12:12:23 -0700

================================================================================
Version: 2.1.92
Patch: 00
Date:  2014-08-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is closer to final release. Removed Bank/Slot 
separate items and am now just generating one: Locator item, usually from 
Slot/DIMM locator info, but sometimes from Bank Locator info when it is more 
reliable based on my data samples.

Updated help menu, updated man page, now shows working -x -xx -xxx extra data. 
This may change slightly over time.

Also removed speed output when No Module Installed is returned for device size. 
This also wills switch off width if both total/data are empty.

This is much closer now to live 2.2.0, but I'll leave a few more tests before 
putting it at 2.2.0.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 12 Aug 2014 20:16:04 -0700

================================================================================
Version: 2.1.91
Patch: 00
Date:  2014-08-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is a transitional version, most -x/-xx/-xxx data 
is now working, but help/man does not have that yet, until I finalize the order.

Fixed dmidecode issues, showing extra data types for -m, added line length 
handling so -m is properly integrated with rest of inxi re max line lengths.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 12 Aug 2014 18:11:29 -0700

================================================================================
Version: 2.1.90
Patch: 00
Date:  2014-08-11
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. Finally, after all these years, initial 
memory/ram support. This feature requires dmidecode, and usually that needs to 
be run as root.

Significantly improved dmidecode error handling and output, and have as 2.1.90 
testing/initial release basic ram data. 

In subsequent releases, extra info for -x and -xx and -xxx will be added as well 
to the output.

For those who want to jump on board early for ram data, update your repos, for 
those who want to wait for the full featured version, with -x type data, wait 
for 2.2.0

And that's that.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 11 Aug 2014 22:23:18 -0700

================================================================================
Version: 2.1.29
Patch: 00
Date:  2014-08-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, this only will impact ancient systems, cleans up a data error 
message and restores N/A to IF id in networking. No functional change, and won't 
be seen on any non ancient systems.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 11 Aug 2014 16:10:03 -0700

================================================================================
Version: 2.1.29
Patch: 00
Date:  2014-08-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Big update/fix to -n/-i/-N. Now supports infiniband 
devices, which have the odd feature in our test data of having > 1 IF id, like 
ib0 ib1 per pcibusid.

Added support for virtual nics as well. This required refactoring the networking 
functions significantly, so hopefully nothing breaks for existing systems. It 
should in theory be more robust now than it was before, with more accurate 
output, particularly with multiple port devices, like two port nics etc.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 08 Aug 2014 10:17:52 -0700

================================================================================
Version: 2.1.28
Patch: 00
Date:  2014-05-05
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Adding tentative desktop id for LXQt, but I don't 
think that this method will be super long lived, I expect LXDE to change how it 
shows itself to the system when the gtk variant goes away. Good for lxde by the 
way in dumping gtk.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 05 May 2014 12:11:27 -0700

================================================================================
Version: 2.1.27
Patch: 00
Date:  2014-05-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Should be almost no changes for linux platforms, 
though I added in an abstracted kernel_compiler method, not just gcc, that may 
work on freeBSD, and in the future, it may also work if distros or kernel people 
start using either clang or LLVM-GCC or LLVM for compiling linux kernels. I'd 
need some data sets to show that however before adding that full linux kernel 
support, but the framework is now there.

That continues the abstraction of certain features, like kernel compiler, init 
system, display server. Display server still needs full data sets from 
mir/wayland, at least wayland, and the BSD display servers as well, I have no 
idea how to get that data at this point, but the starting framework is present 
anyway for that time I get those datasets.

Almost all these changes are for darwin osx, and that is about all I will do for 
that junky broken platform, they have no tools, they have no discipline when it 
comes to following unix like conventions, they even use spaces in program names, 
like windows.

Given it has no native lspci or pciconf tool that I am aware of, or dmesg.boot, 
there's little point in putting more time into it. dmidecode does not run on 
darwin, so there's nothing to learn there either, you can get a silly 3rd party 
program to generate a dmidecode.bin data file that dmidecode can then read, but 
since that requires not one, but two third party programs be installed, that's 
not going to happen.

Next time an osx user calls this system 'unix' I will laugh. 

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 02 May 2014 12:44:38 -0700

================================================================================
Version: 2.1.26
Patch: 00
Date:  2014-05-01
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Maintainer: this is only for BSD darwin (aka osx, it's 
an experiment, just to get it running, so you can all ignore this release.

Added in darwin cpu, init, distro version support, and updated inxi to support 
darwin/osx without exiting. 

No linux changes.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 01 May 2014 13:32:21 -0700

================================================================================
Version: 2.1.25
Patch: 00
Date:  2014-04-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, new tarball. On consideration, I'm not using temp3, that is 
simply not reliable enough and leads I think to more false readings than right 
ones.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Apr 2014 14:47:41 -0700

================================================================================
Version: 2.1.25
Patch: 00
Date:  2014-04-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This fixes a possible bug with using --total to 
calculate disk used percentage, there are too many possible remote file systems 
to safely exclude, so sticking with using the test that partition is /dev 
mounted.

Howeve, did add excludes of nfs/smbfs types, as well as future BSD excludes of 
those.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Apr 2014 14:23:39 -0700

================================================================================
Version: 2.1.24
Patch: 00
Date:  2014-04-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Quick fix, new tarball, no new version. This fixes a -D size used error, if nfs, 
nfs4, smbfs are mounted, inxi included those in the disk space used, creating 
insane used errors.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Apr 2014 14:12:50 -0700

================================================================================
Version: 2.1.24
Patch: 00
Date:  2014-04-28
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This is an attempt to make -s accurate more of the 
time, particularly with fringe or broken sensors outputs. See inxi issue 58 for 
details. http://code.google.com/p/inxi/issues/detail?id=58

Added temp3, and an override to capture cases where temp3 is the actual cpu 
temp.

Added PECI overrides for cases like msi/asus mobos have defective CPUTIN return 
data.

Added core0 overrides as well, for cases where the temp returned is too low.

It is absolutely 100% guaranteed that these changes will break some outputs that 
were working, but it's also certain that I believe that more wrong outputs will 
be corrected.

With sensors, really the only way you can get reliable sensors is to use the 
lm-sensors config files for your motherboard, then set: CPU: temp and MB: temp 
explicitly.

inxi will always use CPU: or MB: to override anything found.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Apr 2014 13:17:53 -0700

================================================================================
Version: 2.1.23
Patch: 00
Date:  2014-04-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man. Found a pesky bug with false disk used 
results.

It turns out I'd neglected to include /dev/disk partitions, oops, in the df 
data.

Since this is a long time bug, it warrants a new release even though I just did 
2.1.22.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 27 Apr 2014 15:55:20 -0700

================================================================================
Version: 2.1.22
Patch: 00
Date:  2014-04-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Quick update to -D, now inxi uses the total partition swap space to calculate 
the disk used percentage as well. Since swap space is not available as disk 
space, it makes sense to me to count it as used. -P/-p show the percent of swap 
used as well.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 27 Apr 2014 14:41:06 -0700

================================================================================
Version: 2.1.22
Patch: 00
Date:  2014-04-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. A bug fix for btrfs, which does not internally use 
/dev/sdx[number] to identify a partition, but rather the basic /dev/sdc for 
example.

This made -D show wrong disk used percentage.

Also, I added --total for df that have that supported, there is however an 
oddity which you can see here:

df  --total  -P -T --exclude-type=aufs --exclude-type=devfs \
--exclude-type=devtmpfs --exclude-type=fdescfs --exclude-type=iso9660 \
--exclude-type=linprocfs --exclude-type=procfs --exclude-type=squashfs \
--exclude-type=sysfs --exclude-type=tmpfs --exclude-type=unionfs | \
awk 'BEGIN {total=0} !/total/ {total = total + $4 }END {print total}'
result:
614562236

df  --total  -P -T --exclude-type=aufs --exclude-type=devfs \
--exclude-type=devtmpfs --exclude-type=fdescfs --exclude-type=iso9660 \
--exclude-type=linprocfs --exclude-type=procfs --exclude-type=squashfs \
--exclude-type=sysfs --exclude-type=tmpfs --exclude-type=unionfs | \
awk 'BEGIN {total=0} /^total/ {total = total + $4 }END {print total}'

result:
614562228

 df  -P -T --exclude-type=aufs --exclude-type=devfs --exclude-type=devtmpfs  \
 --exclude-type=fdescfs --exclude-type=iso9660 --exclude-type=linprocfs \
 --exclude-type=procfs --exclude-type=squashfs --exclude-type=sysfs \
 --exclude-type=tmpfs --exclude-type=unionfs | awk 'BEGIN {total=0} \
 {total = total + $4 }END {print total}'

 result:
 614562236
 
 In my tests, using --total gives a greater disk user percentage than adding the 
results up manually, as inxi did before, and still does for systems without 
--total for df.
 
 df  --total  -P -T --exclude-type=aufs --exclude-type=devfs \
 --exclude-type=devtmpfs --exclude-type=fdescfs --exclude-type=iso9660 \
 --exclude-type=linprocfs --exclude-type=procfs --exclude-type=squashfs \
 --exclude-type=sysfs --exclude-type=tmpfs --exclude-type=unionfs
 
Filesystem Type 1024-blocks      Used Available Capacity Mounted on
/dev/disk/by-label/root-data\
           ext3    12479556  12015624    335816      98% /
/dev/sdc9  ext3    20410156  18013360   1979432      91% /home
/dev/sdc7  ext3     4904448   3785460   1016672      79% /media/sdb2
/dev/sdc5  ext3    30382896  27467220   2295720      93% /var/www/m
/dev/sdc8  ext3    61294356  41849300  18196972      70% /home/me/1
/dev/sdb1  ext3   307532728 285159432  20810456      94% /home/me/2
/dev/sdd1  ext3    26789720  18153076   7542620      71% /home/me/3
/dev/sdd2  ext3   213310776 206932912   2040960     100% /home/me/4
/dev/sda7  ext3    10138204   1185772   8434348      13% /home/me/5
total      -      687242840 614562156  62652996      91% -

Strange, no? the data is in blocks, and it should of course in theory add up to 
exactly the same thing. However, because --total lets df do the math, I'm going 
to use that for now, unless someone can show it's not good.

inxi still falls back for BSDs and older df to the standard method.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 27 Apr 2014 12:49:06 -0700

================================================================================
Version: 2.1.21
Patch: 00
Date:  2014-04-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball, small update, added hopefully firewire support to drive type id.

That's searching for ieee1394- hopefully that will do it.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 24 Apr 2014 13:22:51 -0700

================================================================================
Version: 2.1.21
Patch: 00
Date:  2014-04-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This fixes one small oversight, placing USB in front of 
ID-[x] of disk drive lists. Was showing USB ID-1: /dev/sde now shows: ID-1: USB 
/dev/sde that is more intuitive and keeps the columns in alignment more or less, 
easier to read.

Second, fixes a bug with some file systems / usb drives
where they do not use usb- in the /dev/disk/by-id line but only wwn-

https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/5/\
html/Online_Storage_Reconfiguration_Guide/persistent_naming.html

explains it somewhat.

the fix is adding a second if null test of the device /dev/sdx in by-path, that 
seems to fix the issue. by-path does have the usb- item, though it does not have 
the name so it's not as reliable in absolute terms, but it's fine as a second 
step fallback option.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 24 Apr 2014 11:47:08 -0700

================================================================================
Version: 2.1.20
Patch: 00
Date:  2014-04-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

While this release has some new features, they are all intended for development 
use for the next major feature, -m / memory, so there is no particular reason to 
package this release. There is a new development option, -! 33, which lets me 
override /sys data use for -M, which is useful to debug dmidecode output for -m 
and other features.

No new version, new man. There may be a few more of these releases, but 
functionally there is no particular reason to make a new package if you are a 
maintainer, so there is no new version number. This release is a preparation for 
some branches/one/inxi tests that will be run in the future.

The man/help document -! 33 just to have it there, but it should make no 
difference to anyone but me at this stage.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 14 Apr 2014 13:31:24 -0700

================================================================================
Version: 2.1.20
Patch: 00
Date:  2014-04-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

A few fixes to 2.1.20, bmips broke in some cases, that's fixed now. Also changed 
the way to handle bad ARM data, when bogomips are too low, < 50, we try to get 
the data from /sys, but now this runs on all the cores, so it may work as well 
on the multicore arm if the /proc/cpuinfo has bogomip that is too low and no cpu 
frequency.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 09 Apr 2014 00:09:49 -0700

================================================================================
Version: 2.1.20
Patch: 00
Date:  2014-04-08
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, ARM cpu /proc/cpuinfo has broken the bogomips output, 
since this is an upstream bug, I'm adding in a quick hack that will work maybe 
for single core ARM cpus, but NOT for multicores that have the same issue.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 08 Apr 2014 17:15:41 -0700

================================================================================
Version: 2.1.19
Patch: 00
Date:  2014-04-06
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball, correction of loop counts for -p/-P ID-<number>, this 
requires a third counter to get all the stuff right. Sorry about the extra 
release, that's life.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 06 Apr 2014 14:33:46 -0700

================================================================================
Version: 2.1.18
Patch: 00
Date:  2014-04-04
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version/tarball. This completes, I think, the line wrap update. -o is now 
handled, unmounted drives.

IMPORTANT: some distros use inxi for detecting partitions, the syntax on the 
following have changed slightly:

HDD: per drive changes from: 1: id: to ID-1:
Partitions: per partition changes from ID: to ID-1:
Unmounted partitions: per unmounted changes from ID: to ID-1

You see the pattern, they are all the same now, and they are all numbered. I 
think this is easier to read when scanning long lines of drives/partitions, or 
even short ones.

Also fixed a long standing oddity, not a bug, but for some weird reason, -p did 
not include the location, like /dev/sda1, unless -l or -u were used. That makes 
no sense so I have moved the dev/remote location output to standard -p/-P

Except for bug fixes, this completes the overally line wrap update, all lines 
wrap, you can set widths with -y now, and the old issue of not fitting nicely 
into 80 column wide widths is solved. Note that in some areas, p/P for example, 
at times if the mount point or remote location is very long the line may still 
wrap, but making this perfect is too convoluted so I'm calling it good enough 
now, all lines are handled reasonably well, certainly radically better than 
before 2.1.0.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 04 Apr 2014 11:08:25 -0700

================================================================================
Version: 2.1.17
Patch: 00
Date:  2014-04-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page, new tarball. Added -y [integer >= 80] option. This 
allows for absolute override of width settings. This overrides any dynamically 
detected widths, as well as the globals:

COLS_MAX_CONSOLE='115'
COLS_MAX_IRC='105'

Now that inxi widths are largely dynamic in terminal, with a few lingering 
exceptions, it made sense to also allow for overrides of this. This is useful in 
cases where for example you want to output inxi to text file or for other 
purposes, or if you just want to test the widths, as in my case.

-y cannot be used with --recommends, but otherwise it works fine, with --help/-c 
94-99 you have to put -y first in the list of options.

Example: inxi -v7 -y150 > inxi.txt will ignore the terminal settings and output 
the lines at basically max length.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 03 Apr 2014 10:41:07 -0700

================================================================================
Version: 2.1.16
Patch: 00
Date:  2014-04-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. This fix only impacts BSD sed, but it fixes the line 
length failure issue because BSD sed doesn't work with \x1b, but it does when 
you do:

ESC=$(echo | tr '\n' '\033' )

I found this trick on:
http://unix.stackexchange.com/questions/42321/how-can-i-instruct-BSD-sed-to-\
interpret-escape-sequences-like-n-and-t

No other changes. Non BSD users, you can ignore this.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 02 Apr 2014 21:24:52 -0700

================================================================================
Version: 2.1.15
Patch: 00
Date:  2014-04-01
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version/tarball. This corrects some subtle issues with line wraps:

Audio -A - now wrap is fully dynamic down to 80 characters, and also the 
expansion of ALSA to Advanced Linux Sound System only happens if that fits in 
the display width.

-N/-n/-i - Most networking/ip address stuff wraps now.

-d - optical drive data wraps better now too.

This more or less completes the line wrap redo.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 01 Apr 2014 12:39:44 -0700

================================================================================
Version: 2.1.14
Patch: 00
Date:  2014-03-31
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Forgot, added slitaz-release to distros derived. that's as slackware derived 
one.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 31 Mar 2014 18:10:02 -0700

================================================================================
Version: 2.1.14
Patch: 00
Date:  2014-03-31
--------------------------------------------------------------------------------
RELEASE NOTES:
-------------------------------------------------------------------------------- 

New version/tarball. Tiny fix in debugger, it turns out that in some systems, 
the command: strings --version used in the debugger results in a hang, which you 
can duplicate with: "strings" alone, without any argument or info, that will 
hang too, so I assume if the system doesn't have the --version parameter, 
strings ignores that, and basically just does what it would do with no option, 
hang.

Thanks for user ypharis persistence in tracking down this issue. So far only 
appeared on slackware based distros, but since the debugger should 'just work', 
removing the version test.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 31 Mar 2014 17:49:48 -0700

================================================================================
Version: 2.1.13
Patch: 00
Date:  2014-03-30
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, only relevant to Porteus distro, a slackware derived distro, should 
now id it correctly. No other changes.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 30 Mar 2014 11:54:12 -0700

================================================================================
Version: 2.1.12
Patch: 00
Date:  2014-03-27
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, fixed zfs raid failure to report raid devices on some systems. 
Added wrapping for -D disk option. Note that -d is not correctly wrapping 
because the lines are too long with extra data, but it's ok for now.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 27 Mar 2014 15:33:33 -0700

================================================================================
Version: 2.1.11
Patch: 00
Date:  2014-03-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Ignore change 2.1.12, the speed data was too inconsistent, using >>> since it's 
cleaner and seems to be faster on some cpus, slower on others.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 26 Mar 2014 15:28:08 -0700

================================================================================
Version: 2.1.12
Patch: 00
Date:  2014-03-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version: this is only an optimization release, testing some slightly more 
efficient methods:
something <<<  $variable is signficantly slower than: echo $variable | something
so I replaced almost all instances of <<< with echo ...|

I've seen speed differences of up to 10% but it's not consistent, so this is 
just something to boost performance slightly on older systems I'd guess.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 26 Mar 2014 14:54:39 -0700

================================================================================
Version: 2.1.11
Patch: 00
Date:  2014-03-26
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version: fixed an old bug, with -c 0, no colors, RED and NORMAL color codes 
were not set to null, which results in some cases with red output, along with 
turning terminal/console font color red.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 26 Mar 2014 12:44:53 -0700

================================================================================
Version: 2.1.10
Patch: 00
Date:  2014-03-25
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version; added supybot/limnoria/gribble support. This only works when the 
supybot 'SHELL' command is used, 'CALL' gives the user irc client data, and 
supybot etc are not detectable.

Fine tuned some error message lengths so they fit into 80 columns or so.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 25 Mar 2014 13:55:13 -0700

================================================================================
Version: 2.1.9
Patch: 00
Date:  2014-03-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, fixed cpu core speed wrapping, improved -p and -P wrapping, though 
some lines will still be too long, but not as many.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 24 Mar 2014 18:42:06 -0700

================================================================================
Version: 2.1.8
Patch: 00
Date:  2014-03-24
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Added dynamic wrapping to -G, and also am now wrapping -C per cpu 
cores speeds, for systems with a lot of them, that will clean up the output.

Added dynamic wrapping to --recommends and -c 94-99.

These are the main things, there's a few smaller issues with -xx output on 
-N/-n/-i but those will noly really show with full output and it takes a while 
to get this stuff stable so maybe some other time, but it's ok for now.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 24 Mar 2014 16:58:33 -0700

================================================================================
Version: 2.1.7
Patch: 00
Date:  2014-03-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, attempt 2 at detecting all possible syntaxes for cards. Now using
the bus id itself to determine if the:
VGA compatible controller
3D controller
Display Controller
refer to separate chips or the same one.

Bus id gives the data needed, because the video chip, the real card, that is, is 
on for example 00:05.0 the trailing .0 is the key, that's the actual card.

The audio or display controller for the same card would be for example: 00:05.1

I don't know if this is fully reliable, but it will have to do, either some 
cards as is get missed, or some cards get double id'ed, unless I use a hack like 
this.

There's nothing else I can find but the bus id to determine that it's the same 
physical device or not.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 18 Mar 2014 21:18:27 -0700

================================================================================
Version: 2.1.6
Patch: 00
Date:  2014-03-18
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, bug fix, adding 3D controller to output causes doubled card id in 
some cases.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 18 Mar 2014 19:17:55 -0700

================================================================================
Version: 2.1.5
Patch: 00
Date:  2014-03-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, serious bug fix, do NOT use 2.1.4, it will fail to start. Bad 
copy/paste.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 18 Mar 2014 01:30:53 -0700

================================================================================
Version: 2.1.4
Patch: 00
Date:  2014-03-17
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Some BSD fixes, and a more important fix, added 'display 
controller' to graphics card detection, that's a new one on me. Dual card 
systems might use this.

00:02.0 Display controller: Intel Corporation 82865G Integrated Graphics 
Controller (rev 02)

01:00.0 VGA compatible controller: NVIDIA Corporation NV44A [GeForce 6200] (rev 
a1)

Some more switches to bash native methods as well.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 17 Mar 2014 19:23:42 -0700

================================================================================
Version: 2.1.3
Patch: 00
Date:  2014-03-15
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Big set of RELEASE NOTES: changed all ver: and version: to v:; changed 
all bash ${var} to $var where appropriate to avoid extra overhead of ${..}; 
removed 'basename' and replaced with ${path##*/} which avoids unnessary 
subshells.

Fixed dynamic line wraps on -I and -S lines, now those in most cases will work 
well down to 80 cols. 

Fixed bug in optical drives, at some point in the last few years, the kernel in 
/sys changed the path to the optical drive data, added in /ata8/ (example) so 
both methods are now handled. This should fix a lot of failures to show optical 
drive brand name etc.

Added weechat detection, trying also supybot/limnoria detection in irc client 
version. There was weechat-curses, but I guess they finally dropped the -curses. 
Limnoria is a fork of supybot but still uses the supybot program name, but added 
in limnoria too if they get around to changing that.

More dynamic sizing tweaks, more optimization of code. Discovered that dipping 
into gawk is almost 250x more expensive in terms of execution time than using 
bash variable. Will change to use bash directly as time goes along where it's 
safe and accurate.

Added handling to support /run paths using directories, like /run/gdm/gdm.pid 
for dm data.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 16 Mar 2014 15:09:40 -0700

================================================================================
Version: 2.1.2
Patch: 00
Date:  2014-03-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, just added wrapper around tput cols so only use it if in 
terminal

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 15 Mar 2014 10:53:17 -0700

================================================================================
Version: 2.1.2
Patch: 00
Date:  2014-03-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version. Updated dynamic sizing, fixed some glitches in cpu flags, fixed 
bugs in cpu main. Cleaned up a few more variable and width issues. Used a few 
more ${#var} for counting.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 14 Mar 2014 20:39:13 -0700

================================================================================
Version: 2.1.1
Patch: 00
Date:  2014-03-14
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New Version, new man. This continues the dyanamic line sizing, I'm doing these 
one at a time to make it easier to test stuff one by one.

Full refactoring/reordering of top global variables, moved user/maintainer set 
variables to top, and clearly identify all globals.

Changed LINE_MAX to COL_MAX but all user configuration files will stay working 
since inxi now will check for that and translate them to the new variable names.

New lines fixed, -C cpu and -f cpu plus full flags. Flags output is now fully 
dynamic to display screen in terminal/console. Moved cpu short flags to -x 
because it's not that important in general and just clutters things up in my 
opinion.

Print flags/bogomips on separate line if line greater than display width.

The rest of the lines will get a similar treatment, but it takes a bit of trial 
and error for each line to get it working right.

Note that IRC line lengths are NOT dyanamic unless I can find a way to determine 
the column width of irc clients, but that won't be accurate since fonts vary in 
widths for each character.

CPU was the worst offender in my opinion in terms of regular output wrapping to 
new line messily, next will be the things with ports/chip id/card id.

Tightened up a bit more the dyanamic help / version output handler.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 14 Mar 2014 13:14:51 -0700

================================================================================
Version: 2.1.0
Patch: 00
Date:  2014-03-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new man page. Finally, after all these years, dynamically resized 
to terminal window column width help/version outputs. There is a significant 
slowdown to achieve this, but I've optimized it as much as I could so it should 
be acceptable for most users now.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 13 Mar 2014 19:26:32 -0700

================================================================================
Version: 2.0.0
Patch: 00
Date:  2014-03-12
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New feature, not new line option though. Now shows init type with -x (also shows 
rc type if openrc). -xx shows init / rc version number. Change runlevel to 
target if systemd and if non numeric runlevel given. Should support 
systemd/upstart/epoch/runit sysvinit. Supports openrc as extra data if it's 
present. Rearranged -I line a bit but really just exchanged Runlevel: for Init: 
v: Runlevel: default:

This is the first step, some of the init system ID methods are weak and non 
robust and this may need to be revised, but it should for now identify 
systemd/upstart quite accurately, and in most cases sysvinit. Note that to get 
sysvinit version number requires tool: strings which in debian/ubuntu is in 
package binutils. I don't know the package names for arch/fedora/etc for the 
recommends check tool in inxi yet.

I believe this will be good enough for a first draft version, but over time 
we'll get it more fine tuned, but as it is now, it should cover at least 99% of 
users, which isn't bad.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 12 Mar 2014 17:12:11 -0700

================================================================================
Version: 1.9.19
Patch: 00
Date:  2014-03-03
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version; updated man page. Changed slightly the output for x server, in 
preparation for adding alternate display servers, like Wayland or Mir. Rather 
than release all the stuff at once I'm going to do it bit by bit. Currently I 
have not found a wayland iso test cd that boots in virtual box so I will have to 
wait to really add support there.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 03 Mar 2014 15:27:05 -0800

================================================================================
Version: 1.9.18
Patch: 00
Date:  2014-01-13
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version; new tarball; new man page. Added Unity desktop support; added -xx 
feature to show default runlevel, using systemd/upstart/sysvinit type default 
tests.

Fixed gtk library version detections, now will support dpkg/pacman version 
tests, which should give more data to more people than previously, where the old 
tests usually would return null unless gtk dev packages were installed on the 
system.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 13 Jan 2014 14:57:38 -0800

================================================================================
Version: 1.9.17
Patch: 00
Date:  2013-12-02
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed new gnome change, they, of course, removed 
gnome-about and so version numbers failed. Now first trying gnome-session to get 
version number.

Also, there's a bug in at least gtk detection in opensuse, not sure what it is, 
they could be using a different syntax for the test: pkg-config --modversion 
gtk+-3.0

returns no such package on gnome 3.10 installs, but I have no idea what package 
name to test for there in this case.

So leaving gtk version bugs unhandled due to no user information or feedback, if 
you want it fixed or if it works for your distro, let me know and also if it 
does not work, tell me the correct commmand, with its output, to get gtk 
version.

That's for inxi -Sx output that is.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 02 Dec 2013 13:48:35 -0800

================================================================================
Version: 1.9.16
Patch: 00
Date:  October 6 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Only for uprmq distros, small update to add support 
for another repo type output, the initial listing was not complete of possible 
syntaxes. Now handles: 

Nonfree Updates (Local19) 
/mnt/data/mirrors/mageia/distrib/cauldron/x86_64/media/nonfree/updates

as well, apparently that is a possible output format in certain cases with 
urpmq.

Non urpmq distros ignore this update, there are no other actual changes.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 06 Oct 2013 11:06:36 -0700

================================================================================
Version: 1.9.15
Patch: 00
Date:  October 4 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Added urpmq for -r. 

Other distros than Mandriva, Mageia, no other changes so no need to update 
unless you want to.

This adds support for Mandriva, Mageia. urpmq parsing is similar but not 
identical to pisi.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 04 Oct 2013 18:24:55 -0700

================================================================================
Version: 1.9.14
Patch: 00
Date:  September 10 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

This does not have a new version number (there is a new date), and is only for 
solusos, so all other distro maintainer can ignore this update. New tarball. 
Adds support for solusos-release distro file in /etc/.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 10 Sep 2013 10:49:29 -0700

================================================================================
Version: 1.9.14
Patch: 00
Date:  August 20 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed a bug / issue with failed usb nic detection, 
amazingly, the regex in inxi failed to check for Ethernet.*Adapter, heh. Most 
usb nics are wifi, so I guess ethernet just escaped me.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 20 Aug 2013 12:26:10 -0700

================================================================================
Version: 1.9.13
Patch: 00
Date:  August 12 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed a bug in Xorg where it shows drivers as unloaded 
when they are actually loaded. Since we can't fix xorg, inxi will try to work 
around this bug by validating one step further in the Xorg.0.log data, to 
confirm that drivers noted as loaded/unloaded/failed are actually running the 
display(s) of the system.

There is a possible case of error that might happen due to this change in the 
case of a system with a complex xorg that uses two drivers/modules to run two 
different displays, ie, nvidia on one, and amd on the other, for example, or 
intel/nvidia, etc. However, if that bug appears, we'll get that data set of 
debugging output and fix it at that point. 

This fix repairs an existing xorg bug that is unlikely to get fixed any time 
soon (the call to load the detected drivers, eg, vesa, intel, is repeated, 
causing a failure of driver already loaded on the second occurance.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 12 Aug 2013 16:20:51 -0700

================================================================================
Version: 1.9.12
Patch: 00
Date:  July 2 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Tiny change, no new version, removed a stray 's' line 4306 that may have made 
certain distro ids get slightly corrupted, but this is so trivial just fixing 
it, new tarball.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 13 Jul 2013 11:47:48 -0700

================================================================================
Version: 1.9.12
Patch: 00
Date:  July 2 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Two new desktop/window managers added: spectrwm 
(similar to scrotwm) and herbstluftwm. Both tested and working, thanks anticap 
from Antix for doing the testing/issue report on this.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 01 Jul 2013 15:13:24 -0700

================================================================================
Version: 1.9.11
Patch: 00
Date:  June 19 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. The recent bug fixes reminded me to check for ARM 
working, that had some bugs too, so I've updated that. -f for ARM now shows 
features instead of flags, and the -C regular cpu output does not show 
cache/flags for arm cpus becuase they don't have those features.

Added some flags passed to various cpu functions and better detections of ARM 
cpu to handle dual core and other issues that were not handled before as well, 
or at all.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 19 Jun 2013 19:14:10 -0700

================================================================================
Version: 1.9.10
Patch: 00
Date:  June 19 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Another stab at finally fixing the cpu / core count 
failures on fringe cases. This required fixing some core logic assumptions that 
are not currently correct, particularly on two cases, some xeon cpus fail to 
show core id for each core, showing 0 for all of them, second, vm cpus do not 
show physical ids at all for at least intel, nor do they show core id. 

While we can't get HT totally reliable, particularly for vm xeon, since inxi has 
no way to know in that case if a core is attached to a physical core or a 
virtual one, all of them being virtual in that case, but still inxi is now 
reporting the correct number of cores, or threads in vm xeons, and is not 
showing multicore cpus as single core, which was the main issue.

This required redoing the counter logic for the cpu/core/physical arrays, now 
they are set independently, and can handle any of the others not being set, 
without creating an error or failure condition.

Also added in last check for a certain intel case where core id is 0 but > 1 
physical cores exist, that now also shows the correct cpu / core count.

While this is tested on many data sets of proc cpuinfo, it's still possible 
there is a fringe case I have not seen that will trigger yet another unexpected 
behavior.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 19 Jun 2013 17:22:42 -0700

================================================================================
Version: 1.9.9
Patch: 00
Date:  June 16 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Added support for openSUSE repo syntax/location, as 
long as it's zypp or yum it will work. If it's both then it will show only one I 
believe, if that's a possible scenario, no idea.

Added one more fix for those pesky intel vm cpu core errors, now if 
/proc/cpuinfo shows no siblings at all, and no core_id, but does have physical 
id, it will use the count for physical id as a default for core count.

Not perfect, but better than calling a dual core cpu a single core.

There's still a lot of mysteries with vm versions of kvm cpus, for example, if 
you see a dual core xeon, is that actually one core with ht, or two cores? There 
is no way to find that information out that I can see that is
reliable.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 16 Jun 2013 13:56:28 -0700

================================================================================
Version: 1.9.8
Patch: 00
Date:  June 14 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Some subtle bug fixes, a kvm virtual machine uses disk 
id in /proc/partitions of 253, which made the disk totals fail to show up at 
all. Added that in.

Moved sourcing of configuration files to right after initialize_data so that 
some variables can be forced to different values before the next set of 
system/app checks.

This is to allow specifically turning off, for some headless servers where 
$DISPLAY is not null due to a bash configuration bug, these: 
B_SHOW_X_DATA='false' B_RUNNING_IN_X='false'

Setting those two to false in inxi.conf will turn off all the X checks etc even 
if the $DISPLAY is set to non null.

Added in support for ksplice kernel version, requires installed uptrack-uname, 
if that is present and if uptrack-name kernel version is different from uname 
then it will add (ksplice) to kernel version string, and use ksplice kernel 
version. Also created a single function get_kernel_version for use by short 
form/long form inxi output.

For intel xeon cpus, trying a work around for a bug in /proc/cpuinfo which fails 
to show core_id or physical_id for cpus, using siblings / 2 for xeons with no 
actual core counts.

Fixed a bug that made fixes for multimounted partitions fail for disk used. 
Added in support for also excluding single partitions mounted to different 
places.

Also fixed grsec kernel different handling of partitions in /proc/partition and 
df -hTP, doesn't use standard partition numbering. This can't be perfect because 
inxi cannot know what the actual disk sizes are, but it's an ok guess. example: 
/dev/xvdac (uses 'c' instead of '3' for partition, and does not show anything 
for disk itself.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 14 Jun 2013 12:36:57 -0700

================================================================================
Version: 1.9.7
Patch: 00
Date:  May 25 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball, version, man page. Improved remote weather, now it uses -W, and 
deprecated -! location=..

That was too hard to type and too hard to remember. Also do more dyanamic 
reordering of weather output, depending on how much data is present, and how 
many x options are used.

Added error handling for generic deprecated options, and for options that do not 
have the correct syntax for OPTARG, like with -W.

This should about do it for the weather option for now unless I missed something 
somewhere.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 25 May 2013 20:16:01 -0700

================================================================================
Version: 1.9.6
Patch: 00
Date:  May 19 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Bug fix, overly loose regex removed na from country / 
state / city strings, like nashville.

--------------------------------------------------------------------------------
-- Harald Hope - Sun, 19 May 2013 20:06:44 -0700

================================================================================
Version: 1.9.5
Patch: 00
Date:  May 18 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed some lintian issues in man page, changed 
man/help for -! location= option, to indicate that users must replace space with 
+ themselves.

Because of how bash handles these options, inxi cannot add in + signs itself 
automatically.

This should be closer to cleanup of this new feature.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 18 May 2013 10:50:06 -0700

================================================================================
Version: 1.9.04
Patch: 00
Date:  May 17 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Fixed issue with spaces in names for cities / states / 
countries, added man and help instructions to remove spaces and examples.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 May 2013 22:35:59 -0700

================================================================================
Version: 1.9.03
Patch: 00
Date:  May 17 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball, version, bug fixes on weather, also optimized speed for slow isps, 
and added a global that can be set in user / system configs to make a longer 
wget time out. Default is 8 seconds.

This should take care of the failure from slow load issue reported.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 May 2013 22:07:29 -0700

================================================================================
Version: 1.9.02
Patch: 00
Date:  May 17 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, bug fix for weather.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 May 2013 21:10:21 -0700

================================================================================
Version: 1.9.01
Patch: 00
Date:  May 17 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball, version. Bug fix on -! location=, forgot to have it pack its own 
location array, that's now correct.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 May 2013 20:17:32 -0700

================================================================================
Version: 1.9.00
Patch: 00
Date:  May 17 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. Unless disabled by distribution 
maintainers, offers weather -w option. With -x, -xx-, -xxx, shows more 
information. Basic line is just weather and system time there. -x adds time 
zone, which is useful for servers, particurly web servers. -x also adds wind 
speed. -xx adds humidity and barometric pressure. -xxx adds a possible new line, 
if data is available, heat index, wind chill, and dew point. -xxx also adds a 
line for location (blocked by irc/-z) / weather observation time.

-z filter applies as usual to location data, removes it in irc by default. -Z 
overrides override.

The api this uses is probably going to be dropped at some point, so this is just 
going to work while it works, then it will need to be updated at some point, so 
don't get very attached to it.

Also adds option to, with -w: -! location=<location string> This lets users send 
an alternate location using either <city,state> or <postal code> or 
<latitude,longitude> (commas for city,state and latitude,longitude are not 
optional, and the order must be as listed.

If There is a developer flag if distro maintainers do not want this enabled, 
simply set: B_ALLOW_WEATHER='false' before packaging and the weather feature 
will be disabled.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 17 May 2013 18:47:24 -0700

================================================================================
Version: 1.8.47
Patch: 00
Date:  May 3 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Made separators surround the partition id, that avoids 
any possible errors with detections, also added in missing detection for 
separator.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 03 May 2013 15:41:26 -0700

================================================================================
Version: 1.8.46
Patch: 00
Date:  May 3 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. Fixed a small issue that would create a wrong reporting of 
disk useage if bind mounts are used, ie, multiple binds to a single mount. Now 
inxi will check a list of the previously used partitions before adding the size 
of the used space to the total used, if the partition has already been used it 
will skip it. This was/is a quick and dirty fix, but it's totally fine I believe 
and should resolve two separate issues:

1. use of bind mount method, where multiple partition names are bound to the 
same partition 2. accidental dual mounting to the same partition.

partitions section will still show the same data, ie, if bind is used, it will 
show all the bind mounts even when they are attached/bound to a partition that 
is already listed. This seems useful information, though maybe we can get the 
key word 'bind' in there somehow, but for now I won't worry about that issue, 
that's just a nice to have, not a bug.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 03 May 2013 13:52:44 -0700

================================================================================
Version: 1.8.45
Patch: 00
Date:  March 2 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, tarball. As always with fixes, one thing creates a bug in another. 
Fixed linux driver version handling, now only trimming off number from BSD 
drivers.

Some linux drivers, like tg3 for broadcom ethernet, have numbers ending them. So 
this is a bug fix for 1.8.44 release mainly.

Also includes openBSD initial fixes for some issues related to sysctl parsing 
for cpu and ram.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 02 Mar 2013 09:44:17 -0800

================================================================================
Version: 1.8.44
Patch: 00
Date:  February 28 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change, just added 'chipset' to banlist to filter out.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 28 Feb 2013 22:14:33 -0800

================================================================================
Version: 1.8.44
Patch: 00
Date:  February 28 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This version brings the -A, -G, -N, -n, -i pci data to 
BSD. Using a pciconf parser to do most of the heavy lifting in this one.

Two functions do the main pci card processing for audio, graphics, and 
networking.

All seems to be shipshape and working, tested on freeBSD 7.3, 9.0, and 9.1 and 
the output is consistent.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 28 Feb 2013 21:50:57 -0800

================================================================================
Version: 1.8.43
Patch: 00
Date:  February 28 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Improved B_ALLOW_UPDATES handling, now if set to 
false, turns off all -h and -H menu options for updating. Also triggers an error 
message if you use -U or -! <10-16/http://>.

Distro maintainers, take note, if you used the B_ALLOW_UPDATES flag, you no 
longer need to change the code anywhere, the error messages and blocking the -h 
output for update features is automatic as soon as the flag is set to 'false'.

I needed to change the -! handling because -! is now also being used for extra 
features like -! 31 and -! 32 and probably more stuff in the future, plus the -! 
30 used by things like the inxi gui tool being worked on by trash80.

Also included in this version are more BSD changes, including initial function 
for pciconf data parsing, this will be used for -A, -G, and -N options for card 
data.

Further BSD improvements are better error/no data available messages for -D and 
-o.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 28 Feb 2013 15:30:07 -0800

================================================================================
Version: 1.8.42
Patch: 00
Date:  February 27 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, small bug fix, inxi failed to add in md raid partition size data to 
HDD used data.

The hdd used still fails to properly calculate the actual raid sizes but that's 
a bit too tricky to do easily so will leave that for some other time.

Also added in more hdd used partition types for BSDs, wd and ad type drivers for 
disks.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Feb 2013 23:13:00 -0800

================================================================================
Version: 1.8.41
Patch: 00
Date:  February 27 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small change, new tarball, added some excludes items to unmounted list, scd, 
dvdrw, cdrw.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Feb 2013 22:26:32 -0800

================================================================================
Version: 1.8.41
Patch: 00
Date:  February 27 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, updated man page. A bug fix for an old time bug: with mdraid, -o 
(unmounted partitions) would show components of the md raid array as unmounted 
partitions.

This is of course incorrect, and is now fixed. 

Small update of man page as well to note that -o will not show components of 
mdraid arrays.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Feb 2013 22:09:32 -0800

================================================================================
Version: 1.8.40
Patch: 00
Date:  February 27 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, bug fix for mdraid, and cleaned up some errors and weak spots in 
component output for mdraid. Certain conditions would trigger a false return for 
raid components, now it shows more explicitly the online/spare/failed data so 
it's clear. Also shows 'none' for online if none are detected.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Feb 2013 14:00:46 -0800

================================================================================
Version: 1.8.39
Patch: 00
Date:  February 27 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, updated man page. Completed zfs raid support for BSDs, now include 
component status as with mdraid, will show offline/failed devices as well in 
standard output.

Updated help and man page to reflect the difference between -R, -Rx, and -Rxx 
output for zfs / mdraid.

No linux inxi changes, this should not alter any behaviors in -R for mdraid, if 
it does, it's a bug, please report it.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 27 Feb 2013 12:42:02 -0800

================================================================================
Version: 1.8.38
Patch: 00
Date:  February 18 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, updated man page, new tarball.

Fixed partition bug that could falsely identify a remote filesystem like nfs as 
/dev fs

Added two options: -! 31 - Turns off Host section of System line. This is useful 
if you want to post output from server without posting its name. -! 32 - Turns 
on Host section if it has been disabled by user configuration file 
B_SHOW_HOST='false'

Added missing CPU data message, fixed missing cpu cache/bogomips output, turned 
off bogomips if null for BSD systems because bogomips is a linux kernel feature.

Added N/A for no memory report, this would mainly hit BSD systems where user has 
no permissions to use sysctl or has no read rights for /var/run/dmesg.boot.

Many fixes for partitions, now for BSD, if available, uses gpart list to get 
uuid/label Added support for raid file system syntax in BSD, now excludes main 
raid device name, and adds a flag to raiddevice/partitionname type so output can 
identify it as a raid slice/partition.

In man page, added -! 31 / -! 32 sections, and some other small edits.

Added BSD raid line error message, added BSD sensors line error message.

Many other small bug fixes that should make linux more robust in terms of 
missing data, and better/cleaner output for BSD.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 18 Feb 2013 12:24:39 -0800

================================================================================
Version: 1.8.37
Patch: 00
Date:  February 11 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New tarball. Tiny fix for an obscure fringe case, leaving numbering as is.

In some cases, dmidecode returns the grammatically wrong message: 
'No smbios nor dmi data' instead of 'No smbios or dmi data', corrected the 
search to look for simpler: 'no smbios ' to avoid that random error.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 12 Feb 2013 09:54:51 -0800

================================================================================
Version: 1.8.37
Patch: 00
Date:  February 11 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. This update fixes a recent bug report with ancient 
dmidecode versions, that do not properly support the -s option. Now -M uses only 
one method for dmidecode, manual construction of the Machine data from the raw 
dmidecode file. The file output is also parsed a bit to make it more 
consistently reliable for inxi purposes.

This update also includes all recent BSD branch updates, including the new 
#!/usr/bin/env bash on top which lets inxi run in any environment without 
changes. Also for BSD, sets sed -i/sed -i '' global value, which means that now 
all the branches are the same, except the BSD branches will contain the most 
recent tests and BSD handling. 

As each step is reached, I'll release a new inxi that should be stable, this is 
the first one however that can be used as is, no changes, for BSD, debian 
kfreeBSD, and linux systems.

Pleasen note that most BSD features are either incomplete or missing completely 
at this point, but it's a start.

Some initial changes as well to help options to show more correct linux or BSD 
terms. These will be updated as time permits, it is a long process.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 11 Feb 2013 20:55:49 -0800

================================================================================
Version: 1.8.36
Patch: 00
Date:  February 8 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Cleaned up patch number sed cleanup that didn't work 
in BSD.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 08 Feb 2013 20:50:23 -0800

================================================================================
Version: 1.8.36
Patch: 00
Date:  February 8 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. All bug fixes and cleanup preparing to support BSD 
systems, including kfreeBSD from Debian.

Cleaned up all sed and grep that will be used by BSDs, added more granular flag 
for BSD types.

Cleaned up and corrected issues between BSD/linux, more escapes and tests added 
to drop error counts in BSDs. 

Please note that you must use the inxi from branches/BSD for true BSDs because 
sed has extra -i '' added, and has the proper #!/usr/local/bin/bash

Added -! 16 for gnuBSD download/update, that's for gnu BSD systems like 
gnu/kfreeBSD from debian.

That retains the top #!/bin/bash path, and also uses gnu sed so no -i '' syntax.

Moved some grep -o to gawk or sed to avoid using gnu grep unnecessarily, leaving 
gnu grep where it will be linux only, for example parsing a /proc file.

Fixed tty irc bugs for BSDs and linux, now should show the right console size 
for both, ideally.

--------------------------------------------------------------------------------
-- Harald Hope - Fri, 08 Feb 2013 20:36:02 -0800

================================================================================
Version: 1.8.35
Patch: 00
Date:  February 7 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Note, this is a refactor release only, and features 
the core BSD support built in, although inxi will not run in BSD unless the top: 
#!/bin/bash is changed to #!/usr/local/bin/bash

The actual BSD branch can be grabbed from: 
http://inxi.googlecode.com/svn/branches/BSD/inxi then you can keep that version 
updated using: inxi -! 15 which will grab the latest BSD version from the svn 
server.

This release also fixes a lot of small bugs that testing for BSD support 
exposed, but functionally most people should see no difference, I just want to 
get this version up because there are so many small changes that it's worth 
having a release.

I was going to have the fixed dmidecode for old systems in 1.8.35 but that will 
have to wait til 1.8.36

Linux users should see no real changes, except maybe a thing or two will work in 
certain circumstances when it didn't before, like showing MHz on ARM cpus on 
short inxi.

--------------------------------------------------------------------------------
-- Harald Hope - Thu, 07 Feb 2013 19:56:19 -0800

================================================================================
Version: 1.8.34
Patch: 00
Date:  January 28 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page.

Small change -Ixx will show running in tty if it's not in X, with tty number.

Sort of redundant to System: console: data, but that's ok, we'll live for now.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Jan 2013 16:12:45 -0800

================================================================================
Version: 1.8.33
Patch: 00
Date:  January 28 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball, new man page. Fixed an old bug where if you start inxi 
with an ssh command sometimes it will not show any client information, just the 
debugger PPID output. Now it will test as a final check to see if it can detect 
any parent to the process. Actually grandparent I believe. Seems to work, it's a 
fringe case but why not handle it?

New -xx feature, for -I it will show, if inxi is not running in IRC client and 
if is running in X, and if the grandparent is not 'login', will show the 
application the shell is running in.

Example: 
Info:      Processes: 271 Uptime: 5:36 Memory: 3255.8/4048.5MB Runlevel: 3 
           Gcc sys: 4.7.2 alt: 4.0/4.2/4.4/4.5/4.6 
           Client: Shell (bash 4.2.37 - started in konsole) inxi: 1.8.33

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 28 Jan 2013 15:57:15 -0800

================================================================================
Version: 1.8.32
Patch: 00
Date:  January 23 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Small changes to man page, updated copyright date, added a patch contributor.

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 26 Jan 2013 18:48:37 -0800

================================================================================
Version: 1.8.32
Patch: 00
Date:  January 23 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

No version change. New tarball, updated man page.

Some lintian changes for man page, escaped required -x type to \-x

--------------------------------------------------------------------------------
-- Harald Hope - Sat, 26 Jan 2013 18:39:03 -0800

================================================================================
Version: 1.8.32
Patch: 00
Date:  January 23 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Disabled -U in irc clients, with an exit error 
message.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 23 Jan 2013 14:45:38 -0800

================================================================================
Version: 1.8.31
Patch: 00
Date:  January 23 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New version, new tarball. Fixed overly verbose output for --version/-V in irc. 
Also updated and made cleaner the version data in verbose mode, non irc.

Fixed instance where program location would only show a dot . or relative path 
to inxi. Now in version full will show the full path, or should.

Basic version line now show:  inxi 1.8.30-00 (January 22 2013)

The verbose information/version shows the license information, website/irc 
support info, and a few other changes.

Also fixed a small bug where the copyright shows current year, not the actual 
year of the inxi copyright contained in the top comment header.

--------------------------------------------------------------------------------
-- Harald Hope - Wed, 23 Jan 2013 13:55:35 -0800

================================================================================
Version: 1.8.30
Patch: 00
Date:  January 22 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Changing compression of inxi.1.gz to gzip -9 to fit lintian tests. This won't 
matter to anyone at this point so no need to change anything.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 22 Jan 2013 19:27:54 -0800

================================================================================
Version: 1.8.30
Patch:  00
Date: January 22 2013
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

New Version, new tarball. Added inxi.changelog to tarball as well.

Continuing fixes for ARM cpus, it was noted that short form inxi failed to show 
cpu speed derived from bogomips. That's because of the old min/max output that 
short form used.

Updated that section to now use N/A as flag, and if N/A for min/max speed, use 
the speed given from first cpu array index, the one derived from bogomips for 
ARM/razberry pi.

Note that there is still no other ARM /proc/cpuinfo available to see if the 
razberry pi fixes work for all ARM cpus, but the fixes will stop hangs and 
endless loops at worst, and may also show some type of cpu speeds for ARM cpus 
that are not in razpi devices.

--------------------------------------------------------------------------------
-- Harald Hope - Tue, 22 Jan 2013 12:38:47 -0800

================================================================================
Script Version: 1.8.29
Patch: 00
Date: January 21 2012
--------------------------------------------------------------------------------
RELEASE NOTES:
--------------------------------------------------------------------------------

Bug fix, new version, new tarball.

quick work around fix for razberrie pi, get cpu data hung on arm /proc/cpuinfo 
because it doesn't use the standard processor : [digit] format, but uses a 
string in the processor : field, which then hangs inxi which was expecting an 
integer.

Corrected this with a work around, but it will require a lot more ARM 
/proc/cpuinfo samples before the support for ARM can be considered stable.

For cpu speed, following wikipedia, used bogomips being equal to 1x cpu speed, 
to derive cpu speed.

Better than nothing I guess, but will be wrong in other cases, particularly with 
dual core arm.

--------------------------------------------------------------------------------
-- Harald Hope - Mon, 21 Jan 2013 16:24:40 -0800
